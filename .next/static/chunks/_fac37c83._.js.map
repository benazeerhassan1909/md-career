{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/presentation/resolve.ts"],"sourcesContent":["import { defineLocations, PresentationPluginOptions } from 'sanity/presentation'\n\nexport const resolve: PresentationPluginOptions['resolve'] = {\n    locations: {\n        // Add more locations for other post types\n        post: defineLocations({\n            select: {\n                title: 'title',\n                slug: 'slug.current',\n            },\n            resolve: (doc) => ({\n                locations: [\n                    {\n                        title: doc?.title || 'Untitled',\n                        href: `/posts/${doc?.slug}`,\n                    },\n                    { title: 'Posts index', href: `/posts` },\n                ],\n            }),\n        }),\n    },\n}"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAgD;IACzD,WAAW;QACP,0CAA0C;QAC1C,MAAM,CAAA,GAAA,kKAAA,CAAA,kBAAe,AAAD,EAAE;YAClB,QAAQ;gBACJ,OAAO;gBACP,MAAM;YACV;YACA,SAAS,CAAC,MAAQ,CAAC;oBACf,WAAW;wBACP;4BACI,OAAO,KAAK,SAAS;4BACrB,MAAM,CAAC,OAAO,EAAE,KAAK,MAAM;wBAC/B;wBACA;4BAAE,OAAO;4BAAe,MAAM,CAAC,MAAM,CAAC;wBAAC;qBAC1C;gBACL,CAAC;QACL;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-04-03'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AACE;AADK,MAAM,aACX,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blockContentType.ts"],"sourcesContent":["import {defineType, defineArrayMember} from 'sanity'\nimport {ImageIcon} from '@sanity/icons'\n\n/**\n * This is the schema type for block content used in the post document type\n * Importing this type into the studio configuration's `schema` property\n * lets you reuse it in other document types with:\n *  {\n *    name: 'someName',\n *    title: 'Some title',\n *    type: 'blockContent'\n *  }\n */\n\nexport const blockContentType = defineType({\n  title: 'Block Content',\n  name: 'blockContent',\n  type: 'array',\n  of: [\n    defineArrayMember({\n      type: 'block',\n      // Styles let you define what blocks can be marked up as. The default\n      // set corresponds with HTML tags, but you can set any title or value\n      // you want, and decide how you want to deal with it where you want to\n      // use your content.\n      styles: [\n        {title: 'Normal', value: 'normal'},\n        {title: 'H1', value: 'h1'},\n        {title: 'H2', value: 'h2'},\n        {title: 'H3', value: 'h3'},\n        {title: 'H4', value: 'h4'},\n        {title: 'Quote', value: 'blockquote'},\n      ],\n      lists: [{title: 'Bullet', value: 'bullet'}],\n      // Marks let you mark up inline text in the Portable Text Editor\n      marks: {\n        // Decorators usually describe a single property – e.g. a typographic\n        // preference or highlighting\n        decorators: [\n          {title: 'Strong', value: 'strong'},\n          {title: 'Emphasis', value: 'em'},\n        ],\n        // Annotations can be any object structure – e.g. a link or a footnote.\n        annotations: [\n          {\n            title: 'URL',\n            name: 'link',\n            type: 'object',\n            fields: [\n              {\n                title: 'URL',\n                name: 'href',\n                type: 'url',\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    // You can add additional types here. Note that you can't use\n    // primitive types such as 'string' and 'number' in the same array\n    // as a block type.\n    defineArrayMember({\n      type: 'image',\n      icon: ImageIcon,\n      options: {hotspot: true},\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    }),\n  ],\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAaO,MAAM,mBAAmB,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACzC,OAAO;IACP,MAAM;IACN,MAAM;IACN,IAAI;QACF,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAChB,MAAM;YACN,qEAAqE;YACrE,qEAAqE;YACrE,sEAAsE;YACtE,oBAAoB;YACpB,QAAQ;gBACN;oBAAC,OAAO;oBAAU,OAAO;gBAAQ;gBACjC;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAS,OAAO;gBAAY;aACrC;YACD,OAAO;gBAAC;oBAAC,OAAO;oBAAU,OAAO;gBAAQ;aAAE;YAC3C,gEAAgE;YAChE,OAAO;gBACL,qEAAqE;gBACrE,6BAA6B;gBAC7B,YAAY;oBACV;wBAAC,OAAO;wBAAU,OAAO;oBAAQ;oBACjC;wBAAC,OAAO;wBAAY,OAAO;oBAAI;iBAChC;gBACD,uEAAuE;gBACvE,aAAa;oBACX;wBACE,OAAO;wBACP,MAAM;wBACN,MAAM;wBACN,QAAQ;4BACN;gCACE,OAAO;gCACP,MAAM;gCACN,MAAM;4BACR;yBACD;oBACH;iBACD;YACH;QACF;QACA,6DAA6D;QAC7D,kEAAkE;QAClE,mBAAmB;QACnB,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAChB,MAAM;YACN,MAAM,qJAAA,CAAA,YAAS;YACf,SAAS;gBAAC,SAAS;YAAI;YACvB,QAAQ;gBACN;oBACE,MAAM;oBACN,MAAM;oBACN,OAAO;gBACT;aACD;QACH;KACD;AACH","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/categoryType.ts"],"sourcesContent":["import {TagIcon} from '@sanity/icons'\nimport {defineField, defineType} from 'sanity'\n\nexport const categoryType = defineType({\n  name: 'category',\n  title: 'Category',\n  type: 'document',\n  icon: TagIcon,\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n      },\n    }),\n    defineField({\n      name: 'description',\n      type: 'text',\n    }),\n  ],\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,eAAe,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACrC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,qJAAA,CAAA,UAAO;IACb,QAAQ;QACN,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,SAAS;gBACP,QAAQ;YACV;QACF;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;KACD;AACH","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/postcategoryType.ts"],"sourcesContent":["import {TagIcon} from '@sanity/icons'\nimport {defineField, defineType} from 'sanity'\n\nexport const postcategoryType = defineType({\n  name: 'postcategory',\n  title: 'Post Category',\n  type: 'document',\n  icon: TagIcon,\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n      },\n    }),\n    defineField({\n      name: 'description',\n      type: 'text',\n    }),\n  ],\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,mBAAmB,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACzC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,qJAAA,CAAA,UAAO;IACb,QAAQ;QACN,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,SAAS;gBACP,QAAQ;YACV;QACF;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;KACD;AACH","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/postType.ts"],"sourcesContent":["import {DocumentTextIcon} from '@sanity/icons'\nimport {defineArrayMember, defineField, defineType} from 'sanity'\n\nexport const postType = defineType({\n  name: 'post',\n  title: 'Post',\n  type: 'document',\n  icon: DocumentTextIcon,\n  fields: [\n    defineField({\n      name: 'title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n      },\n    }),\n    defineField({\n      name: 'author',\n      type: 'reference',\n      to: {type: 'author'},\n    }),\n    defineField({\n      name: 'mainImage',\n      type: 'image',\n      options: {\n        hotspot: true,\n      },\n      fields: [\n        defineField({\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative text',\n        })\n      ]\n    }),\n    defineField({\n      name: 'categories',\n      type: 'array',\n      of: [defineArrayMember({type: 'reference', to: {type: 'category'}})],\n    }),\n    defineField({\n      name: 'publishedAt',\n      type: 'datetime',\n    }),\n    defineField({\n      name: 'body',\n      type: 'blockContent',\n    }),\n    defineField({\n      name: \"relatedPosts\",\n      type: \"array\",\n      of: [{ type: \"reference\", to: { type: \"post\" } }],\n    }),\n    defineField({\n      name: \"seo\",\n      type: \"seo\",\n    }),\n    defineField({\n      name: \"social\",\n      type: \"social\",\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'title',\n      author: 'author.name',\n      media: 'mainImage',\n    },\n    prepare(selection) {\n      const {author} = selection\n      return {...selection, subtitle: author && `by ${author}`}\n    },\n  },\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACjC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,qJAAA,CAAA,mBAAgB;IACtB,QAAQ;QACN,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,SAAS;gBACP,QAAQ;YACV;QACF;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,IAAI;gBAAC,MAAM;YAAQ;QACrB;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,SAAS;gBACP,SAAS;YACX;YACA,QAAQ;gBACN,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;oBACV,MAAM;oBACN,MAAM;oBACN,OAAO;gBACT;aACD;QACH;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,IAAI;gBAAC,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;oBAAC,MAAM;oBAAa,IAAI;wBAAC,MAAM;oBAAU;gBAAC;aAAG;QACtE;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;oBAAa,IAAI;wBAAE,MAAM;oBAAO;gBAAE;aAAE;QACnD;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;KACD;IACD,SAAS;QACP,QAAQ;YACN,OAAO;YACP,QAAQ;YACR,OAAO;QACT;QACA,SAAQ,SAAS;YACf,MAAM,EAAC,MAAM,EAAC,GAAG;YACjB,OAAO;gBAAC,GAAG,SAAS;gBAAE,UAAU,UAAU,CAAC,GAAG,EAAE,QAAQ;YAAA;QAC1D;IACF;AACF","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/authorType.ts"],"sourcesContent":["import {UserIcon} from '@sanity/icons'\nimport {defineArrayMember, defineField, defineType} from 'sanity'\n\nexport const authorType = defineType({\n  name: 'author',\n  title: 'Author',\n  type: 'document',\n  icon: UserIcon,\n  fields: [\n    defineField({\n      name: 'name',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      type: 'slug',\n      options: {\n        source: 'name',\n      },\n    }),\n    defineField({\n      name: 'image',\n      type: 'image',\n      options: {\n        hotspot: true,\n      },\n    }),\n    defineField({\n      name: 'bio',\n      type: 'array',\n      of: [\n        defineArrayMember({\n          type: 'block',\n          styles: [{title: 'Normal', value: 'normal'}],\n          lists: [],\n        }),\n      ],\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'name',\n      media: 'image',\n    },\n  },\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,aAAa,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACnC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,qJAAA,CAAA,WAAQ;IACd,QAAQ;QACN,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,SAAS;gBACP,QAAQ;YACV;QACF;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,SAAS;gBACP,SAAS;YACX;QACF;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,IAAI;gBACF,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;oBAChB,MAAM;oBACN,QAAQ;wBAAC;4BAAC,OAAO;4BAAU,OAAO;wBAAQ;qBAAE;oBAC5C,OAAO,EAAE;gBACX;aACD;QACH;KACD;IACD,SAAS;QACP,QAAQ;YACN,OAAO;YACP,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/siteSettings.js"],"sourcesContent":["const siteSettings = {\n    name: 'siteSettings',\n    title: 'Site Settings',\n    type: 'document',\n    __experimental_actions: ['update', 'publish'], // Prevents creation and deletion\n    groups: [\n        { name: 'generalSettings', title: 'General' },\n        { name: 'headerSettings', title: 'Header' },\n        { name: 'footerSettings', title: 'Footer' },\n        { name: 'pageSettings', title: 'Pages' },\n    ],\n    fields: [\n        {\n            name: 'siteTitle',\n            title: 'Site Title',\n            type: 'string',\n            group: 'generalSettings',\n        },\n        {\n            name: 'logo',\n            title: 'Site Logo',\n            type: 'image',\n            options: { hotspot: true },\n            group: 'generalSettings',\n            fields: [\n                {\n                    name: 'alt',\n                    title: 'Alt Text',\n                    type: 'string',\n                },\n                {\n                    name: 'width',\n                    title: 'Image Width',\n                    type: 'number',\n                },\n                {\n                    name: 'height',\n                    title: 'Image Height',\n                    type: 'number',\n                },\n            ],\n        },\n        {\n            name: 'header',\n            title: 'Header Settings',\n            type: 'object',\n            group: 'headerSettings',\n            fields: [\n                {\n                    name: 'menuItems',\n                    title: 'Menu Items',\n                    type: 'array',\n                    of: [\n                        {\n                            type: 'object',\n                            fields: [\n                                { name: 'title', title: 'Title', type: 'string' },\n                                { name: 'url', title: 'URL', type: 'string' },\n                                {\n                                    name: 'subMenu',\n                                    title: 'Sub Menu',\n                                    type: 'array',\n                                    of: [\n                                        {\n                                            type: 'object',\n                                            fields: [\n                                                { name: 'title', title: 'Title', type: 'string' },\n                                                { name: 'url', title: 'URL', type: 'string' },\n                                            ],\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            name: 'footer',\n            title: 'Footer Settings',\n            type: 'object',\n            group: 'footerSettings',\n            fields: [\n                {\n                    name: 'footerText',\n                    title: 'Footer Text',\n                    type: 'string',\n                },\n                {\n                    name: 'socialLinks',\n                    title: 'Social Links',\n                    type: 'array',\n                    of: [\n                        {\n                            type: 'object',\n                            fields: [\n                                { name: 'name', title: 'Platform Name', type: 'string' },\n                                { name: 'url', title: 'URL', type: 'url' },\n                            ],\n                        },\n                    ],\n                },\n            ],\n        },\n        // Additional general settings\n        {\n            name: 'generalSettings',\n            title: 'General Settings',\n            type: 'object',\n            group: 'generalSettings',\n            fields: [\n                {\n                    name: 'favicon',\n                    title: 'Favicon',\n                    type: 'image',\n                    options: { hotspot: true },\n                },\n                {\n                    name: 'seoDescription',\n                    title: 'SEO Description',\n                    type: 'text',\n                },\n            ],\n        },\n        {\n            name: \"homePage\",\n            type: \"reference\",\n            to: [{ type: \"page\" }],\n            group: 'pageSettings',\n        },\n    ],\n};\n\nexport default siteSettings;\n"],"names":[],"mappings":";;;AAAA,MAAM,eAAe;IACjB,MAAM;IACN,OAAO;IACP,MAAM;IACN,wBAAwB;QAAC;QAAU;KAAU;IAC7C,QAAQ;QACJ;YAAE,MAAM;YAAmB,OAAO;QAAU;QAC5C;YAAE,MAAM;YAAkB,OAAO;QAAS;QAC1C;YAAE,MAAM;YAAkB,OAAO;QAAS;QAC1C;YAAE,MAAM;YAAgB,OAAO;QAAQ;KAC1C;IACD,QAAQ;QACJ;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;QACX;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,SAAS;gBAAE,SAAS;YAAK;YACzB,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;aACH;QACL;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,IAAI;wBACA;4BACI,MAAM;4BACN,QAAQ;gCACJ;oCAAE,MAAM;oCAAS,OAAO;oCAAS,MAAM;gCAAS;gCAChD;oCAAE,MAAM;oCAAO,OAAO;oCAAO,MAAM;gCAAS;gCAC5C;oCACI,MAAM;oCACN,OAAO;oCACP,MAAM;oCACN,IAAI;wCACA;4CACI,MAAM;4CACN,QAAQ;gDACJ;oDAAE,MAAM;oDAAS,OAAO;oDAAS,MAAM;gDAAS;gDAChD;oDAAE,MAAM;oDAAO,OAAO;oDAAO,MAAM;gDAAS;6CAC/C;wCACL;qCACH;gCACL;6BACH;wBACL;qBACH;gBACL;aACH;QACL;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,IAAI;wBACA;4BACI,MAAM;4BACN,QAAQ;gCACJ;oCAAE,MAAM;oCAAQ,OAAO;oCAAiB,MAAM;gCAAS;gCACvD;oCAAE,MAAM;oCAAO,OAAO;oCAAO,MAAM;gCAAM;6BAC5C;wBACL;qBACH;gBACL;aACH;QACL;QACA,8BAA8B;QAC9B;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,SAAS;wBAAE,SAAS;oBAAK;gBAC7B;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;aACH;QACL;QACA;YACI,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAO;aAAE;YACtB,OAAO;QACX;KACH;AACL;uCAEe","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/pageType.ts"],"sourcesContent":["import { DocumentIcon } from \"@sanity/icons\";\nimport { defineField, defineType } from \"sanity\";\n\nexport const pageType = defineType({\n    name: \"page\",\n    title: \"Page\",\n    type: \"document\",\n    icon: DocumentIcon,\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"slug\",\n            type: \"slug\",\n            options: {\n                source: \"title\",\n            },\n        }),\n        defineField({\n            name: \"content\",\n            type: \"pageBuilder\",\n        }),\n        defineField({\n            name: \"mainImage\",\n            type: \"image\",\n            options: {\n                hotspot: true,\n            },\n        }),\n        defineField({\n            name: \"seo\",\n            type: \"seo\",\n        }),\n        defineField({\n            name: \"social\",\n            type: \"social\",\n        }),\n    ],\n    preview: {\n        select: {\n            title: \"title\",\n            subtitle: \"slug.current\",\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAC/B,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,qJAAA,CAAA,eAAY;IAClB,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,SAAS;gBACL,QAAQ;YACZ;QACJ;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,SAAS;gBACL,SAAS;YACb;QACJ;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,UAAU;QACd;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/pageBuilderType.ts"],"sourcesContent":["import { defineType, defineArrayMember } from \"sanity\";\n\nexport const pageBuilderType = defineType({\n    name: \"pageBuilder\",\n    type: \"array\",\n    of: [\n        defineArrayMember({ type: \"hero\" }),\n        defineArrayMember({ type: \"splitImage\" }),\n        defineArrayMember({ type: \"features\" }),\n        defineArrayMember({ type: \"faqs\" }),\n        defineArrayMember({ type: \"titleDescription\" }),\n        defineArrayMember({ type: \"logoList\" }),\n    ],\n    options: {\n        insertMenu: {\n            views: [\n                {\n                    name: \"grid\",\n                    previewImageUrl: (schemaType) => `/block-previews/${schemaType}.png`,\n                },\n            ],\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,kBAAkB,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACtC,MAAM;IACN,MAAM;IACN,IAAI;QACA,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAO;QACjC,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAa;QACvC,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAW;QACrC,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAO;QACjC,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAmB;QAC7C,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAW;KACxC;IACD,SAAS;QACL,YAAY;YACR,OAAO;gBACH;oBACI,MAAM;oBACN,iBAAiB,CAAC,aAAe,CAAC,gBAAgB,EAAE,WAAW,IAAI,CAAC;gBACxE;aACH;QACL;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/faqType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\n\nexport const faqType = defineType({\n    name: \"faq\",\n    title: \"FAQ\",\n    type: \"document\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"body\",\n            type: \"blockContent\",\n        }),\n    ],\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAC9B,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;AACL","debugId":null}},
    {"offset": {"line": 759, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/faqsType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\nimport { HelpCircleIcon } from \"@sanity/icons\";\n\n\nexport const faqsType = defineType({\n    name: \"faqs\",\n    title: \"FAQs\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"faqs\",\n            title: \"FAQs\",\n            type: \"array\",\n            of: [{ type: \"reference\", to: [{ type: \"faq\" }] }],\n        }),\n    ],\n    icon: HelpCircleIcon,\n    preview: {\n        select: {\n            title: \"title\",\n        },\n        prepare({ title }) {\n            return {\n                title,\n                subtitle: \"FAQs\",\n            };\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAC/B,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;oBAAa,IAAI;wBAAC;4BAAE,MAAM;wBAAM;qBAAE;gBAAC;aAAE;QACtD;KACH;IACD,MAAM,qJAAA,CAAA,iBAAc;IACpB,SAAS;QACL,QAAQ;YACJ,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE;YACb,OAAO;gBACH;gBACA,UAAU;YACd;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/featureType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\nimport { StarIcon } from \"@sanity/icons\";\n\nexport const featuresType = defineType({\n    name: \"features\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"features\",\n            type: \"array\",\n            of: [\n                defineField({\n                    name: \"feature\",\n                    type: \"object\",\n                    fields: [\n                        defineField({\n                            name: \"title\",\n                            type: \"string\",\n                        }),\n                        defineField({\n                            name: \"text\",\n                            type: \"string\",\n                        }),\n                    ],\n                }),\n            ],\n        }),\n    ],\n    // icon: StarIcon,\n    preview: {\n        select: {\n            title: \"title\",\n        },\n        prepare({ title }) {\n            return {\n                title,\n                subtitle: \"Features\",\n            };\n        },\n    },\n\n});"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,eAAe,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACnC,MAAM;IACN,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,IAAI;gBACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;oBACR,MAAM;oBACN,MAAM;oBACN,QAAQ;wBACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;wBACV;wBACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;wBACV;qBACH;gBACL;aACH;QACL;KACH;IACD,kBAAkB;IAClB,SAAS;QACL,QAAQ;YACJ,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE;YACb,OAAO;gBACH;gBACA,UAAU;YACd;QACJ;IACJ;AAEJ","debugId":null}},
    {"offset": {"line": 869, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/heroType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\nimport { TextIcon } from \"@sanity/icons\";\n\nexport const heroType = defineType({\n    name: \"hero\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"text\",\n            type: \"blockContent\",\n        }),\n        defineField({\n            name: \"image\",\n            type: \"image\",\n        }),\n    ],\n    icon: TextIcon,\n    preview: {\n        select: {\n            title: \"title\",\n            media: \"image\",\n        },\n        prepare({ title, media }) {\n            return {\n                title,\n                subtitle: \"Hero\",\n                media: media ?? TextIcon,\n            };\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAC/B,MAAM;IACN,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;IACD,MAAM,qJAAA,CAAA,WAAQ;IACd,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;YACpB,OAAO;gBACH;gBACA,UAAU;gBACV,OAAO,SAAS,qJAAA,CAAA,WAAQ;YAC5B;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/splitImageType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\nimport { BlockContentIcon } from \"@sanity/icons\";\n\nexport const splitImageType = defineType({\n    name: \"splitImage\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"orientation\",\n            type: \"string\",\n            options: {\n                list: [\n                    { value: \"imageLeft\", title: \"Image Left\" },\n                    { value: \"imageRight\", title: \"Image Right\" },\n                ],\n            },\n        }),\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: 'description',\n            title: 'Description',\n            type: \"blockContent\",\n        }),\n        defineField({\n            name: \"authorname\",\n            title: \"Author Name\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"authordesignation\",\n            title: \"Author Designation\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"authorimage\",\n            title: \"Author Image\",\n            type: \"image\",\n        }),\n        defineField({\n            name: \"image\",\n            type: \"image\",\n        }),\n    ],\n    icon: BlockContentIcon,\n\n    preview: {\n        select: {\n            title: \"title\",\n            media: \"image\",\n        },\n        prepare({ title, media }) {\n            return {\n                title,\n                subtitle: \"Text and Image\",\n                media\n            };\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,iBAAiB,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACrC,MAAM;IACN,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,SAAS;gBACL,MAAM;oBACF;wBAAE,OAAO;wBAAa,OAAO;oBAAa;oBAC1C;wBAAE,OAAO;wBAAc,OAAO;oBAAc;iBAC/C;YACL;QACJ;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;IACD,MAAM,qJAAA,CAAA,mBAAgB;IAEtB,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;YACpB,OAAO;gBACH;gBACA,UAAU;gBACV;YACJ;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/titleDescriptionType.ts"],"sourcesContent":["import { defineType, defineField } from 'sanity'\n\nexport const titleDescription = defineType({\n    name: 'titleDescription',\n    title: 'Title + Description',\n    type: 'object',\n    fields: [\n        defineField({\n            name: 'title',\n            title: 'Title',\n            type: 'string',\n        }),\n        defineField({\n            name: 'description',\n            title: 'Description',\n            type: \"blockContent\",\n        }),\n    ],\n    preview: {\n        select: {\n            title: 'title',\n            subtitle: 'description',\n        },\n    },\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,mBAAmB,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACvC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,UAAU;QACd;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/logoListType.ts"],"sourcesContent":["// /schemas/sections/logoList.ts\nimport { defineType, defineField } from 'sanity'\nimport { ImagesIcon } from '@sanity/icons'\n\nexport const logoList = defineType({\n    name: 'logoList',\n    title: 'Logo List',\n    type: 'object',\n    icon: ImagesIcon,\n    fields: [\n        defineField({\n            name: 'title',\n            title: 'Section Title',\n            type: 'string',\n        }),\n        defineField({\n            name: 'logos',\n            title: 'Logos',\n            type: 'array',\n            of: [\n                defineField({\n                    name: 'logo',\n                    type: 'image',\n                    options: { hotspot: true },\n                    fields: [\n                        {\n                            name: 'alt',\n                            type: 'string',\n                            title: 'Alt text',\n                        },\n                    ],\n                }),\n            ],\n        }),\n    ],\n    preview: {\n        select: {\n            title: 'title',\n        },\n        prepare({ title }) {\n            return {\n                title: title || 'Logo List Section',\n                subtitle: 'Logos',\n            }\n        },\n    },\n})\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;AAChC;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAC/B,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,qJAAA,CAAA,aAAU;IAChB,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,IAAI;gBACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;oBACR,MAAM;oBACN,MAAM;oBACN,SAAS;wBAAE,SAAS;oBAAK;oBACzB,QAAQ;wBACJ;4BACI,MAAM;4BACN,MAAM;4BACN,OAAO;wBACX;qBACH;gBACL;aACH;QACL;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE;YACb,OAAO;gBACH,OAAO,SAAS;gBAChB,UAAU;YACd;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/components/DoorsOpenInput.tsx"],"sourcesContent":["import { NumberInputProps, useFormValue } from 'sanity'\nimport { Stack, Text } from '@sanity/ui'\n\n\nfunction subtractMinutesFromDate(date: string, minutes: number) {\n    return new Date(new Date(date).getTime() - minutes * 60000)\n}\nexport function DoorsOpenInput(props: NumberInputProps) {\n    const date = useFormValue(['date']) as string | undefined\n\n\n    return (\n        <Stack space={3}>\n            {props.renderDefault(props)}\n            {typeof props.value === 'number' && date ? (\n                <Text size={1}>\n                    Doors open{' '}\n                    {subtractMinutesFromDate(date, props.value).toLocaleDateString(undefined, {\n                        month: 'long',\n                        day: 'numeric',\n                        year: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                    })}\n                </Text>\n            ) : null}\n        </Stack>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAGA,SAAS,wBAAwB,IAAY,EAAE,OAAe;IAC1D,OAAO,IAAI,KAAK,IAAI,KAAK,MAAM,OAAO,KAAK,UAAU;AACzD;AACO,SAAS,eAAe,KAAuB;;IAClD,MAAM,OAAO,CAAA,GAAA,0JAAA,CAAA,eAAY,AAAD,EAAE;QAAC;KAAO;IAGlC,qBACI,6LAAC,iLAAA,CAAA,QAAK;QAAC,OAAO;;YACT,MAAM,aAAa,CAAC;YACpB,OAAO,MAAM,KAAK,KAAK,YAAY,qBAChC,6LAAC,iLAAA,CAAA,OAAI;gBAAC,MAAM;;oBAAG;oBACA;oBACV,wBAAwB,MAAM,MAAM,KAAK,EAAE,kBAAkB,CAAC,WAAW;wBACtE,OAAO;wBACP,KAAK;wBACL,MAAM;wBACN,MAAM;wBACN,QAAQ;oBACZ;;;;;;uBAEJ;;;;;;;AAGhB;GArBgB;;QACC,0JAAA,CAAA,eAAY;;;KADb","debugId":null}},
    {"offset": {"line": 1160, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/eventType.jsx"],"sourcesContent":["import { defineField, defineType } from 'sanity'\nimport { CalendarIcon } from '@sanity/icons'\n\nimport { DoorsOpenInput } from '../../components/DoorsOpenInput'\n\nexport const eventType = defineType({\n    name: 'event',\n    title: 'Event',\n    type: 'document',\n    icon: CalendarIcon,\n    groups: [\n        { name: 'details', title: 'Details' },\n        { name: 'editorial', title: 'Editorial' },\n    ],\n    fieldsets: [\n        {\n            name: 'dates', title: 'Dates', options: {\n                collapsed: true,\n                columns: 2\n            }\n        },\n    ],\n    fields: [\n        defineField({ name: 'publishedAt', type: 'datetime', fieldset: 'dates' }),\n        defineField({ name: 'updatedAt', type: 'datetime', fieldset: 'dates' }),\n        defineField({\n            name: 'name',\n            type: 'string',\n            group: 'details',\n            validation: rule =>\n                rule\n                    .min(100)\n                    .max(200)\n                    .warning('For consistency, this summary should be between 100-200 characters')\n        }),\n        defineField({\n            name: 'slug',\n            type: 'slug',\n            'options': {\n                'source': 'name',\n            },\n            hidden: ({ document }) => !document?.name,\n            validation: Rule => Rule.required().error('Required to generate a page on the website'),\n            group: 'editorial',\n            readOnly: ({ currentUser }) => {\n                const isAdmin = currentUser?.roles.some((role) => role.name === 'administrator')\n\n                return !isAdmin\n            },\n        }),\n        defineField({\n            name: 'format',\n            type: 'string',\n            title: 'Event format',\n            options: {\n                list: ['in-person', 'virtual'],\n                layout: 'radio',\n            },\n            validation: (rule) => rule.required(),\n        }),\n        defineField({\n            name: 'eventType',\n            type: 'string',\n            options: {\n                list: ['in-person', 'virtual'],\n                layout: 'radio',\n            },\n            hidden: true, // hide from content creators, but keep it in code\n            deprecated: {\n                reason: 'Use the \"Event format\" field instead.'\n            },\n            readOnly: true,\n            group: 'details',\n        }),\n        defineField({\n            name: 'date',\n            type: 'datetime',\n            validation: rule => rule.required()\n        }),\n        defineField({\n            name: 'doorsOpen',\n            type: 'number',\n            validation: rule =>\n                rule.required().info('This field is important for...'),\n            description: (\n                <details>\n                    <summary>Why is this important?</summary>\n                    The Googlebot is an indexer of...\n                </details>\n            ),\n            initialValue: 60,\n            components: {\n                input: DoorsOpenInput,\n            }\n        }),\n        // Replace \"venue\" in the array of fields:\n        defineField({\n            name: 'venue',\n            type: 'reference',\n            to: [{ type: 'venue' }],\n            readOnly: ({ value, document }) => !value && document?.eventType === 'virtual',\n            validation: (rule) =>\n                rule.custom((value, context) => {\n                    if (value && context?.document?.eventType === 'virtual') {\n                        return 'Only in-person events can have a venue'\n                    }\n\n                    return true\n                }),\n        }),\n    ],\n    preview: {\n        select: {\n            title: 'name',\n            subtitle: 'format',\n\n        },\n        prepare({ title, subtitle }) {\n            \n            return {\n                title: title,\n                subtitle: subtitle,\n                media: CalendarIcon,\n\n            }\n        },\n    },\n})"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1328, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/artistType.ts"],"sourcesContent":["import { defineField, defineType } from 'sanity'\n\nexport const artistType = defineType({\n    name: 'artist',\n    title: 'Artist',\n    type: 'document',\n    fields: [\n        defineField({\n            name: 'name',\n            type: 'string',\n        }),\n        defineField({\n            name: 'event',\n            type: 'reference',\n            to: [{ type: 'event' }],\n        }),\n        defineField({\n            name: 'description',\n            type: 'text', // plain text that supports multiple lines\n            title: 'Artist description'\n        }),\n        defineField({\n            name: 'photo',\n            type: 'image',\n            title: 'Artist photo',\n            options: {\n                hotspot: true,\n            },\n        }),\n    ],\n})"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,aAAa,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACjC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAQ;aAAE;QAC3B;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;YACP,SAAS;gBACL,SAAS;YACb;QACJ;KACH;AACL","debugId":null}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/venueType.ts"],"sourcesContent":["import { defineField, defineType } from 'sanity'\n\nexport const venueType = defineType({\n    name: 'venue',\n    title: 'Venue',\n    type: 'document',\n    fields: [\n        defineField({\n            name: 'name',\n            type: 'string',\n        }),\n        defineField({\n            name: 'slug',\n            type: 'slug',\n        }),\n        defineField({\n            name: 'eventType',\n            type: 'string',\n        }),\n        defineField({\n            name: 'date',\n            type: 'datetime',\n        }),\n        defineField({\n            name: 'doorsOpen',\n            type: 'number',\n        }),\n        defineField({\n            name: 'venue',\n            type: 'reference',\n            to: [{ type: 'venue' }],\n        }),\n        defineField({\n            name: 'headline',\n            type: 'reference',\n            to: [{ type: 'artist' }],\n        }),\n        defineField({\n            name: 'image',\n            type: 'image',\n        }),\n        defineField({\n            name: 'details',\n            type: 'array',\n            of: [{ type: 'block' }],\n\n        }),\n        defineField({\n            name: 'tickets',\n            type: 'url',\n        }), defineField({\n            name: 'city',\n            type: 'string',\n        }),\n        defineField({\n            name: 'country',\n            type: 'string',\n        }),\n\n    ],\n    preview: {\n        select: {\n            title: 'name',\n            subtitle: 'date',\n        }\n    }\n})"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,YAAY,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAChC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAQ;aAAE;QAC3B;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAS;aAAE;QAC5B;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAQ;aAAE;QAE3B;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QAAI,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACZ,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KAEH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,UAAU;QACd;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 1465, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/components/TextAlignComponent.tsx"],"sourcesContent":["// TextAlignComponent.tsx\n\nimport React from 'react'\n\ninterface TextAlignProps {\n    value?: 'left' | 'right' | 'center' | 'justify';\n    children?: React.ReactNode;\n}\n\nexport const TextAlign = (props: TextAlignProps) => {\n    return (\n        <div style={{ textAlign: props.value ? props.value : 'left', width: '100%' }}>\n            {props.children}\n        </div>\n    )\n}"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;AASlB,MAAM,YAAY,CAAC;IACtB,qBACI,6LAAC;QAAI,OAAO;YAAE,WAAW,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG;YAAQ,OAAO;QAAO;kBACtE,MAAM,QAAQ;;;;;;AAG3B;KANa","debugId":null}},
    {"offset": {"line": 1496, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/mdpostType.tsx"],"sourcesContent":["import { defineField, defineType } from 'sanity'\n// RichTextEditor.js\nimport React from 'react'\nimport { TextAlign } from '@/components/TextAlignComponent'\n\nimport { CalendarIcon } from '@sanity/icons';\n\n\n\nconst HighlightIcon = () => (\n    <span style= {{ fontWeight: 'bold'}}> H </span>\n)\nconst HighlightDecorator = (props: { children: React.ReactNode }) => (\n    <span style={{ backgroundColor: 'yellow' }}>{props.children}</span>\n)\nexport const mdpostType = defineType({\n    name: 'mdpost',\n    title: 'MD Post',\n    type: 'document',\n    fields: [\n        defineField({\n            name: 'name',\n            type: 'string',\n        }),\n         defineField({\n            name: 'content',\n            type: 'array',\n            of: [\n                {\n                    type: 'block', // Rich text content\n                    marks: {\n                        decorators: [\n                            { title: 'Strong', value: 'strong' },\n                            { title: 'Emphasis', value: 'em' },\n                            { title: 'Code', value: 'code' },\n                            {\n                                title: 'Highlight', value: 'highlight', icon: HighlightIcon, component: HighlightDecorator\n\n                            },\n                             { title: 'Left', value: 'left', component: (props) => TextAlign(props), icon: CalendarIcon },\n                                                { title: 'Center', value: 'center', component: (props) => TextAlign(props), icon: CalendarIcon },\n                                                { title: 'Right', value: 'right', component: (props) => TextAlign(props), icon: CalendarIcon },\n                        ],\n                        annotations: [\n                            {\n                                name: 'link',\n                                type: 'object',\n                                title: 'URL',\n                                fields: [\n                                    {\n                                        title: 'URL',\n                                        name: 'href',   // URL field\n                                        type: 'url',\n                                    },\n                                ],\n                            },\n                            // text color\n                            {\n                                name: 'textColor',\n                                type: 'object',\n                                title: 'Text Color',\n                                fields: [\n                                    {\n                                        name: 'color',\n                                        type: 'string',\n                                        options: {\n                                            list: ['red', 'green', 'blue'],\n                                        },\n                                    },\n                                ],\n                            },\n                            // background color\n                            {\n                                name: 'backgroundColor',\n                                type: 'object',\n                                title: 'Background Color',\n                                fields: [\n                                    {\n                                        name: 'bgcolor',\n                                        type: 'string',\n                                        options: {\n                                            list: ['red', 'green', 'blue'],\n                                        },\n                                    },\n                                ],\n                            },\n\n                        ],\n                    },\n\n                },\n                {\n                    type: 'image',\n                    options: {\n                        hotspot: true,\n                    },\n                    fields: [\n                        {\n                            name: 'alt',\n                            title: 'Alt Text',\n                            type: 'string',\n                        },\n                        {\n                            name: 'width',\n                            title: 'Image Width',\n                            type: 'number',\n                        },\n                        {\n                            name: 'height',\n                            title: 'Image Height',\n                            type: 'number',\n                        },\n                    ],\n                    preview: {\n                        select: {\n                            image: 'asset',\n                            width: 'asset.metadata.dimensions.width',\n                            height: 'asset.metadata.dimensions.height',\n                        },\n                        prepare({ image, width, height }) {\n                            return {\n                                title: `Image (${width}x${height})`,\n                                media: image,\n                            };\n                        },\n                    },\n                },\n            ],\n        }),\n        defineField({\n            name: 'description',\n            type: 'blockContent', // This must match the blockContent schema name\n        }),\n        defineField({\n            name: 'slug',\n            type: 'slug',\n            'options': {\n                'source': 'name',\n            },\n            hidden: ({ document }) => !document?.name,\n            validation: Rule => Rule.required().error('Required to generate a page on the website'),\n        }),\n        {\n            name: 'postcategories',\n            title: 'Post Categories',\n            type: 'array',\n            of: [{ type: 'reference', to: [{ type: 'postcategory' }] }],\n        },\n        defineField({\n            name: 'postType',\n            type: 'array',\n            of: [{ type: 'string' }],\n            options: {\n                list: [\n                    { title: 'Learning Development', value: 'learning-development' },\n                    { title: 'Project Learning', value: 'project-learning' },\n                    { title: 'Project Closure Meeting', value: 'project-closure-meeting' },\n                    { title: 'Technical Learning', value: 'technical-learning' },\n                    { title: 'WordPress VIP', value: 'wordpress-VIP' },\n                    { title: 'Uncategorized', value: 'uncategorized' },\n                ],\n            },\n        }),\n        defineField({\n            name: 'date',\n            type: 'datetime',\n            validation: rule => rule.required()\n        }),\n\n        defineField({\n            name: 'createdBy',\n            type: 'string',\n        }),\n        defineField({\n            name: 'mainImage',\n            type: 'image',\n            title: 'Main Image',\n            options: { hotspot: true }, // Enables cropping\n            fields: [\n                {\n                    name: 'alt',\n                    type: 'string',\n                    title: 'Alt Text',\n                },\n                {\n                    name: 'width',\n                    type: 'number',\n                    title: 'Image Width',\n                },\n                {\n                    name: 'height',\n                    type: 'number',\n                    title: 'Image Height',\n                },\n            ],\n        }),\n    ],\n})"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1788, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/pageSettings.js"],"sourcesContent":["\nexport default {\n    name: 'pageSettings',\n    title: 'Page Settings',\n    type: 'document',\n    // __experimental_actions: ['update', 'publish'], // Prevents creation and deletion\n    \n    fields: [\n        {\n            name: \"mdheading\",\n            type: \"string\",\n            title: \"MD Post Page Heading\",\n            description: \"Main heading for the MD post listing page\",\n        },\n        {\n            name: \"mdsubheading\",\n            type: \"string\",\n            title: \"MD Post Subheading\",\n            description: \"Secondary heading for the MD post listingpage\",\n\n        },\n    ],\n};\n"],"names":[],"mappings":";;;uCACe;IACX,MAAM;IACN,OAAO;IACP,MAAM;IACN,mFAAmF;IAEnF,QAAQ;QACJ;YACI,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACjB;QACA;YACI,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QAEjB;KACH;AACL","debugId":null}},
    {"offset": {"line": 1820, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/seoType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\n\nexport const seoType = defineType({\n    name: \"seo\",\n    title: \"SEO\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"title\",\n            description: \"If provided, this will override the title field\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"description\",\n            type: \"text\",\n        }),\n        defineField({\n            name: \"image\",\n            type: \"image\",\n            options: { hotspot: true }\n        }),\n        defineField({\n            name: \"noIndex\",\n            type: \"boolean\",\n        }),\n    ],\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IAC9B,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,aAAa;YACb,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,SAAS;gBAAE,SAAS;YAAK;QAC7B;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;AACL","debugId":null}},
    {"offset": {"line": 1861, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/redirectType.ts"],"sourcesContent":["import { defineField, defineType, SanityDocumentLike } from \"sanity\";\nimport { LinkIcon } from \"@sanity/icons\";\n\nfunction isValidInternalPath(value: string | undefined) {\n    if (!value) {\n        return \"Value is required\";\n    } else if (!value.startsWith(\"/\")) {\n        return \"Internal paths must start with /\";\n    } else if (/[^a-zA-Z0-9\\-_/:]/.test(value)) {\n        return \"Source path contains invalid characters\";\n    } else if (/:[^/]+:/.test(value)) {\n        return \"Parameters can only contain one : directly after /\";\n    } else if (\n        value.split(\"/\").some((part) => part.includes(\":\") && !part.startsWith(\":\"))\n    ) {\n        return \"The : character can only appear directly after /\";\n    }\n    return true;\n}\n\nfunction isValidUrl(value: string | undefined) {\n    try {\n        new URL(value || \"\");\n        return true;\n    } catch {\n        return \"Invalid URL\";\n    }\n}\n\nexport const redirectType = defineType({\n    name: \"redirect\",\n    title: \"Redirect\",\n    type: \"document\",\n    icon: LinkIcon,\n    validation: (Rule) =>\n        Rule.custom((doc: SanityDocumentLike | undefined) => {\n            if (doc && doc.source === doc.destination) {\n                return [\"source\", \"destination\"].map((field) => ({\n                    message: \"Source and destination cannot be the same\",\n                    path: [field],\n                }));\n            }\n\n            return true;\n        }),\n    fields: [\n        defineField({\n            name: \"source\",\n            type: \"string\",\n            validation: (Rule) => Rule.required().custom(isValidInternalPath),\n        }),\n        defineField({\n            name: \"destination\",\n            type: \"string\",\n            validation: (Rule) =>\n                Rule.required().custom((value: string | undefined) => {\n                    const urlValidation = isValidUrl(value);\n                    const pathValidation = isValidInternalPath(value);\n\n                    if (urlValidation === true || pathValidation === true) {\n                        return true;\n                    }\n                    return typeof urlValidation === \"boolean\"\n                        ? urlValidation\n                        : pathValidation;\n                }),\n        }),\n        defineField({\n            name: \"permanent\",\n            description: \"Should the redirect be permanent (301) or temporary (302)\",\n            type: \"boolean\",\n            initialValue: true,\n        }),\n        defineField({\n            name: \"isEnabled\",\n            description: \"Toggle this redirect on or off\",\n            type: \"boolean\",\n            initialValue: true,\n        }),\n    ],\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,SAAS,oBAAoB,KAAyB;IAClD,IAAI,CAAC,OAAO;QACR,OAAO;IACX,OAAO,IAAI,CAAC,MAAM,UAAU,CAAC,MAAM;QAC/B,OAAO;IACX,OAAO,IAAI,oBAAoB,IAAI,CAAC,QAAQ;QACxC,OAAO;IACX,OAAO,IAAI,UAAU,IAAI,CAAC,QAAQ;QAC9B,OAAO;IACX,OAAO,IACH,MAAM,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,OAAS,KAAK,QAAQ,CAAC,QAAQ,CAAC,KAAK,UAAU,CAAC,OACzE;QACE,OAAO;IACX;IACA,OAAO;AACX;AAEA,SAAS,WAAW,KAAyB;IACzC,IAAI;QACA,IAAI,IAAI,SAAS;QACjB,OAAO;IACX,EAAE,OAAM;QACJ,OAAO;IACX;AACJ;AAEO,MAAM,eAAe,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACnC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,qJAAA,CAAA,WAAQ;IACd,YAAY,CAAC,OACT,KAAK,MAAM,CAAC,CAAC;YACT,IAAI,OAAO,IAAI,MAAM,KAAK,IAAI,WAAW,EAAE;gBACvC,OAAO;oBAAC;oBAAU;iBAAc,CAAC,GAAG,CAAC,CAAC,QAAU,CAAC;wBAC7C,SAAS;wBACT,MAAM;4BAAC;yBAAM;oBACjB,CAAC;YACL;YAEA,OAAO;QACX;IACJ,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,YAAY,CAAC,OAAS,KAAK,QAAQ,GAAG,MAAM,CAAC;QACjD;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,YAAY,CAAC,OACT,KAAK,QAAQ,GAAG,MAAM,CAAC,CAAC;oBACpB,MAAM,gBAAgB,WAAW;oBACjC,MAAM,iBAAiB,oBAAoB;oBAE3C,IAAI,kBAAkB,QAAQ,mBAAmB,MAAM;wBACnD,OAAO;oBACX;oBACA,OAAO,OAAO,kBAAkB,YAC1B,gBACA;gBACV;QACR;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,aAAa;YACb,MAAM;YACN,cAAc;QAClB;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,aAAa;YACb,MAAM;YACN,cAAc;QAClB;KACH;AACL","debugId":null}},
    {"offset": {"line": 1950, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/socialType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\n\nexport const socialType = defineType({\n    name: \"social\",\n    title: \"Social\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"linkedIn\",\n            title: \"LinkedIn\",\n            type: \"text\",\n            rows: 3,\n        }),\n        defineField({\n            name: \"x\",\n            description: \"Formerly known as Twitter\",\n            type: \"text\",\n            rows: 2,\n        }),\n    ],\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,aAAa,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;IACjC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,aAAa;YACb,MAAM;YACN,MAAM;QACV;KACH;AACL","debugId":null}},
    {"offset": {"line": 1983, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/index.ts"],"sourcesContent":["import { type SchemaTypeDefinition } from 'sanity'\n\nimport {blockContentType} from './blockContentType'\nimport { categoryType } from './categoryType'\nimport { postcategoryType } from './postcategoryType'\nimport {postType} from './postType'\nimport { authorType } from './authorType'\nimport siteSettings from './siteSettings'\n\nimport { pageType } from \"./pageType\";\nimport { pageBuilderType } from \"./pageBuilderType\";\nimport { faqType } from \"./blocks/faqType\";\nimport { faqsType } from \"./blocks/faqsType\";\nimport { featuresType } from \"./blocks/featureType\";\nimport { heroType } from \"./blocks/heroType\";\nimport { splitImageType } from \"./blocks/splitImageType\";\nimport { titleDescription } from './blocks/titleDescriptionType'\nimport { logoList } from './blocks/logoListType'\nimport { eventType } from './eventType'\nimport { artistType } from './artistType'\nimport { venueType } from './venueType'\nimport { mdpostType } from './mdpostType'\nimport pageSettings from \"./pageSettings\";\nimport { seoType } from \"./seoType\";\nimport { redirectType } from \"./redirectType\";\nimport { socialType } from \"./socialType\";\n\nexport const schema: { types: SchemaTypeDefinition[] } = {\n  types: [blockContentType, categoryType, postType, authorType, postcategoryType, seoType, redirectType, socialType,\n    eventType, artistType, venueType, mdpostType, pageSettings, siteSettings, pageType, pageBuilderType, faqType,\n    faqsType, featuresType, heroType, splitImageType, titleDescription, logoList\n  ],\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEO,MAAM,SAA4C;IACvD,OAAO;QAAC,mJAAA,CAAA,mBAAgB;QAAE,+IAAA,CAAA,eAAY;QAAE,2IAAA,CAAA,WAAQ;QAAE,6IAAA,CAAA,aAAU;QAAE,mJAAA,CAAA,mBAAgB;QAAE,0IAAA,CAAA,UAAO;QAAE,+IAAA,CAAA,eAAY;QAAE,6IAAA,CAAA,aAAU;QAC/G,6IAAA,CAAA,YAAS;QAAE,6IAAA,CAAA,aAAU;QAAE,4IAAA,CAAA,YAAS;QAAE,8IAAA,CAAA,aAAU;QAAE,+IAAA,CAAA,UAAY;QAAE,+IAAA,CAAA,UAAY;QAAE,2IAAA,CAAA,WAAQ;QAAE,kJAAA,CAAA,kBAAe;QAAE,oJAAA,CAAA,UAAO;QAC5G,qJAAA,CAAA,WAAQ;QAAE,wJAAA,CAAA,eAAY;QAAE,qJAAA,CAAA,WAAQ;QAAE,2JAAA,CAAA,iBAAc;QAAE,iKAAA,CAAA,mBAAgB;QAAE,yJAAA,CAAA,WAAQ;KAC7E;AACH","debugId":null}},
    {"offset": {"line": 2068, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/structure.ts"],"sourcesContent":["import type { StructureResolver } from 'sanity/structure'\nimport { CalendarIcon, DocumentIcon, CogIcon } from '@sanity/icons'\n\n\n// https://www.sanity.io/docs/structure-builder-cheat-sheet\nexport const structure: StructureResolver = (S) =>\n  S.list()\n    .title('Blog')\n    .items([\n      S.documentTypeListItem('post').title('Posts'),\n      S.documentTypeListItem('postcategory').title('Post Categories'),\n      S.documentTypeListItem('author').title('Authors'),\n      S.divider(),\n      S.documentTypeListItem('mdpost').title('MD Posts').icon(CalendarIcon),\n      S.documentTypeListItem('category').title('Categories').icon(DocumentIcon),\n      S.divider(),\n      S.listItem()\n        .title('Site Settings')\n        .icon(CogIcon)\n        .child(\n          S.document()\n            .schemaType('siteSettings')\n            .documentId('siteSettings') // 👈 Forces a single document\n        ),\n      S.listItem()\n        .title('MD Post Settings')\n        .icon(CogIcon)\n        .child(\n          S.document()\n            .schemaType('pageSettings')\n            .documentId('pageSettings') // 👈 Forces a single document\n        ),\n      S.divider(),\n      S.documentTypeListItem(\"page\").title(\"Pages\"),\n      S.documentTypeListItem(\"faq\").title(\"FAQs\"),\n      S.divider(),\n      ...S.documentTypeListItems().filter(\n        (item) =>\n          item.getId() &&\n          ![\"pageSettings\", \"category\", \"siteSettings\", \"page\", \"faq\", \"mdpost\", 'post', 'postcategory', 'author'].includes(item.getId()!)\n      ),\n    ])\n"],"names":[],"mappings":";;;AACA;;AAIO,MAAM,YAA+B,CAAC,IAC3C,EAAE,IAAI,GACH,KAAK,CAAC,QACN,KAAK,CAAC;QACL,EAAE,oBAAoB,CAAC,QAAQ,KAAK,CAAC;QACrC,EAAE,oBAAoB,CAAC,gBAAgB,KAAK,CAAC;QAC7C,EAAE,oBAAoB,CAAC,UAAU,KAAK,CAAC;QACvC,EAAE,OAAO;QACT,EAAE,oBAAoB,CAAC,UAAU,KAAK,CAAC,YAAY,IAAI,CAAC,qJAAA,CAAA,eAAY;QACpE,EAAE,oBAAoB,CAAC,YAAY,KAAK,CAAC,cAAc,IAAI,CAAC,qJAAA,CAAA,eAAY;QACxE,EAAE,OAAO;QACT,EAAE,QAAQ,GACP,KAAK,CAAC,iBACN,IAAI,CAAC,qJAAA,CAAA,UAAO,EACZ,KAAK,CACJ,EAAE,QAAQ,GACP,UAAU,CAAC,gBACX,UAAU,CAAC,gBAAgB,8BAA8B;;QAEhE,EAAE,QAAQ,GACP,KAAK,CAAC,oBACN,IAAI,CAAC,qJAAA,CAAA,UAAO,EACZ,KAAK,CACJ,EAAE,QAAQ,GACP,UAAU,CAAC,gBACX,UAAU,CAAC,gBAAgB,8BAA8B;;QAEhE,EAAE,OAAO;QACT,EAAE,oBAAoB,CAAC,QAAQ,KAAK,CAAC;QACrC,EAAE,oBAAoB,CAAC,OAAO,KAAK,CAAC;QACpC,EAAE,OAAO;WACN,EAAE,qBAAqB,GAAG,MAAM,CACjC,CAAC,OACC,KAAK,KAAK,MACV,CAAC;gBAAC;gBAAgB;gBAAY;gBAAgB;gBAAQ;gBAAO;gBAAU;gBAAQ;gBAAgB;aAAS,CAAC,QAAQ,CAAC,KAAK,KAAK;KAEjI","debugId":null}},
    {"offset": {"line": 2110, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/sanity.config.ts"],"sourcesContent":["'use client'\n\n/**\n * This configuration is used to for the Sanity Studio that’s mounted on the `/app/studio/[[...tool]]/page.tsx` route\n */\nimport { defineConfig, buildLegacyTheme } from 'sanity'\nimport { visionTool } from '@sanity/vision'\nimport { structureTool } from 'sanity/structure'\nimport { presentationTool } from 'sanity/presentation'\nimport { resolve } from '@/sanity/presentation/resolve'\nimport { assist } from \"@sanity/assist\";\n\nimport {\n  dashboardTool,\n  sanityTutorialsWidget,\n  projectUsersWidget,\n  projectInfoWidget,\n} from \"@sanity/dashboard\";\nimport { media } from 'sanity-plugin-media'\n\nimport { apiVersion, dataset, projectId } from './src/sanity/env'\nimport { schema } from './src/sanity/schemaTypes'\nimport { structure } from './src/sanity/structure'\nimport imageUrlBuilder from '@sanity/image-url';\n\n\nconst props = {\n  '--my-white': '#fff',\n  '--my-black': '#1a1a1a',\n  '--my-blue': '#4285f4',\n  '--my-red': '#db4437',\n  '--my-yellow': '#f4b400',\n  '--my-green': '#0f9d58',\n}\n\nexport const myTheme = buildLegacyTheme({\n  /* Base theme colors */\n  '--black': props['--my-black'],\n  '--white': props['--my-white'],\n\n  '--gray': '#666',\n  '--gray-base': '#666',\n\n  '--component-bg': props['--my-white'],\n  '--component-text-color': props['--my-black'],\n\n  /* Brand */\n  '--brand-primary': props['--my-blue'],\n\n  // Default button\n  '--default-button-color': '#666',\n  '--default-button-primary-color': props['--my-blue'],\n  '--default-button-success-color': props['--my-green'],\n  '--default-button-warning-color': props['--my-yellow'],\n  '--default-button-danger-color': props['--my-red'],\n\n  /* State */\n  '--state-info-color': props['--my-blue'],\n  '--state-success-color': props['--my-green'],\n  '--state-warning-color': props['--my-yellow'],\n  '--state-danger-color': props['--my-red'],\n\n  /* Navbar */\n  '--main-navigation-color': props['--my-black'],\n  '--main-navigation-color--inverted': props['--my-white'],\n\n  '--focus-color': props['--my-blue'],\n})\n\nexport default defineConfig({\n  basePath: '/studio',\n  projectId,\n  dataset,\n  schema,\n  theme: myTheme,\n  icon: () => '🎓',\n  document: {\n    newDocumentOptions: (prev, { creationContext }) => {\n      if (creationContext.type === 'global') {\n        return prev.filter((docType) => !['siteSettings', 'pageSettings'].includes(docType.templateId));\n      }\n      return prev;\n    },\n  },\n  plugins: [\n    structureTool({ structure }),\n    visionTool({ defaultApiVersion: apiVersion }),\n    presentationTool({\n      resolve,\n      previewUrl: {\n        previewMode: {\n          enable: '/api/draft-mode/enable',\n        },\n      },\n    }),\n    media(),\n    assist(),\n    dashboardTool({\n      widgets: [\n        sanityTutorialsWidget(),\n        projectInfoWidget(),\n        projectUsersWidget(),\n      ]\n    }),\n\n  ],\n  tools: (prev, { currentUser }) => {\n    const isAdmin = currentUser?.roles.some((role) => role.name === 'administrator')\n\n    if (isAdmin) {\n      return prev\n    }\n\n    return prev.filter((tool) => tool.name !== 'vision')\n  },\n})\nconst builder = imageUrlBuilder({ projectId, dataset });\n\ninterface ImageSource {\n  asset: {\n    _ref: string;\n    _type: string;\n  };\n}\n\nexport const urlFor = (source: ImageSource) => builder.image(source);"],"names":[],"mappings":";;;;;AAEA;;CAEC,GACD;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AAvBA;;;;;;;;;;;;;AA0BA,MAAM,QAAQ;IACZ,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,eAAe;IACf,cAAc;AAChB;AAEO,MAAM,UAAU,CAAA,GAAA,0JAAA,CAAA,mBAAgB,AAAD,EAAE;IACtC,qBAAqB,GACrB,WAAW,KAAK,CAAC,aAAa;IAC9B,WAAW,KAAK,CAAC,aAAa;IAE9B,UAAU;IACV,eAAe;IAEf,kBAAkB,KAAK,CAAC,aAAa;IACrC,0BAA0B,KAAK,CAAC,aAAa;IAE7C,SAAS,GACT,mBAAmB,KAAK,CAAC,YAAY;IAErC,iBAAiB;IACjB,0BAA0B;IAC1B,kCAAkC,KAAK,CAAC,YAAY;IACpD,kCAAkC,KAAK,CAAC,aAAa;IACrD,kCAAkC,KAAK,CAAC,cAAc;IACtD,iCAAiC,KAAK,CAAC,WAAW;IAElD,SAAS,GACT,sBAAsB,KAAK,CAAC,YAAY;IACxC,yBAAyB,KAAK,CAAC,aAAa;IAC5C,yBAAyB,KAAK,CAAC,cAAc;IAC7C,wBAAwB,KAAK,CAAC,WAAW;IAEzC,UAAU,GACV,2BAA2B,KAAK,CAAC,aAAa;IAC9C,qCAAqC,KAAK,CAAC,aAAa;IAExD,iBAAiB,KAAK,CAAC,YAAY;AACrC;uCAEe,CAAA,GAAA,0JAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,UAAU;IACV,WAAA,uHAAA,CAAA,YAAS;IACT,SAAA,uHAAA,CAAA,UAAO;IACP,QAAA,wIAAA,CAAA,SAAM;IACN,OAAO;IACP,MAAM,IAAM;IACZ,UAAU;QACR,oBAAoB,CAAC,MAAM,EAAE,eAAe,EAAE;YAC5C,IAAI,gBAAgB,IAAI,KAAK,UAAU;gBACrC,OAAO,KAAK,MAAM,CAAC,CAAC,UAAY,CAAC;wBAAC;wBAAgB;qBAAe,CAAC,QAAQ,CAAC,QAAQ,UAAU;YAC/F;YACA,OAAO;QACT;IACF;IACA,SAAS;QACP,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE;YAAE,WAAA,6HAAA,CAAA,YAAS;QAAC;QAC1B,CAAA,GAAA,uKAAA,CAAA,aAAU,AAAD,EAAE;YAAE,mBAAmB,uHAAA,CAAA,aAAU;QAAC;QAC3C,CAAA,GAAA,kKAAA,CAAA,mBAAgB,AAAD,EAAE;YACf,SAAA,2IAAA,CAAA,UAAO;YACP,YAAY;gBACV,aAAa;oBACX,QAAQ;gBACV;YACF;QACF;QACA,CAAA,GAAA,8JAAA,CAAA,QAAK,AAAD;QACJ,CAAA,GAAA,uJAAA,CAAA,SAAM,AAAD;QACL,CAAA,GAAA,yJAAA,CAAA,gBAAa,AAAD,EAAE;YACZ,SAAS;gBACP,CAAA,GAAA,yJAAA,CAAA,wBAAqB,AAAD;gBACpB,CAAA,GAAA,yJAAA,CAAA,oBAAiB,AAAD;gBAChB,CAAA,GAAA,yJAAA,CAAA,qBAAkB,AAAD;aAClB;QACH;KAED;IACD,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE;QAC3B,MAAM,UAAU,aAAa,MAAM,KAAK,CAAC,OAAS,KAAK,IAAI,KAAK;QAEhE,IAAI,SAAS;YACX,OAAO;QACT;QAEA,OAAO,KAAK,MAAM,CAAC,CAAC,OAAS,KAAK,IAAI,KAAK;IAC7C;AACF;AACA,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,UAAe,AAAD,EAAE;IAAE,WAAA,uHAAA,CAAA,YAAS;IAAE,SAAA,uHAAA,CAAA,UAAO;AAAC;AAS9C,MAAM,SAAS,CAAC,SAAwB,QAAQ,KAAK,CAAC","debugId":null}}]
}