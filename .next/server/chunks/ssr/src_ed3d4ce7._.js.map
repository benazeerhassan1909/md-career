{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/components/DisableDraftMode.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DisableDraftMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisableDraftMode() from the server but DisableDraftMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DisableDraftMode.tsx <module evaluation>\",\n    \"DisableDraftMode\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qEACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/components/DisableDraftMode.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DisableDraftMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisableDraftMode() from the server but DisableDraftMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DisableDraftMode.tsx\",\n    \"DisableDraftMode\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iDACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-04-03'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\n\nimport { apiVersion, dataset, projectId } from '../env'\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true, // Set to false if statically generating pages, using ISR or tag-based revalidation\n  stega: { studioUrl: '/studio' },\n\n})\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,MAAM,SAAS,CAAA,GAAA,8KAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,oHAAA,CAAA,YAAS;IACT,SAAA,oHAAA,CAAA,UAAO;IACP,YAAA,oHAAA,CAAA,aAAU;IACV,QAAQ;IACR,OAAO;QAAE,WAAW;IAAU;AAEhC","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/token.ts"],"sourcesContent":["export const token = process.env.SANITY_API_READ_TOKEN\n\nif (!token) {\n    throw new Error('Missing SANITY_API_READ_TOKEN')\n}"],"names":[],"mappings":";;;AAAO,MAAM,QAAQ,QAAQ,GAAG,CAAC,qBAAqB;AAEtD,IAAI,CAAC,OAAO;IACR,MAAM,IAAI,MAAM;AACpB","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/live.ts"],"sourcesContent":["// Querying with \"sanityFetch\" will keep content automatically updated\n// Before using it, import and render \"<SanityLive />\" in your layout, see\n// https://github.com/sanity-io/next-sanity#live-content-api for more information.\nimport { defineLive } from \"next-sanity\";\nimport { client } from './client'\nimport { token } from \"@/sanity/lib/token\"\n\n\nexport const { sanityFetch, SanityLive } = defineLive({ \n  client: client.withConfig({ \n    // Live content is currently only available on the experimental API\n    // https://www.sanity.io/docs/api-versioning\n    apiVersion: 'vX' \n  }),\n  browserToken: token,\n  serverToken: token,\n});\n"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,0EAA0E;AAC1E,kFAAkF;;;;;AAClF;AACA;AACA;;;;AAGO,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2KAAA,CAAA,aAAU,AAAD,EAAE;IACpD,QAAQ,8HAAA,CAAA,SAAM,CAAC,UAAU,CAAC;QACxB,mEAAmE;QACnE,4CAA4C;QAC5C,YAAY;IACd;IACA,cAAc,6HAAA,CAAA,QAAK;IACnB,aAAa,6HAAA,CAAA,QAAK;AACpB","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/image.ts"],"sourcesContent":["import createImageUrlBuilder from '@sanity/image-url'\nimport { SanityImageSource } from \"@sanity/image-url/lib/types/types\";\n\nimport { dataset, projectId } from '../env'\n\n// https://www.sanity.io/docs/image-url\nconst builder = createImageUrlBuilder({ projectId, dataset })\n\nexport const urlFor = (source: SanityImageSource) => {\n  return builder.image(source)\n}\n"],"names":[],"mappings":";;;AAAA;AAGA;;;AAEA,uCAAuC;AACvC,MAAM,UAAU,CAAA,GAAA,gKAAA,CAAA,UAAqB,AAAD,EAAE;IAAE,WAAA,oHAAA,CAAA,YAAS;IAAE,SAAA,oHAAA,CAAA,UAAO;AAAC;AAEpD,MAAM,SAAS,CAAC;IACrB,OAAO,QAAQ,KAAK,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/app/header.tsx"],"sourcesContent":["// create header content\n\nimport { sanityFetch } from '@/sanity/lib/live';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { urlFor } from \"@/sanity/lib/image\";\n\n\nconst HEADER_QUERY = `*[_type == \"siteSettings\" && _id == \"siteSettings\"][0]{ siteTitle, logo, header }`;\n\n\nexport default async function Header() {\n\n    const { data: siteSettings } = await sanityFetch({ query: HEADER_QUERY });\n\n    const { siteTitle, logo, header }: {\n        siteTitle?: string;\n        logo?: { asset?: { _ref: string }; url?: string; alt?: string; width?: number; height?: number };\n        header?: { menuItems?: { title: string; url: string; subMenu?: { title: string; link: string }[] }[] };\n    } = siteSettings;\n    return (\n        <div className=\"bg-white p-8 sticky top-0 z-1\">\n            <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                    <div className=\"flex flex-row gap-4 items-center\">\n                        <Image\n                            src={logo?.asset?._ref ? urlFor({ asset: { _ref: logo.asset._ref, _type: \"reference\" } }).url() || '' : logo?.url || ''}\n                            alt={logo?.alt || 'Post Image'}\n                            width={logo?.width || 800}\n                            height={logo?.height || 600}\n                            priority\n                        />\n                        <h1 className=\"text-2xl font-bold\">{siteTitle}</h1>\n                    </div>\n                </div>\n                <nav>\n                    <ul className=\"flex space-x-4\">\n                        {header?.menuItems?.map((menuItem: { title: string; url: string; subMenu?: { title: string; link: string }[] }) => (\n                            <li key={menuItem.title} className=\"relative group\">\n                                <Link href={`/${menuItem.url?.toLowerCase()}`}>\n                                    {menuItem.title}\n                                </Link>\n                                {menuItem.subMenu && menuItem.subMenu.length > 0 && (\n                                    <ul className=\"absolute left-0 mt-2 bg-white border border-gray-200 shadow-lg hidden group-hover:block\">\n                                        {menuItem.subMenu.map((subMenuItem) => (\n                                            <li key={subMenuItem.title}>\n                                                {subMenuItem.link ? (\n                                                    <Link href={subMenuItem.link} className=\"block px-4 py-2 hover:bg-gray-100\">\n                                                        {subMenuItem.title}\n                                                    </Link>\n                                                ) : (\n                                                    <span className=\"block px-4 py-2 text-gray-500\">\n                                                        {subMenuItem.title}\n                                                    </span>\n                                                )}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </li>\n                        ))}\n                    </ul>\n                </nav>\n            </div>\n        </div>\n\n    );\n}"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAExB;AACA;AACA;AACA;;;;;;AAGA,MAAM,eAAe,CAAC,iFAAiF,CAAC;AAGzF,eAAe;IAE1B,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,MAAM,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD,EAAE;QAAE,OAAO;IAAa;IAEvE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,GAI7B;IACJ,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,6HAAA,CAAA,UAAK;gCACF,KAAK,MAAM,OAAO,OAAO,CAAA,GAAA,6HAAA,CAAA,SAAM,AAAD,EAAE;oCAAE,OAAO;wCAAE,MAAM,KAAK,KAAK,CAAC,IAAI;wCAAE,OAAO;oCAAY;gCAAE,GAAG,GAAG,MAAM,KAAK,MAAM,OAAO;gCACrH,KAAK,MAAM,OAAO;gCAClB,OAAO,MAAM,SAAS;gCACtB,QAAQ,MAAM,UAAU;gCACxB,QAAQ;;;;;;0CAEZ,8OAAC;gCAAG,WAAU;0CAAsB;;;;;;;;;;;;;;;;;8BAG5C,8OAAC;8BACG,cAAA,8OAAC;wBAAG,WAAU;kCACT,QAAQ,WAAW,IAAI,CAAC,yBACrB,8OAAC;gCAAwB,WAAU;;kDAC/B,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG,EAAE,eAAe;kDACxC,SAAS,KAAK;;;;;;oCAElB,SAAS,OAAO,IAAI,SAAS,OAAO,CAAC,MAAM,GAAG,mBAC3C,8OAAC;wCAAG,WAAU;kDACT,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,4BACnB,8OAAC;0DACI,YAAY,IAAI,iBACb,8OAAC,4JAAA,CAAA,UAAI;oDAAC,MAAM,YAAY,IAAI;oDAAE,WAAU;8DACnC,YAAY,KAAK;;;;;yEAGtB,8OAAC;oDAAK,WAAU;8DACX,YAAY,KAAK;;;;;;+CAPrB,YAAY,KAAK;;;;;;;;;;;+BAPjC,SAAS,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BnD","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/app/%28frontend%29/layout.tsx"],"sourcesContent":["import { draftMode } from \"next/headers\";\nimport { VisualEditing } from \"next-sanity\";\nimport { DisableDraftMode } from \"@/components/DisableDraftMode\";\nimport { SanityLive } from \"@/sanity/lib/live\";\nimport  Header  from \"../header\";\nimport  Footer  from \"../footer\";\n\nexport default async function FrontendLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <>\n      <Header />\n      <section className=\" min-h-screen bg-gray-100\">\n        {children}\n        <SanityLive />\n        {(await draftMode()).isEnabled && (\n          <>\n            <DisableDraftMode />\n            <VisualEditing />\n          </>\n        )}\n      </section>\n      <Footer />\n    </>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEe,eAAe,eAAe,EAC3C,QAAQ,EAGR;IACA,qBACE;;0BACE,8OAAC,qHAAA,CAAA,UAAM;;;;;0BACP,8OAAC;gBAAQ,WAAU;;oBAChB;kCACD,8OAAC,4HAAA,CAAA,aAAU;;;;;oBACV,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,YAAS,AAAD,GAAG,EAAE,SAAS,kBAC5B;;0CACE,8OAAC,sIAAA,CAAA,mBAAgB;;;;;0CACjB,8OAAC,+JAAA,CAAA,gBAAa;;;;;;;;;;;;;0BAIpB,8OAAC,qHAAA,CAAA,UAAM;;;;;;;AAGb","debugId":null}}]
}