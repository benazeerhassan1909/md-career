{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/%40sanity/presentation-comlink/src/comlinkCompatibility.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/%40sanity/presentation-comlink/src/isMaybePresentation.ts"],"sourcesContent":["import {\n  createListenLogic,\n  createRequestMachine,\n  DOMAIN,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n  type InternalMessageType,\n  type Message,\n  type ProtocolMessage,\n  type RequestMachineContext,\n} from '@sanity/comlink'\nimport type {\n  LoaderControllerMsg,\n  LoaderNodeMsg,\n  PreviewKitNodeMsg,\n  VisualEditingControllerMsg,\n  VisualEditingNodeMsg,\n} from './types'\n\ntype ComlinkMessageType =\n  | InternalMessageType\n  | (\n      | LoaderControllerMsg\n      | LoaderNodeMsg\n      | PreviewKitNodeMsg\n      | VisualEditingControllerMsg\n      | VisualEditingNodeMsg\n    )['type']\n\ntype ChannelsMessageType =\n  | 'handshake/syn'\n  | 'handshake/syn-ack'\n  | 'handshake/ack'\n  | 'channel/response'\n  | 'channel/heartbeat'\n  | 'channel/disconnect'\n  | 'overlay/focus'\n  | 'overlay/navigate'\n  | 'overlay/toggle'\n  | 'presentation/toggleOverlay'\n\nconst channelsToComlinkMap: {[key in ChannelsMessageType]: ComlinkMessageType} = {\n  'handshake/syn': MSG_HANDSHAKE_SYN,\n  'handshake/syn-ack': MSG_HANDSHAKE_SYN_ACK,\n  'handshake/ack': MSG_HANDSHAKE_ACK,\n  'channel/response': MSG_RESPONSE,\n  'channel/heartbeat': MSG_HEARTBEAT,\n  'channel/disconnect': MSG_DISCONNECT,\n  'overlay/focus': 'visual-editing/focus',\n  'overlay/navigate': 'visual-editing/navigate',\n  'overlay/toggle': 'visual-editing/toggle',\n  'presentation/toggleOverlay': 'presentation/toggle-overlay',\n}\n\nconst comlinkToChannelsMap: {[key in ComlinkMessageType]?: ChannelsMessageType} = {\n  [MSG_HANDSHAKE_SYN]: 'handshake/syn',\n  [MSG_HANDSHAKE_SYN_ACK]: 'handshake/syn-ack',\n  [MSG_HANDSHAKE_ACK]: 'handshake/ack',\n  [MSG_RESPONSE]: 'channel/response',\n  [MSG_HEARTBEAT]: 'channel/heartbeat',\n  [MSG_DISCONNECT]: 'channel/disconnect',\n  'visual-editing/focus': 'overlay/focus',\n  'visual-editing/navigate': 'overlay/navigate',\n  'visual-editing/toggle': 'overlay/toggle',\n  'presentation/toggle-overlay': 'presentation/toggleOverlay',\n}\n\ntype ChannelMsg = Omit<ProtocolMessage, 'channelId'> & {connectionId: string}\n\nconst convertToComlinkEvent = (event: MessageEvent): MessageEvent<ProtocolMessage> => {\n  const {data} = event\n\n  if (\n    data &&\n    typeof data === 'object' &&\n    'domain' in data &&\n    'type' in data &&\n    'from' in data &&\n    'to' in data\n  ) {\n    if (data.domain === 'sanity/channels') {\n      data.domain = DOMAIN\n    }\n\n    if (data.to === 'overlays') {\n      data.to = 'visual-editing'\n    }\n\n    if (data.from === 'overlays') {\n      data.from = 'visual-editing'\n    }\n\n    data.channelId = data.connectionId\n    delete data.connectionId\n\n    data.type = channelsToComlinkMap[data.type as ChannelsMessageType] ?? data.type\n  }\n\n  return event\n}\n\nconst convertToChannelsMessage = (comlinkMessage: ProtocolMessage): ChannelMsg => {\n  const {channelId, ...rest} = comlinkMessage\n  const message = {...rest, connectionId: channelId} as ChannelMsg\n\n  if (message.domain === DOMAIN) {\n    message.domain = 'sanity/channels'\n  }\n\n  if (message.to === 'visual-editing') {\n    message.to = 'overlays'\n  }\n\n  if (message.from === 'visual-editing') {\n    message.from = 'overlays'\n  }\n\n  message.type = comlinkToChannelsMap[message.type as ComlinkMessageType] ?? message.type\n\n  if (message.type === 'channel/response' && message.responseTo && !message.data) {\n    message.data = {responseTo: message.responseTo}\n  }\n\n  if (\n    message.type === 'handshake/syn' ||\n    message.type === 'handshake/syn-ack' ||\n    message.type === 'handshake/ack'\n  ) {\n    message.data = {id: message.connectionId}\n  }\n\n  return message\n}\n\nconst sendAsChannelsMessage = <S extends Message>(\n  {context}: {context: RequestMachineContext<S>},\n  params: {message: ProtocolMessage},\n): void => {\n  const {sources, targetOrigin} = context\n\n  const message = convertToChannelsMessage(params.message)\n\n  sources.forEach((source) => {\n    source.postMessage(message, {targetOrigin})\n  })\n}\n\nexport {\n  type ListenInput,\n  type Message,\n  type MessageData,\n  type MessageType,\n  MSG_RESPONSE,\n  type ProtocolMessage,\n  type RequestMachineContext,\n  type ResponseMessage,\n} from '@sanity/comlink'\n\nexport const createCompatibilityActors = <\n  T extends Message,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine<T>().provide({\n    actions: {\n      'send message': sendAsChannelsMessage,\n    },\n  }),\n})\n","export function isMaybePreviewIframe(): boolean {\n  return window.self !== window.top\n}\nexport function isMaybePreviewWindow(): boolean {\n  return Boolean(window.opener)\n}\nexport function isMaybePresentation(): boolean {\n  return isMaybePreviewIframe() || isMaybePreviewWindow()\n}\n"],"names":[],"mappings":";;;;;;;;;AA6CA,MAAM,uBAA2E;IAC/E,yKAAiB,oBAAA;IACjB,6KAAqB,wBAAA;IACrB,yKAAiB,oBAAA;IACjB,4KAAoB,eAAA;IACpB,6KAAqB,gBAAA;IACrB,8KAAsB,iBAAA;IACtB,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,8BAA8B;AAChC,GAEM,uBAA4E;IAChF,yJAAC,oBAAiB,CAAA,EAAG;IACrB,yJAAC,wBAAqB,CAAA,EAAG;IACzB,CAAC,4KAAiB,CAAA,EAAG;IACrB,yJAAC,eAAY,CAAA,EAAG;IAChB,yJAAC,gBAAa,CAAA,EAAG;IACjB,yJAAC,iBAAc,CAAA,EAAG;IAClB,wBAAwB;IACxB,2BAA2B;IAC3B,yBAAyB;IACzB,+BAA+B;AACjC,GAIM,wBAAwB,CAAC,UAAuD;IAC9E,MAAA,EAAC,IAAA,EAAA,GAAQ;IAGb,OAAA,QACA,OAAO,QAAS,YAChB,YAAY,QACZ,UAAU,QACV,UAAU,QACV,QAAQ,QAAA,CAEJ,KAAK,MAAA,KAAW,qBAAA,CAClB,KAAK,MAAA,2JAAS,SAAA,GAGZ,KAAK,EAAA,KAAO,cAAA,CACd,KAAK,EAAA,GAAK,gBAAA,GAGR,KAAK,IAAA,KAAS,cAAA,CAChB,KAAK,IAAA,GAAO,gBAAA,GAGd,KAAK,SAAA,GAAY,KAAK,YAAA,EACtB,OAAO,KAAK,YAAA,EAEZ,KAAK,IAAA,GAAO,oBAAA,CAAqB,KAAK,IAA2B,CAAA,IAAK,KAAK,IAAA,GAGtE;AACT,GAEM,2BAA2B,CAAC,mBAAgD;IAC1E,MAAA,EAAC,SAAA,EAAW,GAAG,MAAA,GAAQ,gBACvB,UAAU;QAAC,GAAG,IAAA;QAAM,cAAc;IAAS;IAE7C,OAAA,QAAQ,MAAA,6JAAW,SAAA,IAAA,CACrB,QAAQ,MAAA,GAAS,iBAAA,GAGf,QAAQ,EAAA,KAAO,oBAAA,CACjB,QAAQ,EAAA,GAAK,UAAA,GAGX,QAAQ,IAAA,KAAS,oBAAA,CACnB,QAAQ,IAAA,GAAO,UAAA,GAGjB,QAAQ,IAAA,GAAO,oBAAA,CAAqB,QAAQ,IAA0B,CAAA,IAAK,QAAQ,IAAA,EAE/E,QAAQ,IAAA,KAAS,sBAAsB,QAAQ,UAAA,IAAc,CAAC,QAAQ,IAAA,IAAA,CACxE,QAAQ,IAAA,GAAO;QAAC,YAAY,QAAQ,UAAA;IAAU,CAAA,GAAA,CAI9C,QAAQ,IAAA,KAAS,mBACjB,QAAQ,IAAA,KAAS,uBACjB,QAAQ,IAAA,KAAS,eAAA,KAAA,CAEjB,QAAQ,IAAA,GAAO;QAAC,IAAI,QAAQ,YAAA;IAAA,CAAA,GAGvB;AACT,GAEM,wBAAwB,CAC5B,EAAC,OAAA,CAAA,CAAA,EACD,WACS;IACH,MAAA,EAAC,OAAA,EAAS,YAAA,EAAA,GAAgB,SAE1B,UAAU,yBAAyB,OAAO,OAAO;IAE/C,QAAA,OAAA,CAAQ,CAAC,WAAW;QAC1B,OAAO,WAAA,CAAY,SAAS;YAAC;QAAA,CAAa;IAAA,CAC3C;AACH,GAaa,4BAA4B,IAAA,CAGjC;QACN,oKAAQ,oBAAA,EAAkB,qBAAqB;QAC/C,4KAAgB,uBAAA,CAAwB,GAAE,OAAA,CAAQ;YAChD,SAAS;gBACP,gBAAgB;YAAA;QAEnB,CAAA;IACH,CAAA;AC5KO,SAAS,uBAAgC;IACvC,OAAA,OAAO,IAAA,KAAS,OAAO,GAAA;AAChC;AACO,SAAS,uBAAgC;IAC9C,OAAO,CAAA,CAAQ,OAAO,MAAA;AACxB;AACO,SAAS,sBAA+B;IACtC,OAAA,0BAA0B,qBAAqB;AACxD","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/fast-deep-equal/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":[],"mappings":"AAAA;AAEA,sDAAsD;AAItD,OAAO,OAAO,GAAG,SAAS,MAAM,CAAC,EAAE,CAAC;IAClC,IAAI,MAAM,GAAG,OAAO;IAEpB,IAAI,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU;QAC1D,IAAI,EAAE,WAAW,KAAK,EAAE,WAAW,EAAE,OAAO;QAE5C,IAAI,QAAQ,GAAG;QACf,IAAI,MAAM,OAAO,CAAC,IAAI;YACpB,SAAS,EAAE,MAAM;YACjB,IAAI,UAAU,EAAE,MAAM,EAAE,OAAO;YAC/B,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO;YACjC,OAAO;QACT;QAIA,IAAI,EAAE,WAAW,KAAK,QAAQ,OAAO,EAAE,MAAM,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK;QACjF,IAAI,EAAE,OAAO,KAAK,OAAO,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO;QAC5E,IAAI,EAAE,QAAQ,KAAK,OAAO,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ;QAEhF,OAAO,OAAO,IAAI,CAAC;QACnB,SAAS,KAAK,MAAM;QACpB,IAAI,WAAW,OAAO,IAAI,CAAC,GAAG,MAAM,EAAE,OAAO;QAE7C,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;QAEhE,IAAK,IAAI,QAAQ,QAAQ,GAAI;YAC3B,IAAI,MAAM,IAAI,CAAC,EAAE;YAEjB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,OAAO;QACrC;QAEA,OAAO;IACT;IAEA,oCAAoC;IACpC,OAAO,MAAI,KAAK,MAAI;AACtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"file":"DisplayedDocumentBroadcaster.mjs","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/loader/DisplayedDocumentBroadcaster.tsx"],"sourcesContent":["/**\n * Report back up the document state being displayed in the document pane,\n * allowing Presentation Tool to patch the live queries with the same state.\n * This makes the Perspective switcher less confusing, as it applies to everything else on the page.\n * It's also why it's possible to select an older revision and see it in the preview,\n * effectively letting you preview a revert action you might be considering to perform.\n */\n\nimport isEqual from 'fast-deep-equal'\nimport {type PropsWithChildren, useCallback, useContext, useEffect} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {PresentationDisplayedDocumentContext} from 'sanity/_singletons'\n\nimport {type PresentationDisplayedDocumentContextValue} from './types'\n\nexport interface DisplayedDocumentBroadcasterProps extends PropsWithChildren {\n  setDisplayedDocument: React.Dispatch<\n    React.SetStateAction<Partial<SanityDocument> | null | undefined>\n  >\n  documentId: string | null | undefined\n}\n\nexport function DisplayedDocumentBroadcasterProvider(\n  props: DisplayedDocumentBroadcasterProps,\n): React.JSX.Element {\n  const {children, setDisplayedDocument, documentId} = props\n\n  const context = useCallback<PresentationDisplayedDocumentContextValue>(\n    (next) => setDisplayedDocument((prev) => (isEqual(prev, next) ? prev : next)),\n    [setDisplayedDocument],\n  )\n\n  useEffect(() => {\n    // If no document is currently being displayed then reset the state\n    if (documentId) {\n      return undefined\n    }\n    const timeout = setTimeout(() => setDisplayedDocument(null))\n    return () => clearTimeout(timeout)\n  }, [documentId, setDisplayedDocument])\n\n  return (\n    <PresentationDisplayedDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDisplayedDocumentContext.Provider>\n  )\n}\n\nexport function useDisplayedDocumentBroadcaster(): PresentationDisplayedDocumentContextValue | null {\n  return useContext(PresentationDisplayedDocumentContext)\n}\n"],"names":["DisplayedDocumentBroadcasterProvider","props","$","_c","children","setDisplayedDocument","documentId","t0","next","prev","isEqual","context","t1","t2","timeout","setTimeout","clearTimeout","useEffect","t3","useDisplayedDocumentBroadcaster","useContext","PresentationDisplayedDocumentContext"],"mappings":";;;;;;;;;;;;;;AAsBO,SAAAA,qCAAAC,KAAAA,EAAA;IAAAC,MAAAA,6KAAAC,EAAA,CAAA,GAGL,EAAAC,QAAAA,EAAAC,oBAAAA,EAAAC,UAAAA,EAAAA,GAAqDL;IAAKM,IAAAA;IAAAL,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAGxDE,KAAAC,CAAAA,OAAUH,qBAAoBI,CAAAA,6JAAYC,UAAAA,EAAQD,MAAMD,IAAI,IAAIC,OAAOD,IAAK,GAACN,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAK,EAAAA,IAAAA,KAAAL,CAAAA,CAAA,CAAA,CAAA;IAD/E,MAAAS,UAAgBJ;IAGf,IAAAK,IAAAC;IAAAX,CAAAA,CAAAI,CAAAA,CAAAA,KAAAA,cAAAJ,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAESO,KAAAA,MAAA;QAEJN,IAAAA,YAAU;QAGd,MAAAQ,UAAgBC,WAAAA,IAAiBV,qBAAoB,IAAK,CAAC;QAC9CW,OAAAA,IAAAA,aAAaF,OAAO;IAChCD,GAAAA,KAAA;QAACP;QAAYD,oBAAoB;KAAA,EAACH,CAAAA,CAAAA,EAAAA,GAAAI,YAAAJ,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAU,IAAAV,CAAAA,CAAAA,EAAAA,GAAAW,EAAAA,IAAAA,CAAAD,KAAAV,CAAAA,CAAA,CAAA,CAAA,EAAAW,KAAAX,CAAAA,CAAA,CAAA,CAAA,qKAPrCe,YAAAA,EAAUL,IAOPC,EAAkC;IAACK,IAAAA;IAAA,OAAAhB,CAAAA,CAAAE,CAAAA,CAAAA,KAAAA,YAAAF,CAAAA,CAAAA,EAAAA,KAAAS,UAAAA,CAGpCO,KAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,wLAAA,CAAA,QAAA,EAAA;QAAsDP,OAAAA;QACnDP;IAAAA,CACH,GAAgDF,CAAAA,CAAAA,EAAAA,GAAAE,UAAAF,CAAAA,CAAAA,EAAAA,GAAAS,SAAAT,CAAAA,CAAAA,EAAAA,GAAAgB,EAAAA,IAAAA,KAAAhB,CAAAA,CAAA,CAAA,CAAA,EAFhDgB;AAEgD;AAI7C,SAAAC,kCAAA;IAAA,yKACEC,aAAAA,mJAAAC,uCAA+C;AAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/node_modules/uuid/dist/esm-browser/native.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n"],"names":[],"mappings":";;;AAAA,MAAM,aAAa,OAAO,WAAW,eAAe,OAAO,UAAU,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC;uCACjF;IAAE;AAAW","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/node_modules/uuid/dist/esm-browser/rng.js"],"sourcesContent":["let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n"],"names":[],"mappings":";;;AAAA,IAAI;AACJ,MAAM,QAAQ,IAAI,WAAW;AACd,SAAS;IACpB,IAAI,CAAC,iBAAiB;QAClB,IAAI,OAAO,WAAW,eAAe,CAAC,OAAO,eAAe,EAAE;YAC1D,MAAM,IAAI,MAAM;QACpB;QACA,kBAAkB,OAAO,eAAe,CAAC,IAAI,CAAC;IAClD;IACA,OAAO,gBAAgB;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/node_modules/uuid/dist/esm-browser/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n"],"names":[],"mappings":";;;uCAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/node_modules/uuid/dist/esm-browser/validate.js"],"sourcesContent":["import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,SAAS,IAAI;IAClB,OAAO,OAAO,SAAS,YAAY,oLAAA,CAAA,UAAK,CAAC,IAAI,CAAC;AAClD;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/node_modules/uuid/dist/esm-browser/stringify.js"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,YAAY,EAAE;AACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC1B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAClD;AACO,SAAS,gBAAgB,GAAG,EAAE,SAAS,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC9B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW;AAChD;AACA,SAAS,UAAU,GAAG,EAAE,SAAS,CAAC;IAC9B,MAAM,OAAO,gBAAgB,KAAK;IAClC,IAAI,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAQ,AAAD,EAAE,OAAO;QACjB,MAAM,UAAU;IACpB;IACA,OAAO;AACX;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;IAC5B,IAAI,qLAAA,CAAA,UAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACvC,OAAO,qLAAA,CAAA,UAAM,CAAC,UAAU;IAC5B;IACA,UAAU,WAAW,CAAC;IACtB,MAAM,OAAO,QAAQ,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAA,GAAA,kLAAA,CAAA,UAAG,AAAD;IACpD,IAAI,KAAK,MAAM,GAAG,IAAI;QAClB,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,KAAK;QACL,SAAS,UAAU;QACnB,IAAI,SAAS,KAAK,SAAS,KAAK,IAAI,MAAM,EAAE;YACxC,MAAM,IAAI,WAAW,CAAC,gBAAgB,EAAE,OAAO,CAAC,EAAE,SAAS,GAAG,wBAAwB,CAAC;QAC3F;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YACzB,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC7B;QACA,OAAO;IACX;IACA,OAAO,CAAA,GAAA,wLAAA,CAAA,kBAAe,AAAD,EAAE;AAC3B;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [\n        JSON.stringify(config.transition),\n        config.transformPagePoint,\n        config.reducedMotion,\n    ]);\n    return (jsx(MotionConfigContext.Provider, { value: context, children: children }));\n}\n\nexport { MotionConfig };\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAOA;;;;;;;;;;;;;;;;CAgBC,GACD,SAAS,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,QAAQ;IACtD,eAAe,CAAA,GAAA,+LAAA,CAAA,0BAAuB,AAAD,EAAE;IACvC;;KAEC,GACD,SAAS;QAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,oLAAA,CAAA,sBAAmB,CAAC;QAAE,GAAG,MAAM;IAAC;IACzD;;;KAGC,GACD,OAAO,QAAQ,GAAG,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD;oCAAE,IAAM,OAAO,QAAQ;;IACnD;;;KAGC,GACD,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;yCAAE,IAAM;wCAAQ;QAClC,KAAK,SAAS,CAAC,OAAO,UAAU;QAChC,OAAO,kBAAkB;QACzB,OAAO,aAAa;KACvB;IACD,OAAQ,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,oLAAA,CAAA,sBAAmB,CAAC,QAAQ,EAAE;QAAE,OAAO;QAAS,UAAU;IAAS;AACnF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"file":"without-secret-search-params.js","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/%40sanity/preview-url-secret/src/withoutSecretSearchParams.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  searchParams.delete(urlSearchParamVercelProtectionBypass)\n  searchParams.delete(urlSearchParamVercelSetBypassCookie)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string | null,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  // Preview secrets are added when preview mode is setup with an `enable` endpoint\n  if (secret) {\n    searchParams.set(urlSearchParamPreviewSecret, secret)\n    searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  }\n  // Always set the perspective that's being used\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n\n  return newUrl\n}\n"],"names":[],"mappings":";;;;;;;AASO,SAAS,0BAA0B,GAAA,EAAe;IACvD,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IACvB,OAAA,aAAa,MAAA,8KAAO,gCAA6B,GACjD,aAAa,MAAA,8KAAO,8BAA2B,GAC/C,aAAa,MAAA,8KAAO,mCAAgC,GACpD,aAAa,MAAA,8KAAO,uCAAoC,GACxD,aAAa,MAAA,8KAAO,sCAAmC,GAChD;AACT;AAGO,SAAS,sBAAsB,GAAA,EAAmB;IAChD,OAAA,IAAI,YAAA,CAAa,GAAA,8KAAI,8BAA2B;AACzD;AAGO,SAAS,sBACd,GAAA,EACA,MAAA,EACA,UAAA,EACA,WAAA,EACK;IACL,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IAEvB,OAAI,UAAA,CACF,aAAa,GAAA,8KAAI,8BAAA,EAA6B,MAAM,GACpD,aAAa,GAAA,8KAAI,gCAAA,EAA+B,UAAU,CAAA,GAG5D,aAAa,GAAA,8KAAI,mCAAA,EAAkC,WAAW,GAEvD;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"file":"generateSecret.js","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/%40sanity/preview-url-secret/src/generateSecret.ts"],"sourcesContent":["/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i].toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n"],"names":[],"mappings":";;;AACO,SAAS,oBAA4B;IAEtC,IAAA,OAAO,SAAW,KAAa;QAE3B,MAAA,QAAQ,IAAI,WAAW,EAAE;QAC/B,OAAO,eAAA,CAAgB,KAAK;QAG5B,IAAI,MAAM;QACV,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAEzB,OAAA,KAAA,CAAM,CAAC,CAAA,CAAE,QAAA,CAAS,EAAE,EAAE,QAAA,CAAS,GAAG,GAAG;QAI9C,OAAA,MAAM,KAAK,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,SAAS,EAAE,GAEpE;IAAA;IAGT,OAAO,KAAK,MAAA,GAAS,QAAA,CAAS,EAAE,EAAE,KAAA,CAAM,CAAC;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"file":"toggle-preview-access-sharing.js","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/%40sanity/preview-url-secret/src/togglePreviewAccessSharing.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type"],"mappings":";;;;;;;;AAMA,eAAsB,2BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EAC2B;IACrB,MAAA,SAAS,QAAQ,UAAA,CAAW;iMAAC,aAAA;IAAA,CAAW,GACxC,gBAAY,uNAAA,KACZ,QAAQ,OAAO,KAAA,8KAAMA,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAW;QAAW;IAAA,CAAO;IACpE,OAAA,MAAA,OACH,WAAA,GACA,iBAAA,CAAkB;QAAA,kLAACA,oBAAAA;QAAKC,oLAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAO,CAAA,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;0LAAC,MAAA;IAAA,CAAI,GAER;QAAC,QAAQ;IAAS;AAC3B;AAGA,eAAsB,4BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACe;IACf,MAAM,SAAS,QAAQ,UAAA,CAAW;iMAAC,aAAA;IAAW,CAAA,GACxC,QAAQ,OAAO,KAAA,8KAAMD,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAM;QAAW;IAAA,CAAO;IACrE,MAAM,OACH,WAAA,CAAY,EACZ,iBAAA,CAAkB;QAACA,kLAAAA,oBAAAA;QAAKC,oLAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAM,CAAC,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;0LAAC,MAAA;IAAA,CAAI;AACjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/path-to-regexp/src/index.ts"],"sourcesContent":["/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 902, "column": 0}, "map": {"version":3,"file":"create-secret.js","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/%40sanity/preview-url-secret/src/createPreviewSecret.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":[],"mappings":";;;;;;;;;AAOA,eAAsB,oBACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACA,oMAAK,OAAA,GAAA,EACuC;IAC5C,MAAM,SAAS,QAAQ,UAAA,CAAW;iMAAC,aAAA;IAAA,CAAW;IAE1C,IAAA;QACF,MAAM,YAAY,IAAI,KAAK,KAAK,GAAA,CAAI,IAAI,mLAAO,aAAU,GACnD,MAAM,CAAA,OAAA,EAAU,EAAE,EAAA,EAClB,aAAY,0NAAA,CAAkB,IAC9B,QAAQ,OAAO,KAAA,CAAM,GAAG,EAAE,GAAA,CAAI;YAAC,QAAQ;YAAW;YAAQ;YAAW;QAAA,CAAO;QAC5E,OAAA,MAAA,OAAO,WAAA,GAAc,eAAA,CAAgB;YAAC;YAAK,oLAAO,aAAA;QAAA,CAAW,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;8LAAC,MAAA;QAAA,CAAI,GAEvF;YAAC,QAAQ;YAAW;QAAS;IAAA,SACpC;QACI,IAAA;YAEF,MAAM,OAAO,MAAA,CAAO;gBAAC,oLAAO,4BAAA;YAAA,CAA0B;QAAA,EAAA,OAC/C,KAAK;YAEJ,QAAA,KAAA,CAAM,oCAAoC,GAAG;QAAA;IACvD;AAEJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"file":"toggle-vercel-protection-bypass.js","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/%40sanity/preview-url-secret/src/toggleVercelProtectionBypass.ts"],"sourcesContent":["import type {SanityClient, SyncTag} from '@sanity/client'\nimport {\n  vercelProtectionBypassSchemaId as _id,\n  vercelProtectionBypassSchemaType as _type,\n  fetchVercelProtectionBypassSecret,\n  tag,\n} from './constants'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enableVercelProtectionBypass(\n  client: SanityClient,\n  secret: string,\n): Promise<void> {\n  const patch = client.patch(_id).set({secret})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport async function disableVercelProtectionBypass(client: SanityClient): Promise<void> {\n  const patch = client.patch(_id).set({secret: null})\n  await client.transaction().createIfNotExists({_id, _type}).patch(patch).commit({tag})\n}\n\n/** @internal */\nexport function subcribeToVercelProtectionBypass(\n  client: SanityClient,\n  onChange: (secret: string | null) => void,\n): () => void {\n  let controller = new AbortController()\n  let usedTags: SyncTag[] = []\n  async function fetchSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n    const {result, syncTags} = await client.fetch<string | null>(\n      fetchVercelProtectionBypassSecret,\n      {},\n      {\n        filterResponse: false,\n        lastLiveEventId,\n        tag: 'preview-url-secret.fetch-vercel-bypass-protection-secret',\n      },\n    )\n    if (Array.isArray(syncTags)) {\n      usedTags = syncTags\n    }\n    if (!signal.aborted) {\n      onChange(result)\n    }\n  }\n  const subscription = client.live.events().subscribe({\n    next: (event) => {\n      if (event.type === 'message') {\n        controller.abort()\n        controller = new AbortController()\n        if (event.tags.some((tag) => usedTags.includes(tag))) {\n          fetchSecret(event.id, controller.signal)\n        }\n      }\n    },\n    // eslint-disable-next-line no-console\n    error: (reason) => console.error(reason),\n  })\n\n  fetchSecret(null, controller.signal)\n\n  return () => {\n    subscription.unsubscribe()\n    controller.abort()\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type","tag"],"mappings":";;;;;;;AAUsB,eAAA,6BACpB,MAAA,EACA,MAAA,EACe;IACT,MAAA,QAAQ,OAAO,KAAA,8KAAMA,iCAAG,EAAE,GAAA,CAAI;QAAC;IAAA,CAAO;IAC5C,MAAM,OAAO,WAAA,CAAA,EAAc,iBAAA,CAAkB;QAACA,kLAAAA,iCAAAA;QAAKC,oLAAAA,mCAAAA;IAAAA,CAAM,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;0LAAC,MAAA;IAAA,CAAI;AACtF;AAGA,eAAsB,8BAA8B,MAAA,EAAqC;IACjF,MAAA,QAAQ,OAAO,KAAA,8KAAMD,iCAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;IAAA,CAAK;IAClD,MAAM,OAAO,WAAA,CAAA,EAAc,iBAAA,CAAkB;QAACA,kLAAAA,iCAAAA;QAAKC,oLAAAA,mCAAAA;IAAAA,CAAM,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;0LAAC,MAAA;IAAA,CAAI;AACtF;AAGgB,SAAA,iCACd,MAAA,EACA,QAAA,EACY;IACZ,IAAI,aAAa,IAAI,gBAAgB,GACjC,WAAsB,CAAC,CAAA;IACZ,eAAA,YAAY,eAAA,EAAgC,MAAA,EAAqB;QAC9E,MAAM,EAAC,MAAA,EAAQ,QAAA,EAAA,GAAY,MAAM,OAAO,KAAA,8KACtC,oCAAA,EACA,CAAC,GACD;YACE,gBAAgB,CAAA;YAChB;YACA,KAAK;QAAA;QAGL,MAAM,OAAA,CAAQ,QAAQ,KAAA,CACxB,WAAW,QAAA,GAER,OAAO,OAAA,IACV,SAAS,MAAM;IAAA;IAGnB,MAAM,eAAe,OAAO,IAAA,CAAK,MAAA,CAAA,EAAS,SAAA,CAAU;QAClD,MAAM,CAAC,UAAU;YACX,MAAM,IAAA,KAAS,aAAA,CACjB,WAAW,KAAA,CAAA,GACX,aAAa,IAAI,gBAAgB,GAC7B,MAAM,IAAA,CAAK,IAAA,CAAK,CAACC,OAAQ,SAAS,QAAA,CAASA,IAAG,CAAC,KACjD,YAAY,MAAM,EAAA,EAAI,WAAW,MAAM,CAAA;QAG7C;QAAA,sCAAA;QAEA,OAAO,CAAC,SAAW,QAAQ,KAAA,CAAM,MAAM;IAAA,CACxC;IAED,OAAA,YAAY,MAAM,WAAW,MAAM,GAE5B,MAAM;QACE,aAAA,WAAA,CAAA,GACb,WAAW,KAAA,CAAM;IACnB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"file":"PresentationToolGrantsCheck.mjs","sources":["file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/features/PostMessageFeatures.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/machines/presentation-machine.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/overlays/SharedStateProvider.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/panels/Panel.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/util/debounce.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/panels/usePanelsStorage.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/panels/util.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/panels/Panels.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/components/ErrorCard.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/editor/PresentationPaneRouterProvider.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/editor/DocumentListPane.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/editor/DocumentPane.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/editor/DocumentPanel.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/editor/usePreviewState.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/editor/ContentEditor.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/panels/usePanelId.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/panels/PanelResizer.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/PresentationContent.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/PresentationNavigateProvider.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useLocalState.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/PresentationNavigator.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/PresentationParamsProvider.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/PresentationProvider.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useAllowPatterns.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/util/encodeStudioPerspective.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useId.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/preview/IFrame.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/preview/OpenPreviewButton.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useTargetOrigin.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/preview/PreviewLocationInput.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/preview/SharePreviewMenu.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/preview/PreviewHeader.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/preview/Preview.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/util/warnOnce.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useDocumentsOnPage.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useMainDocument.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/util/parse.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useParams.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/usePopups.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/usePresentationPerspective.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useStatus.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/PresentationTool.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/actors/create-preview-secret.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/actors/read-shared-secret.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/actors/resolve-allow-patterns.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/actors/resolve-initial-url.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/actors/resolve-preview-mode.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/actors/resolve-preview-mode-url.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/actors/resolve-url-from-preview-search-param.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/machines/preview-url.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/usePreviewUrlActorRef.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useReportInvalidPreviewSearchParam.tsx","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/useVercelBypassSecret.ts","file:///Users/benazeer/Local%20Sites/md-career/node_modules/sanity/src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","import {type ActorRefFrom, assign, setup} from 'xstate'\n\ninterface Context {\n  url: URL | null\n  error: Error | null\n  visualEditingOverlaysEnabled: boolean\n}\n\ntype Event =\n  | {type: 'toggle visual editing overlays'; enabled: boolean}\n  | {type: 'iframe loaded'}\n  | {type: 'iframe refresh'}\n  | {type: 'iframe reload'}\n\nexport const presentationMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    //\n  },\n  actors: {\n    //\n  },\n  guards: {\n    //\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOcwDsAuBDbAlgPaYAEAKkUQDYDEBAZqrgLZinrVG4QDaADAF1EoAA5FYBQiREgAHogAsAJgA0IAJ6IAHAEYAdIoCcJowFY9R-vzPLlAX3vq0GHPmJlKNfVx4FMUPRMrOy+EJACwkgg4pLSmLIKCLoAbIr6Zoop2tqKAMxpJnnF6loIZkbK+uZ5umapKXmK-Cm6js7osFh48RRU1D7c4RC02ERQUNTsAG4EsACuuNSkkFL+UKRE02Co1LgasJGysWsy0UnaZinVyrpGAOx1Rim2efeliPe3hma1Zvy6XT8W4OJwgFxdNy9LwDMKQILMNgcMBMOAACyO0RO8USiAK930LWU-3uiiB9yaKXemkQjW01V+txS-GKqUe7XBnW67hIfW8cJGjER7E4Q0xYgkpwS5zxVMJKWJ-FJ5Mp1LKFn4Pz+DSaLTaYIh3Oh-UGPEg+nQqNgaPWCJCpAF4pikpxMoQKWZ+gp+TSZLy1hSH3deXpNSZLNqVP1HVcPQ8fNhQ3Nor8ATtSMdQmOLo8uPdnu9BUUfoDQY1WrqOuarUcYMwRHC8Gihqh8Zh2biubdAFpAzSEL2OS247yYfodqgiKgO1K8yog7ptATFL9dFljMDrHkh1zW6OTWF1jPXaAkmY1YgKnktfxtC9dPd+Io9DvYzzPAekxBj13T3i7vKirKkqqpBsYVQ1HUFjFs0t6KK+kIjh+-JfvoBAQFMP5nH+CDaMo16KjYyjMvUNh5GWOT6MoLL8A8ygrk0dQIUabafmaEAWiinQ2gEWHSjhjJUYuj73Pcd63noQaNEYFb-Dk2S0cxe7IYm7GcYevFYjm2HyJeeQQb8tFkikVjGNoFGajUt73o+z61vYQA */\n  id: 'Presentation Tool',\n  context: {\n    url: null,\n    error: null,\n    visualEditingOverlaysEnabled: false,\n  },\n\n  on: {\n    'iframe reload': {\n      actions: assign({url: null}),\n      target: '.loading',\n    },\n  },\n\n  states: {\n    error: {\n      description:\n        'Failed to load, either because of a misconfiguration, a network error, or an unexpected error',\n      tags: ['error'],\n    },\n    loading: {\n      on: {\n        'iframe loaded': {\n          target: 'loaded',\n        },\n      },\n      tags: ['busy'],\n    },\n    loaded: {\n      on: {\n        'toggle visual editing overlays': {\n          actions: assign({\n            visualEditingOverlaysEnabled: ({event}) => event.enabled,\n          }),\n        },\n        'iframe refresh': {\n          target: '.refreshing',\n        },\n        'iframe reload': {\n          target: '.reloading',\n        },\n      },\n\n      states: {\n        idle: {},\n        refreshing: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n        reloading: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n      },\n      initial: 'idle',\n    },\n  },\n  initial: 'loading',\n})\n\nexport type PresentationMachineRef = ActorRefFrom<typeof presentationMachine>\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../util/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  // eslint-disable-next-line no-eq-null\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): React.JSX.Element {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type Path} from 'sanity'\n\nimport {StructureToolProvider} from '../../structure/StructureToolProvider'\nimport {type PresentationSearchParams, type StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  type Path,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {\n  type CommentIntentGetter,\n  CommentsIntentProvider,\n  type Path,\n  type SanityDocument,\n} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigate, type PresentationNavigateContextValue} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useAllowPatterns(previewUrlRef: PreviewUrlRef) {\n  const allowPatterns = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  if (!Array.isArray(allowPatterns)) {\n    throw new TypeError('allowPatterns must be an array')\n  }\n  return allowPatterns\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {useId as useReactId} from 'react'\n\nexport function useId(): string {\n  const id = useReactId()\n  // Uses the new format introduced in: https://github.com/facebook/react/pull/32001\n  return id.startsWith(':') ? id.replace(/^:(.+):$/, '\\u00AB$1\\u00BB') : id\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useEffect, useImperativeHandle, useRef} from 'react'\nimport {createGlobalStyle, styled} from 'styled-components'\n\nimport {useId} from '../useId'\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(\n  function IFrame(props, forwardedRef) {\n    const {animate, initial, onLoad, preventClick, src, variants, style} = props\n\n    const ref = useRef<HTMLIFrameElement | null>(null)\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const viewTransitionName = useId()\n\n    return (\n      <>\n        <IFrameElement\n          style={{\n            ...style,\n            viewTransitionName,\n          }}\n          animate={animate}\n          initial={initial}\n          onLoad={onLoad}\n          ref={ref}\n          src={src}\n          variants={variants}\n        />\n        {preventClick && <IFrameOverlay />}\n        <GlobalViewTransition />\n      </>\n    )\n  },\n)\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\nconst GlobalViewTransition = createGlobalStyle`\nhtml:active-view-transition-type(sanity-iframe-viewport) {\n  view-transition-name: none;\n  &::view-transition {\n    pointer-events: none;\n  }\n  /* &::view-transition-old(root) {\n    display: none;\n  }\n  &::view-transition-new(root) {\n    animation: none;\n  } */\n}\n`\n","import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useTargetOrigin(previewUrlRef: PreviewUrlRef): string {\n  const targetOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  if (!targetOrigin) {\n    throw new TypeError('targetOrigin is required')\n  }\n  return targetOrigin\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {useTargetOrigin} from '../useTargetOrigin'\n\nexport function PreviewLocationInput(props: {\n  fontSize?: number\n  onChange: (value: string) => void\n  previewUrlRef: PreviewUrlRef\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}): React.JSX.Element {\n  const {fontSize = 1, onChange, padding = 3, prefix, suffix, value, previewUrlRef} = props\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        let absoluteValue = sessionValue\n        try {\n          absoluteValue = new URL(sessionValue, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n\n        if (Array.isArray(allowOrigins)) {\n          if (!allowOrigins.some((pattern) => pattern.test(absoluteValue))) {\n            setCustomValidity(\n              t('preview-location-input.error', {\n                origin: targetOrigin,\n                context: 'origin-not-allowed',\n              }),\n            )\n            event.currentTarget.reportValidity()\n            return\n          }\n          // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        } else if (\n          !targetOrigin &&\n          (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === targetOrigin ? `${targetOrigin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue)\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [allowOrigins, basePath, onChange, sessionValue, t, targetOrigin],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  const handleClear = useCallback(() => {\n    setCustomValidity(undefined)\n    let nextValue = value\n    try {\n      nextValue = new URL(value, targetOrigin).toString()\n    } catch {\n      // ignore\n    }\n    setSessionValue(nextValue)\n  }, [targetOrigin, value])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [targetOrigin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={handleClear}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? new URL(value, targetOrigin).toString() : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition,no-nested-ternary */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","/* eslint-disable no-nested-ternary */\nimport {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type HeaderOptions} from '../types'\nimport {useId} from '../useId'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    presentationRef,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    previewUrlRef,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      presentationRef.send({type: 'iframe reload'})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n  const isLoaded = useSelector(presentationRef, (state) => state.matches('loaded'))\n  const isRefreshing = useSelector(presentationRef, (state) =>\n    state.matches({loaded: 'refreshing'}),\n  )\n  const isReloading = useSelector(presentationRef, (state) => state.matches({loaded: 'reloading'}))\n  const overlaysEnabled = useSelector(\n    presentationRef,\n    (state) => state.context.visualEditingOverlaysEnabled,\n  )\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  const perspectiveToggleTooltipId = useId()\n\n  /**\n   * If the preview URL machine is busy it means it's about to change the target origin and reload the iframe,\n   * so we show a spinner\n   */\n  const previewUrlBusy = useSelector(previewUrlRef, (state) => state.hasTag('busy'))\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                indeterminate={!isLoaded}\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={isLoading || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          previewUrlRef={previewUrlRef}\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {isLoaded\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {\n                          context: isLoading\n                            ? 'loading'\n                            : isRefreshing\n                              ? 'refreshing'\n                              : isReloading\n                                ? 'reloading'\n                                : 'unknown',\n                        })}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={isReloading || isRefreshing || previewUrlBusy}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          // eslint-disable-next-line react/jsx-no-bind\n          ref={(node) => {\n            node?.style.setProperty('view-transition-name', perspectiveToggleTooltipId)\n          }}\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable react/no-unused-prop-types,no-nested-ternary */\nimport {createConnectionMachine, createController} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {Translate, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationMachineRef} from '../machines/presentation-machine'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {usePresentationNavigate} from '../usePresentationNavigate'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  presentationRef: PresentationMachineRef\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n  previewUrlRef: PreviewUrlRef\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n      presentationRef,\n      previewUrlRef,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const isLoading = useSelector(\n      presentationRef,\n      (state) => state.matches('loading') || state.matches({loaded: 'reloading'}),\n    )\n\n    const [timedOut, setTimedOut] = useState(false)\n    const isRefreshing = useSelector(presentationRef, (state) =>\n      state.matches({loaded: 'refreshing'}),\n    )\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = isLoading || isRefreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      presentationRef.send({type: 'iframe reload'})\n    }, [presentationRef, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (isLoading || isRefreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, isLoading, isRefreshing])\n\n    useEffect(() => {\n      if (isLoading || isRefreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [isLoading, overlaysConnection, isRefreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      presentationRef.send({type: 'iframe loaded'})\n    }, [presentationRef])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) && !continueAnyway\n      )\n    }, [continueAnyway, isLoading, isRefreshing, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        isLoading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      isLoading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition({\n            // @ts-expect-error - fix typings\n            update: () => flushSync(() => update()),\n            types: ['sanity-iframe-viewport'],\n          })\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    const toast = useToast()\n    const allowOrigins = useAllowPatterns(previewUrlRef)\n    const [checkOrigin, setCheckOrigin] = useState<false | string>(false)\n    const [reportedMismatches] = useState(new Set<string>())\n    const reportMismatchingOrigin = useEffectEvent((reportedOrigin: string) => {\n      if (allowOrigins.some((allow) => allow.test(reportedOrigin))) {\n        setCheckOrigin(reportedOrigin)\n        return\n      }\n      if (reportedMismatches.has(reportedOrigin)) return\n      reportedMismatches.add(reportedOrigin)\n      console.warn('Visual Editing is here but misconfigured', {reportedOrigin})\n      toast.push({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${reportedOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-frame.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-frame.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              targetOrigin: previewUrl.origin,\n              reportedOrigin,\n            }}\n          />\n        ),\n      })\n    })\n    const navigate = usePresentationNavigate()\n    const navigateEvent = useEffectEvent((url: string) => {\n      if (!checkOrigin) return\n      const nextUrl = new URL(url, checkOrigin)\n      navigate(`${checkOrigin}${nextUrl.pathname}${nextUrl.search}${nextUrl.hash}`)\n    })\n    useEffect(() => {\n      if (!checkOrigin) {\n        return undefined\n      }\n      const target = ref.current?.contentWindow\n      if (!target) {\n        return undefined\n      }\n      const controller = createController({targetOrigin: checkOrigin})\n      controller.addTarget(target)\n      const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n        {\n          name: 'presentation',\n          heartbeat: true,\n          connectTo: 'visual-editing',\n        },\n        createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n          actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n        }),\n      )\n\n      comlink.on('visual-editing/navigate', (data) => {\n        navigateEvent(data.url)\n      })\n      const stop = comlink.start()\n\n      return () => {\n        stop()\n        controller.destroy()\n      }\n    }, [checkOrigin])\n    useEffect(() => {\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const interval = setInterval(() => {\n          ref.current?.contentWindow?.postMessage(\n            {domain: 'sanity/channels', from: 'presentation', type: 'presentation/status'},\n            /**\n             * The targetOrigin is set to '*' intentionally here, as we need to find out if the iframe is misconfigured and has the wrong origin\n             */\n            '*',\n          )\n        }, 1_000)\n\n        const controller = new AbortController()\n        window.addEventListener(\n          'message',\n          ({data}: MessageEvent<unknown>) => {\n            /**\n             * Listen for replies to presentation/status\n             */\n            if (\n              data &&\n              typeof data === 'object' &&\n              'domain' in data &&\n              data.domain === 'sanity/channels' &&\n              'type' in data &&\n              data.type === 'visual-editing/status' &&\n              'data' in data &&\n              typeof data.data === 'object' &&\n              data.data &&\n              'origin' in data.data &&\n              typeof data.data.origin === 'string'\n            ) {\n              reportMismatchingOrigin(data.data.origin)\n            }\n          },\n          {signal: controller.signal},\n        )\n\n        return () => {\n          controller.abort()\n          clearInterval(interval)\n        }\n      }\n      return undefined\n    }, [overlaysConnection, timedOut])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !isLoading &&\n                !isRefreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  targetOrigin: string\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, targetOrigin, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const url = new URL(relativeUrl, targetOrigin)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, perspectiveStack, relativeUrl, resolvers, targetOrigin])\n\n  return mainDocumentState\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\n\nimport {type PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\nimport {parseRouterState} from './util/parse'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview: routerSearchParams.preview || initialPreviewUrl.toString(),\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state.id) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {usePerspective} from 'sanity'\n\nimport {type PresentationPerspective} from './types'\n\n/**\n * @internal\n */\nexport function usePresentationPerspective(): PresentationPerspective {\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n  return perspective\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable max-statements,@typescript-eslint/no-shadow */\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {presentationMachine} from './machines/presentation-machine'\nimport {type PreviewUrlRef} from './machines/preview-url'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useAllowPatterns} from './useAllowPatterns'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePresentationPerspective} from './usePresentationPerspective'\nimport {useStatus} from './useStatus'\nimport {useTargetOrigin} from './useTargetOrigin'\nimport {debounce} from './util/debounce'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n  initialPreviewUrl: URL\n  previewUrlRef: PreviewUrlRef\n}): React.JSX.Element {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n    initialPreviewUrl,\n    previewUrlRef,\n  } = props\n\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const components = tool.options?.components\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const perspective = usePresentationPerspective()\n\n  const canSharePreviewAccess = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewMode?.shareAccess !== false,\n  )\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const presentationRef = useActorRef(presentationMachine)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    targetOrigin,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title} = data\n      let url = data.url\n      /**\n       * The URL is relative, we need to resolve it to an absolute URL\n       */\n      if (!url.startsWith('http')) {\n        try {\n          url = new URL(url, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n      }\n\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate(\n            {},\n            {preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`},\n          )\n        } catch {\n          handleNavigate({}, {preview: url})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      presentationRef.send({type: 'toggle visual editing overlays', enabled: data.enabled})\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        presentationRef.send({type: 'iframe refresh'})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      presentationRef.send({type: 'iframe loaded'})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, presentationRef, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don't need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, targetOrigin)\n      const preview = url.toString()\n      if (params.preview === preview) {\n        return\n      }\n      if (Array.isArray(allowOrigins)) {\n        if (allowOrigins.some((pattern) => pattern.test(preview))) {\n          navigate({}, {preview})\n        }\n      } else if (url.origin === targetOrigin) {\n        navigate({}, {preview})\n      }\n    },\n    [targetOrigin, params.preview, allowOrigins, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      try {\n        const frameOrigin = new URL(frameStateRef.current.url, targetOrigin).origin\n        const previewOrigin = new URL(params.preview, targetOrigin).origin\n        if (frameOrigin !== previewOrigin) {\n          return\n        }\n      } catch {\n        // ignore\n      }\n\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection === 'connected') {\n        /**\n         * Translate the possibly absolute params url back to a relative URL\n         */\n        let url = params.preview\n        if (url.startsWith('http')) {\n          try {\n            const newUrl = new URL(params.preview, targetOrigin)\n            url = newUrl.pathname + newUrl.search + newUrl.hash\n          } catch {\n            // ignore\n          }\n        }\n        visualEditingComlink?.post('presentation/navigate', {\n          url,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      presentationRef.send({type: 'iframe refresh'})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, presentationRef, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // @TODO move closer to the <iframe> element itself to allow for more precise handling of when to reload the iframe and when to reconnect when the target origin changes\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          header={unstable_header}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                          presentationRef={presentationRef}\n                          previewUrlRef={previewUrlRef}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\n// @TODO reconcile with core utils\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\n// @TODO reconcile with core utils\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\n// @TODO reconcile with core utils\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineCreatePreviewSecretActor({\n  client,\n  currentUserId,\n}: {\n  client: SanityClient\n  currentUserId: string | undefined\n}): PromiseActorLogic<{\n  secret: string\n  expiresAt: Date\n}> {\n  return fromPromise(async () => {\n    return await createPreviewSecret(client, 'sanity/presentation', location.href, currentUserId)\n  })\n}\n","import {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineReadSharedSecretActor({\n  client,\n}: {\n  client: SanityClient\n}): PromiseActorLogic<string | null> {\n  return fromPromise(async () => {\n    return client.fetch<string | null>(\n      fetchSharedAccessQuery,\n      {},\n      {tag: 'presentation.fallback-to-shared-access-secret'},\n    )\n  })\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PreviewUrlAllowOption, type PreviewUrlAllowOptionContext} from '../types'\n\ninterface Context extends Pick<PreviewUrlAllowOptionContext, 'client'> {\n  allowOption: PreviewUrlAllowOption | undefined\n}\ntype Input = Omit<PreviewUrlAllowOptionContext, 'client' | 'origin'>\n\n/** @internal */\nexport function defineResolveAllowPatternsActor({\n  client,\n  allowOption,\n}: Context): PromiseActorLogic<URLPattern[], Input> {\n  return fromPromise<URLPattern[], Input>(async ({input}) => {\n    const {initialUrl} = input\n\n    /**\n     * Lazy load the URLPattern polyfill on-demand, if needed\n     */\n    if (typeof URLPattern === 'undefined') {\n      await import('urlpattern-polyfill')\n    }\n\n    /**\n     * If no allow option is provided, we use the initial URL to infer the pattern\n     */\n    if (!allowOption) {\n      return [new URLPattern(initialUrl.origin)]\n    }\n\n    const maybePatterns =\n      typeof allowOption === 'function'\n        ? await allowOption({client, origin, initialUrl})\n        : allowOption\n    const patterns = Array.isArray(maybePatterns) ? maybePatterns : [maybePatterns]\n    const urlPatterns = patterns.map((value) => {\n      const urlPattern = new URLPattern(value)\n      if (urlPattern.hostname === '*') {\n        throw new Error(\n          `It's insecure to allow any hostname, it could disclose data to a malicious site`,\n        )\n      }\n      return urlPattern\n    })\n    /**\n     * If the declared patterns don't consider the initial URL valid, we add it to the list of patterns\n     */\n    if (!urlPatterns.some((pattern) => pattern.test(initialUrl.origin))) {\n      return [...urlPatterns, new URLPattern(initialUrl.origin)]\n    }\n\n    return urlPatterns\n  })\n}\n","import {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PresentationPerspective, type PreviewUrlOption} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport function defineResolveInitialUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, {previewSearchParam: string | null}> {\n  return fromPromise<URL, {previewSearchParam: string | null}>(\n    async ({input}: {input: {previewSearchParam: string | null}}) => {\n      const {origin} = location\n      /**\n       * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n       */\n      if (typeof previewUrlOption === 'function') {\n        const initial = await previewUrlOption({\n          client,\n          studioBasePath,\n          // @TODO handle checking permissions here, and then generating a secret\n          previewUrlSecret: '',\n          studioPreviewPerspective: encodeStudioPerspective(perspective),\n          previewSearchParam: input.previewSearchParam,\n        })\n        return new URL(initial, origin)\n      }\n\n      /**\n       * Provide backwards compatibility for versions where `previewUrl` where optional\n       */\n      if (!previewUrlOption) {\n        return new URL('/', origin)\n      }\n      /**\n       * Support setting `previewUrl` as a string shorthand\n       */\n      if (typeof previewUrlOption === 'string') {\n        return new URL(previewUrlOption, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'function') {\n        const initial = await previewUrlOption.initial({\n          client,\n          origin,\n        })\n        return new URL(initial, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'string') {\n        return new URL(previewUrlOption.initial, origin)\n      }\n\n      return new URL(previewUrlOption.preview || '/', previewUrlOption.origin || origin)\n    },\n  )\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n  type PreviewUrlPreviewModeOptionContext,\n} from '../types'\n\ntype Options = Omit<PreviewUrlPreviewModeOptionContext, 'origin'>\n\ninterface Context extends Pick<Options, 'client'> {\n  previewUrlOption: PreviewUrlOption | undefined\n}\ntype Input = Omit<Options, 'client'>\n\n/** @internal */\nexport function defineResolvePreviewModeActor({\n  client,\n  previewUrlOption,\n}: Context): PromiseActorLogic<PreviewUrlPreviewMode | false, Input> {\n  return fromPromise<PreviewUrlPreviewMode | false, Input>(async ({input}) => {\n    const {targetOrigin} = input\n\n    /**\n     * Handle legacy draftMode options\n     */\n    if (typeof previewUrlOption === 'object' && previewUrlOption?.draftMode) {\n      return {\n        enable: previewUrlOption.draftMode.enable,\n        shareAccess: previewUrlOption.draftMode.shareAccess ?? true,\n      }\n    }\n\n    /**\n     * If no preview mode option is provided, we disable preview mode\n     */\n    if (\n      !previewUrlOption ||\n      typeof previewUrlOption === 'string' ||\n      typeof previewUrlOption === 'function' ||\n      !previewUrlOption.previewMode\n    ) {\n      return false\n    }\n\n    /**\n     * If the option is a function, we resolve it\n     */\n    const previewMode =\n      typeof previewUrlOption.previewMode === 'function'\n        ? await previewUrlOption.previewMode({client, origin, targetOrigin})\n        : previewUrlOption.previewMode\n\n    if (previewMode === false) {\n      return false\n    }\n\n    /**\n     * Return only supported preview mode options, filter out unknowns\n     */\n    return {\n      enable: previewMode.enable,\n      shareAccess: previewMode.shareAccess ?? true,\n    }\n  })\n}\n","import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PresentationPerspective,\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport interface ResolvePreviewModeUrlInput {\n  previewUrlSecret: string\n  resolvedPreviewMode: PreviewUrlPreviewMode\n  initialUrl: URL\n}\n\n/** @internal */\nexport function defineResolvePreviewModeUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, ResolvePreviewModeUrlInput> {\n  return fromPromise<URL, ResolvePreviewModeUrlInput>(async ({input}) => {\n    const {previewUrlSecret, resolvedPreviewMode, initialUrl} = input\n\n    /**\n     * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n     */\n    if (typeof previewUrlOption === 'function') {\n      const initial = await previewUrlOption({\n        client,\n        studioBasePath,\n        previewUrlSecret,\n        studioPreviewPerspective: encodeStudioPerspective(perspective),\n        previewSearchParam: initialUrl.toString(),\n      })\n      return new URL(initial, initialUrl)\n    }\n\n    /**\n     * If the resolved preview mode is false then we have an unexpected state that shouldn't be possible\n     */\n    if (!resolvedPreviewMode) {\n      throw new Error('Resolved preview mode is false')\n    }\n\n    const url = new URL(resolvedPreviewMode.enable, initialUrl)\n\n    url.searchParams.set(urlSearchParamPreviewSecret, previewUrlSecret)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    if (initialUrl.pathname !== url.pathname) {\n      url.searchParams.set(\n        urlSearchParamPreviewPathname,\n        `${initialUrl.pathname}${initialUrl.search}${initialUrl.hash}`,\n      )\n    }\n\n    return url\n  })\n}\n","import {fromPromise} from 'xstate'\n\n/** @internal */\nexport const resolveUrlFromPreviewSearchParamActor = fromPromise<\n  URL,\n  {initialUrl: URL; previewSearchParam: string | null | undefined; allowOrigins: URLPattern[]}\n>(async ({input}) => {\n  const {previewSearchParam, initialUrl, allowOrigins} = input\n\n  /**\n   * If the preview search param is falsy we can skip\n   */\n  if (!previewSearchParam) {\n    return initialUrl\n  }\n\n  /**\n   * Validate the previewSearchParam\n   */\n  try {\n    const previewSearchParamUrl = new URL(previewSearchParam, initialUrl.origin)\n    if (!allowOrigins.some((pattern) => pattern.test(previewSearchParamUrl.origin))) {\n      return initialUrl\n    }\n    return previewSearchParamUrl\n  } catch (err) {\n    return initialUrl\n  }\n})\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityDocument} from '@sanity/types'\nimport {uuid} from '@sanity/uuid'\nimport {throwError} from 'rxjs'\nimport {type DocumentValuePermission, type PermissionCheckResult} from 'sanity'\nimport {type ActorRefFrom, assign, fromObservable, fromPromise, log, setup} from 'xstate'\n\nimport {type ResolvePreviewModeUrlInput} from '../actors/resolve-preview-mode-url'\nimport {resolveUrlFromPreviewSearchParamActor} from '../actors/resolve-url-from-preview-search-param'\nimport {type PreviewUrlPreviewMode} from '../types'\n\ninterface Context {\n  initialUrl: URL | null\n  previewUrl: URL | null\n  allowOrigins: URLPattern[] | null\n  error: Error | null\n  previewSearchParam: string | null\n  previewUrlSecret: {secret: string; expiresAt: Date} | null\n  previewAccessSharingCreatePermission: PermissionCheckResult | null\n  previewAccessSharingReadPermission: PermissionCheckResult | null\n  previewAccessSharingUpdatePermission: PermissionCheckResult | null\n  previewUrlSecretPermission: PermissionCheckResult | null\n  previewMode: PreviewUrlPreviewMode | null\n}\n\ntype SetPreviewSearchParamEvent = {\n  type: 'set preview search param'\n  previewSearchParam: string | null\n}\ntype Event = SetPreviewSearchParamEvent\n\ntype Input = Omit<SetPreviewSearchParamEvent, 'type'>\n\nexport interface CheckPermissionInput {\n  checkPermissionName: DocumentValuePermission\n  document: Partial<SanityDocument> | null\n}\n\n/**\n * Used for permissions checks\n */\nexport const shareAccessSingletonDocument = {_id: schemaIdSingleton, _type: schemaTypeSingleton}\nexport const previewUrlSecretDocument = {\n  _id: `drafts.${uuid()}`,\n  _type: schemaType,\n}\n\nexport const previewUrlMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    input: Input\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    'notify preview will likely fail': log(\n      `Missing permissions to create preview secret, or read shared preview secret. Preview will likely fail loading.`,\n    ),\n    'assign preview search param': assign({\n      previewSearchParam: (_, params: {previewSearchParam: string | null}) =>\n        params.previewSearchParam,\n    }),\n    'assign error': assign({\n      error: (_, params: {message: string; error: unknown}) => {\n        return params.error instanceof Error\n          ? params.error\n          : new Error(params.message, {cause: params.error})\n      },\n    }),\n  },\n  actors: {\n    'check permission': fromObservable<PermissionCheckResult, CheckPermissionInput>(() =>\n      throwError(\n        () =>\n          new Error(\n            `The 'check permission' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'check permission': fromObservable(({input}: {input: CheckPermissionInput}) => ...)}})`,\n          ),\n      ),\n    ),\n    'resolve initial url': fromPromise<URL, {previewSearchParam: string | null}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve initial url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve initial url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve allow patterns': fromPromise<URLPattern[], {initialUrl: URL}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve allow patterns' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve allow pattern': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve url from preview search param': resolveUrlFromPreviewSearchParamActor,\n    'resolve preview mode': fromPromise<PreviewUrlPreviewMode | false, {targetOrigin: string}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'create preview secret': fromPromise<{\n      secret: string\n      expiresAt: Date\n    }>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'create preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'create preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'read shared preview secret': fromPromise<string | null>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'read shared preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'read shared preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve preview mode url': fromPromise<URL, ResolvePreviewModeUrlInput>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n  },\n  guards: {\n    'has checked permissions': ({context}) => {\n      return Boolean(\n        context.previewAccessSharingCreatePermission &&\n          context.previewAccessSharingReadPermission &&\n          context.previewAccessSharingUpdatePermission &&\n          context.previewUrlSecretPermission,\n      )\n    },\n    'search param has new origin': ({context, event}) => {\n      if (!context.previewUrl || !event.previewSearchParam) {\n        return false\n      }\n      try {\n        const previewSearchParamUrl = new URL(event.previewSearchParam, context.previewUrl)\n        return context.previewUrl.origin !== previewSearchParamUrl.origin\n      } catch {\n        return false\n      }\n    },\n    'can create preview secret': ({context}) => {\n      return context.previewUrlSecretPermission?.granted === true\n    },\n\n    'has preview mode with created secret': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewUrlSecretPermission?.granted === true\n    },\n    'has preview mode with share access': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewAccessSharingReadPermission?.granted === true\n    },\n    'has preview mode without permissions': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return (\n        context.previewAccessSharingReadPermission?.granted === false &&\n        context.previewUrlSecretPermission?.granted === false\n      )\n    },\n  },\n  delays: {\n    expiredSecret: ({context}) => {\n      if (!context.previewUrlSecret?.expiresAt) {\n        return 0\n      }\n      const now = Date.now()\n      const expiresAt = context.previewUrlSecret.expiresAt.getTime()\n      return Math.max(expiresAt - now, 0)\n    },\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOYBuBLMB3ABAKoBKAMgMRiqoD2qAdAA4A2AhgC4BmdAtvWphwESpBFgB2GGgGMOWGuIDaABgC6K1YlCMasLO3nitIAB6IArAA56AZgCcAdkcBGS8vMAmO+YBszgDQgAJ6Izs4+9M7KACzKztGWHg4OPubmAL7pgQLYeERklNR0TGxcvPzoucJkYpIycgqKzupqxjp6BgrGZggAtM520ZHRdjZjNjFe7oEhCGERUbHxicmpGVkgOUL5FFS0DCwc3Kh8W3kitVKynUoeLZpIIO36ht2IvV62Hl7elmE2lh83xmoXCkRicQSSRS5gSmWylW2IkK+xKR3KZ2qogkVwaShs9zauheXUePV6gPo3jSUyi-xBczBi0hKxh5mc8M2iPOBVgYHY+EY3IIfNYqGkAAtBWLWDwNESOq8yaCbM56A4bB5fGllHYvD4fAz4h56CNfG5LKqHMpLdFOZidvRJWBpABrCRQZBUHhYWB6BSwcjyx7PG5vPrs5TqjWqyyjTXRDwMjwxei68J2ZQ2nyWXN2jYOkT0dCwGjMbDiKAASXEL1YzEIqGY5AgCjA9BxNFd7cLZGLcDLFertYM9cbzEu9RuGmD2mJYeVfRGdipyh86Yc0XiE3MDK3JssIwcrmtPjGSXzCMEPNI-dL5Y9NbrDabKOKhzKJwq16xd8Hj5HLAxybSdrkMGdWhDeclVAclN3odlzBsKwBjSSxjwcZM7DVeJ1w8P4xmidk7HtYVHRLf9KwAQWYZgaFwZAOHYKhxEDVtxHbTtu2-KpyIHB9qNo+jGPYZjUFY0C8Qgh450VUlYPedkHHoHwnDSZDVOiGwfGiBlUhXXwwjsQYtKSYzSJ-Pj7yHGi6IYpiWMDPZ31KY5TjIosKIEqBbOEhzxNgSTpzUWcnmg+TTHePV6Hw3MYgzaItJ0hlYRNTNkLiHxBl1GILN4zz+KHccADFaB4TEAGUwDFSVGNQWUWzbDs6m43tby8oqm1KmhyuFKqaolOrZSC8CQsg2SSSMRdel8ZSNUTdlcw8M07AZQZrDXdaDRtUZnHWK98r7DqPRKsrKuq8VBplHg3wOVyMQ8o7CpOrqzr6i7auukbGjGmSwrkqaFL6MJlLiWFlC1EGty0hknAiXVVPMRx12UJwOQLR72ueytMQAWRoCAwEajjmqkVrMb-by8YJsBvqUX6FUm8Nem2+hbWPUZErGTcjS8NUJg8AE9T1ZwHHwvKkSe6yPWpwnic4lqewp46ceFfHCbpmdmkZhcgZmyxzFsDmTPcXUUiNRKDy3ZQJlVLSkYlm9KaHWWifYhWyaVyyCul1Wf3V2nOzAn71DuHWYMivovGsBxPCy74beWaJDWCUJzBSFTrUcQYdMzIFHd-FXPTVmn5dJrsvcOrHfeL-2ac1kKCXDiLyWcNKJiiHM-BtONwgtnMEM1DVNwhhI7B8AurMo2uqgD260U-dzval6fXYbwkoIB5moijLLkm5tvYRBo1nGQtND11ZaIdzEiMeX6vV5LuW+QFIVLNFS7pXquVxv+pnF1FtYP4OY7AG3QohJMqcEDeGUq4NwYQBhLEnkWWAABXaQ0g4CBhfoKMiH9JRf1lKFUMEceiizVPA0+7gtQQy8LzXU6obaJTFtEJwHhXDIL7G-WepccHcO2PgqUjBrrEPCoDSOFI3C2AGHtQ8sIiJJGTILZS7JRaeGSKw7CnDbz8LwAHJ06AOBgHOtIdA7Ay5cUrpLHRT92ymOqsxExZj16iK3gAqI6oaQ6QtE4YylhkynzmkCBGNgNR7VvgdaxTBbEGIccY969jzHOTuuiL8bVol10JrEoxTj+QuN-iQlu7xwjKX1P8bSTC0hGhcKaBIOZAQGkBKE7RGSeFZMMRACqEoxRgCohgrBFjFY8Sibo3A+iOldJ6X0zBfp8l-UKeIshjgqTGTiPYPaGotS7igd8QWtgsp6iQnFOEd8q6tKEOM6qnTunoGmQM5JC83LDKdqMy5rBrlTP6bMoOUkGab3-kDU+ERVEpnsEjDRVSdljBXKeQY3h5gOBaa8mmzt4k-nHIMz2zzfzIvaYVNFVRxxzObosxAfg1Q2jSOERIh5kIBNGKaNZ2lvjhFhEimJHUCVCAxQ8j8Tz0m4vbJyzERKfnBQ3hNXWkdyWeJsCMVhqNsK6mTO4Q2Q9DysLCEhDw7LMntjQV8wMJhYDsCMfQVgnAxIAAowAmEYFgdAnSXRmIAJTkAFTEg1MzYCuIBZHKYKlUiqWwrCMJkDZgDAYceRMfwUisPYZYTIGxxA03gI8NqJLmZ6msKqENcjErqIZL0cethvDGXLew9hiYWnOjdDLb0vp-SsUzdNcwEMEJ7WTohDMfgU4RpTCpUJnhYrHghuEFpRcnyjhfMwFtet2Q2FNOwsWZarBan8TsuMkRvhIzPJGDwmkWnJLnf6g0aZl0mQTURDdsxYiGwwsRIEgwEwTuxj5IS9lRKORPeSJCOF4XgrUZqbZsxwZszcJtbC4RUg2FfTXU6PVzoDSGjwH9ik-gxRGG4NtxkkZblhgyxIhFQG5lSPEODj89VoYjKqGKURkij0zImXSUCwiozZuDLUCQQY6tOVEr1WDqMsxNCkP4RFPBZj+I4I0qoRMODjIlceBzkK6raWAIT7DDZlNPhUuVkKI0pEXbHBISF1yAiIqpi5KL7E5ISWYoTna2b6Qg+DcFN7EAphLdpdOWVoPJ0RXxl5HKrmTNuYahzaQviaQPVERa8mlGeBUnnQyDStSwcCzi4L1kuV4HHNR4DCFdRaVVFSzcZ4VVIVsDEVhZ5QnWlYZZvRKLj3-KlT0FIKjVRZghkCXwqkjQGzVFxvOMisoWYy46QV9ABN+mo3mFZZ427lp032jzVa2bJGtCUtciak1AA */\n  id: 'Preview URL',\n  context: ({input}) => ({\n    initialUrl: null,\n    previewUrl: null,\n    error: null,\n    allowOrigins: null,\n    previewSearchParam: input.previewSearchParam,\n    previewUrlSecret: null,\n    previewAccessSharingCreatePermission: null,\n    previewAccessSharingReadPermission: null,\n    previewAccessSharingUpdatePermission: null,\n    previewUrlSecretPermission: null,\n    previewMode: null,\n  }),\n\n  invoke: [\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'read', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingReadPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingCreatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'update', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingUpdatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: previewUrlSecretDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewUrlSecretPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n  ],\n\n  on: {\n    'set preview search param': {\n      actions: {\n        type: 'assign preview search param',\n        params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n      },\n    },\n  },\n\n  states: {\n    checkingPermissions: {\n      always: {\n        guard: 'has checked permissions',\n        target: 'resolvingInitialUrl',\n      },\n      tags: 'busy',\n    },\n\n    resolvingInitialUrl: {\n      invoke: {\n        src: 'resolve initial url',\n        input: ({context}) => ({previewSearchParam: context.previewSearchParam}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve initial url',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingAllowPatterns',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n\n      tags: 'busy',\n    },\n\n    error: {\n      type: 'final',\n      tags: 'error',\n    },\n\n    resolvingAllowPatterns: {\n      invoke: {\n        src: 'resolve allow patterns',\n        input: ({context}) => ({initialUrl: context.initialUrl!}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingUrlFromPreviewSearchParam',\n          actions: assign({allowOrigins: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingUrlFromPreviewSearchParam: {\n      id: 'loop',\n      invoke: {\n        src: 'resolve url from preview search param',\n        input: ({context}) => ({\n          initialUrl: context.initialUrl!,\n          allowOrigins: context.allowOrigins!,\n          previewSearchParam: context.previewSearchParam,\n        }),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url from search param',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingPreviewMode',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingPreviewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n      invoke: {\n        src: 'resolve preview mode',\n        input: ({context}) => ({targetOrigin: context.initialUrl!.origin}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: [\n          {\n            guard: {\n              type: 'has preview mode with created secret',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.createPreviewSecret',\n          },\n          {\n            guard: {\n              type: 'has preview mode with share access',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.readShareAccess',\n          },\n          {\n            guard: {\n              type: 'has preview mode without permissions',\n              params: ({event}) => event.output,\n            },\n            actions: [\n              assign({\n                previewUrl: ({context}) => context.initialUrl,\n              }),\n              'notify preview will likely fail',\n            ],\n            target: 'success',\n          },\n          {\n            actions: assign({\n              previewUrl: ({context}) => context.initialUrl,\n            }),\n            target: 'success',\n          },\n        ],\n      },\n      tags: ['busy'],\n    },\n\n    success: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n    },\n\n    previewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n\n      states: {\n        createPreviewSecret: {\n          invoke: {\n            src: 'create preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to create preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({previewUrlSecret: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        readShareAccess: {\n          invoke: {\n            src: 'read shared preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to read shared preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({\n                previewUrlSecret: ({event}) => ({\n                  secret: event.output!,\n                  expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 60 * 24),\n                }),\n              }),\n            },\n          },\n          tags: ['busy'],\n        },\n        resolvePreviewUrl: {\n          invoke: {\n            src: 'resolve preview mode url',\n            input: ({context}) => ({\n              initialUrl: context.initialUrl!,\n              resolvedPreviewMode: context.previewMode!,\n              previewUrlSecret: context.previewUrlSecret!.secret,\n            }),\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to resolve preview url',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'success',\n              actions: assign({previewUrl: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        error: {\n          type: 'final',\n          tags: ['error'],\n        },\n        success: {\n          after: {\n            expiredSecret: {\n              guard: 'can create preview secret',\n              actions: assign({previewUrlSecret: null}),\n              target: 'createPreviewSecret',\n              reenter: true,\n            },\n          },\n        },\n      },\n      initial: 'readShareAccess',\n    },\n  },\n\n  initial: 'checkingPermissions',\n})\nexport type PreviewUrlRef = ActorRefFrom<typeof previewUrlMachine>\n","import {useToast} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {useActiveWorkspace, useClient, useCurrentUser, useGrantsStore, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {fromObservable} from 'xstate'\n\nimport {defineCreatePreviewSecretActor} from './actors/create-preview-secret'\nimport {defineReadSharedSecretActor} from './actors/read-shared-secret'\nimport {defineResolveAllowPatternsActor} from './actors/resolve-allow-patterns'\nimport {defineResolveInitialUrlActor} from './actors/resolve-initial-url'\nimport {defineResolvePreviewModeActor} from './actors/resolve-preview-mode'\nimport {defineResolvePreviewModeUrlActor} from './actors/resolve-preview-mode-url'\nimport {API_VERSION} from './constants'\nimport {presentationLocaleNamespace} from './i18n'\nimport {previewUrlMachine, type PreviewUrlRef} from './machines/preview-url'\nimport {type PreviewUrlAllowOption, type PreviewUrlOption} from './types'\nimport {usePresentationPerspective} from './usePresentationPerspective'\n\nexport function usePreviewUrlActorRef(\n  previewUrlOption: PreviewUrlOption | undefined,\n  allowOption: PreviewUrlAllowOption | undefined,\n): PreviewUrlRef {\n  const grantsStore = useGrantsStore()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const currentUserId = currentUser?.id\n  const workspace = useActiveWorkspace()\n  const studioBasePath = workspace?.activeWorkspace?.basePath || '/'\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n  const {push: pushToast} = useToast()\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const perspective = usePresentationPerspective()\n\n  const actorRef = useActorRef(\n    previewUrlMachine.provide({\n      actions: {\n        'notify preview will likely fail': () =>\n          pushToast({\n            id: 'preview-url-secret.missing-grants',\n            closable: true,\n            status: 'error',\n            duration: Infinity,\n            title: t('preview-url-secret.missing-grants'),\n          }),\n      },\n      actors: {\n        'create preview secret': defineCreatePreviewSecretActor({client, currentUserId}),\n        'read shared preview secret': defineReadSharedSecretActor({client}),\n        'resolve allow patterns': defineResolveAllowPatternsActor({\n          client,\n          allowOption,\n        }),\n        'resolve initial url': defineResolveInitialUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'resolve preview mode': defineResolvePreviewModeActor({\n          client,\n          previewUrlOption,\n        }),\n        'resolve preview mode url': defineResolvePreviewModeUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'check permission': fromObservable(({input}) =>\n          grantsStore.checkDocumentPermission(input.checkPermissionName, input.document),\n        ),\n      },\n    }),\n    {input: {previewSearchParam}},\n  )\n\n  /**\n   * Sync changes to router state for the preview search param\n   */\n  useEffect(() => {\n    actorRef.send({type: 'set preview search param', previewSearchParam})\n  }, [actorRef, previewSearchParam])\n\n  const error = useSelector(actorRef, (state) =>\n    // eslint-disable-next-line no-nested-ternary\n    state.status === 'error' ? state.error : state.hasTag('error') ? state.context.error : null,\n  )\n\n  // Propagate the error to the nearest error boundary\n  if (error) throw error\n\n  return actorRef\n}\n","import {useToast} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useReportInvalidPreviewSearchParam(previewUrlRef: PreviewUrlRef): void {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n\n  const allowOrigins = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  const currentOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  useEffect(() => {\n    if (!Array.isArray(allowOrigins) || !previewSearchParam || !currentOrigin) return\n    const nextOrigin = new URL(previewSearchParam, currentOrigin).origin\n    if (!allowOrigins.some((pattern) => pattern.test(nextOrigin))) {\n      pushToast({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${nextOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-search-param.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-search-param.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              previewSearchParam,\n              blockedOrigin: nextOrigin,\n            }}\n          />\n        ),\n      })\n    }\n  }, [allowOrigins, currentOrigin, previewSearchParam, pushToast, t])\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {useSelector} from '@xstate/react'\nimport {type Tool} from 'sanity'\n\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {usePreviewUrlActorRef} from './usePreviewUrlActorRef'\nimport {useReportInvalidPreviewSearchParam} from './useReportInvalidPreviewSearchParam'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck({\n  tool,\n}: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const previewUrlRef = usePreviewUrlActorRef(tool.options?.previewUrl, tool.options?.allowOrigins)\n  useReportInvalidPreviewSearchParam(previewUrlRef)\n\n  const previewAccessSharingCreatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingCreatePermission,\n  )\n  const previewAccessSharingUpdatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingUpdatePermission,\n  )\n  const previewAccessSharingReadPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingReadPermission,\n  )\n  const previewUrlSecretPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewUrlSecretPermission,\n  )\n  const url = useSelector(previewUrlRef, (state) => state.context.previewUrl)\n  // @TODO the vercel protection bypass can be moved to the iframe level\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    !url ||\n    vercelProtectionBypassReadyState === 'loading' ||\n    !previewAccessSharingCreatePermission ||\n    typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n    !previewAccessSharingUpdatePermission ||\n    typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n    !previewUrlSecretPermission ||\n    !previewAccessSharingReadPermission ||\n    typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n    typeof previewUrlSecretPermission.granted === 'undefined'\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      tool={tool}\n      initialPreviewUrl={url}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n      previewUrlRef={previewUrlRef}\n    />\n  )\n}\n"],"names":["PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","presentationMachine","setup","types","actions","actors","guards","createMachine","id","context","url","error","visualEditingOverlaysEnabled","assign","target","states","description","tags","loading","loaded","event","enabled","idle","refreshing","reloading","initial","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","t7","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","encodeQueryString","params","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","StructureDocumentPane","DocumentPanel","StructureToolProvider","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","perspectiveStack","usePerspective","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","snapshot","getPreviewValueWithFallback","fallback","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationProvider","name","useAllowPatterns","previewUrlRef","allowPatterns","useSelector","TypeError","allowOrigins","encodeStudioPerspective","studioPerspective","useId","useReactId","startsWith","replace","IFrame","forwardedRef","animate","onLoad","preventClick","src","variants","useImperativeHandle","instance","handleBlur","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","viewTransitionName","IFrameElement","motion","create","iframe","IFrameOverlay","Box","GlobalViewTransition","createGlobalStyle","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","perspective","targetOrigin","URL","urlSearchParamPreviewPerspective","pathname","search","openPreviewLink","currentTarget","href","handleOpenPopup","LaunchIcon","useTargetOrigin","previewUrl","origin","PreviewLocationInput","fontSize","onChange","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","toString","pattern","test","reportValidity","nextValue","handleKeyDown","nextValue_0","handleClear","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","iframeRef","onPathChange","onRefresh","overlaysConnection","presentationRef","setViewport","toggleOverlay","viewport","toggleViewportSize","send","handleRefresh","isLoading","isLoaded","isRefreshing","isReloading","overlaysEnabled","previewURL","withoutSecretSearchParams","perspectiveToggleTooltipId","previewUrlBusy","PanelLeftIcon","content","fallbackPlacements","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","t30","RefreshIcon","t31","t32","t33","t34","node","setProperty","t35","t36","t37","t38","t39","t40","MobileDeviceIcon","DesktopIcon","t41","t42","t43","t44","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","matches","state_0","state_1","state_2","state_3","state_4","hasTag","MotionFlex","Preview","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","previewHeader","timedOut","setTimedOut","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","toast","checkOrigin","setCheckOrigin","reportedMismatches","Set","reportMismatchingOrigin","useEffectEvent","reportedOrigin","allow","add","duration","Infinity","usePresentationNavigate","navigateEvent","nextUrl","hash","contentWindow","createController","addTarget","createChannel","heartbeat","connectTo","createConnectionMachine","provide","createCompatibilityActors","stop","start","destroy","interval","setInterval","postMessage","domain","clearInterval","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","published","setPublished","previewDrafts","setPreviewDrafts","urlRef","perspective_0","documents","setCache","cache","isEqual","setDocumentsOnPage","keyedCache","uniqueDocuments","cache_0","forEach","doc","sourceDocument","_projectId","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","source","open","unsubs","size","source_0","closed","source_1","source_2","POPUP_CHECK_INTERVAL","unsub","usePresentationPerspective","selectedPerspectiveName","selectedReleaseId","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","DEFAULT_TOOL_NAME","unstable_header","previewMode","shareAccess","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useActorRef","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","handleNavigate","urlWithoutSearch","URLSearchParams","refreshRef","onStatus","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","frameOrigin","previewOrigin","newUrl","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","livePreviewEnabled","workspace","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","IS_MAC","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","defineCreatePreviewSecretActor","currentUserId","fromPromise","createPreviewSecret","defineReadSharedSecretActor","defineResolveAllowPatternsActor","allowOption","input","URLPattern","maybePatterns","urlPatterns","urlPattern","defineResolveInitialUrlActor","studioBasePath","previewUrlOption","studioPreviewPerspective","previewSearchParam","defineResolvePreviewModeActor","draftMode","enable","defineResolvePreviewModeUrlActor","resolvedPreviewMode","urlSearchParamPreviewSecret","urlSearchParamPreviewPathname","resolveUrlFromPreviewSearchParamActor","previewSearchParamUrl","shareAccessSingletonDocument","schemaIdSingleton","schemaTypeSingleton","previewUrlSecretDocument","previewUrlMachine","log","_","cause","fromObservable","throwError","Promise","reject","has checked permissions","Boolean","previewAccessSharingCreatePermission","previewAccessSharingReadPermission","previewAccessSharingUpdatePermission","previewUrlSecretPermission","search param has new origin","can create preview secret","granted","has preview mode with created secret","has preview mode with share access","has preview mode without permissions","delays","expiredSecret","expiresAt","now","Date","getTime","invoke","checkPermissionName","onError","onSnapshot","checkingPermissions","always","guard","resolvingInitialUrl","onDone","output","resolvingAllowPatterns","resolvingUrlFromPreviewSearchParam","resolvingPreviewMode","reenter","success","readShareAccess","resolvePreviewUrl","after","usePreviewUrlActorRef","grantsStore","useGrantsStore","router","checkDocumentPermission","actorRef","useReportInvalidPreviewSearchParam","currentOrigin","nextOrigin","blockedOrigin","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","useReducer","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"debugId":null}}]
}