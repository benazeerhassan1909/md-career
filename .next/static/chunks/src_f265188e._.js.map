{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-04-03'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AACE;AADK,MAAM,aACX,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\n\nimport { apiVersion, dataset, projectId } from '../env'\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true, // Set to false if statically generating pages, using ISR or tag-based revalidation\n  stega: { studioUrl: '/studio' },\n\n})\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,MAAM,SAAS,CAAA,GAAA,iLAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,uHAAA,CAAA,YAAS;IACT,SAAA,uHAAA,CAAA,UAAO;IACP,YAAA,uHAAA,CAAA,aAAU;IACV,QAAQ;IACR,OAAO;QAAE,WAAW;IAAU;AAEhC","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/submitCareerForm.ts"],"sourcesContent":["// lib/submitCareerForm.ts\nimport { createClient } from '@sanity/client'\n\nconst client = createClient({\n    projectId: 'aiy1j8gs',\n    dataset: 'production',\n    apiVersion: '2023-01-01',\n    useCdn: false,\n    token: process.env.NEXT_PUBLIC_SANITY_WRITE_TOKEN,\n})\n\nexport const uploadResume = async (file: File) => {\n    const asset = await client.assets.upload('file', file, {\n        filename: file.name,\n        contentType: file.type,\n    });\n\n    return {\n        _type: 'file',\n        asset: {\n            _type: 'reference',\n            _ref: asset._id,\n        }\n    };\n};\n\nexport const submitCareerForm = async (formData: Record<string, any>, formFields: any[], formName: string) => {\n    // Process file uploads first\n    let resumeFile = null;\n    const fileFields = formFields.filter(field => field.type === 'file' && formData[field.name]);\n\n    if (fileFields.length > 0) {\n        resumeFile = await uploadResume(formData[fileFields[0].name]);\n    }\n\n    // Format all form fields into a text string\n    let submittedDetails = '';\n\n    formFields.forEach(field => {\n        if (field.type !== 'file') {\n            const label = field.label || field.name;\n            const value = formData[field.name] || '(not provided)';\n            submittedDetails += `${label}: ${value}\\n`;\n        }\n    });\n\n    // Create the Sanity document\n    const doc = {\n        _type: 'careerSubmission',\n        formName: formName, // Store form name in its dedicated field\n        submittedAt: new Date().toISOString(),\n        submittedDetails: submittedDetails.trim(),\n        rawData: JSON.stringify({\n            formName,\n            ...formData\n        }),\n    };\n\n    // Add resume file if uploaded\n    if (resumeFile) {\n        doc.resume = resumeFile;\n    }\n\n    return await client.create(doc);\n};"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAQf;AAPX;;AAEA,MAAM,SAAS,CAAA,GAAA,iLAAA,CAAA,eAAY,AAAD,EAAE;IACxB,WAAW;IACX,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,KAAK;AACT;AAEO,MAAM,eAAe,OAAO;IAC/B,MAAM,QAAQ,MAAM,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,MAAM;QACnD,UAAU,KAAK,IAAI;QACnB,aAAa,KAAK,IAAI;IAC1B;IAEA,OAAO;QACH,OAAO;QACP,OAAO;YACH,OAAO;YACP,MAAM,MAAM,GAAG;QACnB;IACJ;AACJ;AAEO,MAAM,mBAAmB,OAAO,UAA+B,YAAmB;IACrF,6BAA6B;IAC7B,IAAI,aAAa;IACjB,MAAM,aAAa,WAAW,MAAM,CAAC,CAAA,QAAS,MAAM,IAAI,KAAK,UAAU,QAAQ,CAAC,MAAM,IAAI,CAAC;IAE3F,IAAI,WAAW,MAAM,GAAG,GAAG;QACvB,aAAa,MAAM,aAAa,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC;IAChE;IAEA,4CAA4C;IAC5C,IAAI,mBAAmB;IAEvB,WAAW,OAAO,CAAC,CAAA;QACf,IAAI,MAAM,IAAI,KAAK,QAAQ;YACvB,MAAM,QAAQ,MAAM,KAAK,IAAI,MAAM,IAAI;YACvC,MAAM,QAAQ,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI;YACtC,oBAAoB,GAAG,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC;QAC9C;IACJ;IAEA,6BAA6B;IAC7B,MAAM,MAAM;QACR,OAAO;QACP,UAAU;QACV,aAAa,IAAI,OAAO,WAAW;QACnC,kBAAkB,iBAAiB,IAAI;QACvC,SAAS,KAAK,SAAS,CAAC;YACpB;YACA,GAAG,QAAQ;QACf;IACJ;IAEA,8BAA8B;IAC9B,IAAI,YAAY;QACZ,IAAI,MAAM,GAAG;IACjB;IAEA,OAAO,MAAM,OAAO,MAAM,CAAC;AAC/B","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/components/Form.tsx"],"sourcesContent":["'use client';\nimport React, { useState, useEffect } from 'react';\nimport { client } from '../sanity/lib/client';\nimport { submitCareerForm } from '../sanity/lib/submitCareerForm';\n\ninterface FormField {\n    name: string;\n    label: string;\n    type: string;\n    placeholder?: string;\n    isRequired?: boolean;\n    showPlaceholder?: boolean;\n    helpText?: string;\n}\n\ninterface FormConfig {\n    title?: string;\n    submitButtonText?: string;\n    id?: string;\n    fields?: FormField[];\n}\n\nconst JobApplicationForm = ({ jobId }: { jobId: string }) => {\n    const [form, setForm] = useState<FormConfig | null>(null);\n    const [formData, setFormData] = useState<Record<string, any>>({});\n    const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [submitStatus, setSubmitStatus] = useState<{\n        success?: boolean;\n        message?: string;\n    }>({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const jobData = await client.fetch(\n                    `*[_type == \"job\" && _id == $jobId][0]{\n                        ...,\n                        chooseForm->{\n                            title,\n                            submitButtonText,\n                            fields\n                        }\n                    }`,\n                    { jobId }\n                );\n\n                setForm(jobData.chooseForm);\n\n                if (jobData.chooseForm?.fields) {\n                    const initialData: Record<string, any> = {};\n                    jobData.chooseForm.fields.forEach((field: FormField) => {\n                        initialData[field.name] = field.type === 'checkbox' ? false : '';\n                    });\n                    setFormData(initialData);\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, [jobId]);\n\n    const validateForm = () => {\n        const errors: Record<string, string> = {};\n        if (!form?.fields) return false;\n\n        form.fields.forEach((field) => {\n            if (field.isRequired) {\n                if (field.type === 'checkbox' && !formData[field.name]) {\n                    errors[field.name] = 'This field is required';\n                }\n                else if (field.type !== 'checkbox' && !formData[field.name]?.toString().trim()) {\n                    errors[field.name] = 'This field is required';\n                }\n                else if (field.type === 'file' && !formData[field.name]) {\n                    errors[field.name] = 'Please upload a file';\n                }\n            }\n        });\n\n        setFormErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const { name, value, type } = e.target;\n        const checked = (e.target as HTMLInputElement).checked;\n\n        setFormData({\n            ...formData,\n            [name]: type === 'checkbox' ? checked : value,\n        });\n\n        // Clear error when user starts typing\n        if (formErrors[name]) {\n            setFormErrors(prev => {\n                const newErrors = { ...prev };\n                delete newErrors[name];\n                return newErrors;\n            });\n        }\n    };\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>, fieldName: string) => {\n        if (e.target.files && e.target.files[0]) {\n            setFormData({\n                ...formData,\n                [fieldName]: e.target.files[0],\n            });\n\n            // Clear file error when file is selected\n            if (formErrors[fieldName]) {\n                setFormErrors(prev => {\n                    const newErrors = { ...prev };\n                    delete newErrors[fieldName];\n                    return newErrors;\n                });\n            }\n        }\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!validateForm()) {\n            setSubmitStatus({\n                success: false,\n                message: 'Please fill all required fields',\n            });\n            return;\n        }\n\n        setIsSubmitting(true);\n        setSubmitStatus({});\n\n        try {\n            if (!form || !form.fields) return;\n\n            await submitCareerForm(formData, form.fields, form.title || '');\n            setSubmitStatus({\n                success: true,\n                message: 'Application submitted successfully!',\n            });\n\n            const resetData: Record<string, any> = {};\n            form.fields.forEach((field: FormField) => {\n                resetData[field.name] = field.type === 'checkbox' ? false : '';\n            });\n            setFormData(resetData);\n        } catch (error) {\n            console.error('Submission error:', error);\n            setSubmitStatus({\n                success: false,\n                message: 'Error submitting application. Please try again.',\n            });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    if (!form) {\n        return <div>Loading form...</div>;\n    }\n\n    if (!form.fields || form.fields.length === 0) {\n        return <div>No form fields configured for this job</div>;\n    }\n\n    // Group fields into pairs for the two-column layout\n    const groupedFields = [];\n    let currentGroup: FormField[] = [];\n\n    form.fields.forEach((field, index) => {\n        // If it's a textarea or checkbox, push as a single item group\n        if (field.type === 'textarea' || field.type === 'checkbox') {\n            // Push any existing group first\n            if (currentGroup.length > 0) {\n                groupedFields.push([...currentGroup]);\n                currentGroup = [];\n            }\n            groupedFields.push([field]);\n        }\n        else {\n            // Regular field - add to current group\n            currentGroup.push(field);\n\n            // Push group when we have 2 fields or it's the last field\n            if (currentGroup.length === 2 || index === form.fields.length - 1) {\n                groupedFields.push([...currentGroup]);\n                currentGroup = [];\n            }\n        }\n    });\n    console.log(form.id);\n    return (\n        <section className=\"singleopening-contact-form\">\n            <h2>{form.title || 'Apply Now'}</h2>\n            <div id={form.id} className=\"contact-form-block\">\n                <form onSubmit={handleSubmit} method=\"post\"\n                    className=\"wpcf7-form tttt mdcareer-submit-form mdinc-section-bottom-margin\"\n                    encType=\"multipart/form-data\"\n                    noValidate\n                >\n                    <div style={{ display: 'none' }}>\n                        <input type=\"hidden\" name=\"form_name\" value={form.title} />\n                    </div>\n\n                    {groupedFields.map((fieldPair, pairIndex) => (\n                        <div key={pairIndex} className=\"mdinc-form-field\">\n                            {fieldPair.map((field) => (\n                                <div key={field.name}\n                                    className={`${field.type === 'checkbox'\n                                        ? ''\n                                        : 'mdinc-form-field-wrapper-container'\n                                        } ${formErrors[field.name] ? 'has-error' : ''}`}\n                                >\n                                    {field.type !== 'checkbox' && !field.showPlaceholder && (\n                                        <label htmlFor={field.name} className=\"form-label\">\n                                            {field.label}\n                                            {field.isRequired && <span className=\"required-asterisk\">*</span>}\n                                        </label>\n                                    )}\n\n                                    {field.type === 'textarea' ? (\n                                        <>\n                                            <span className=\"wpcf7-form-control-wrap mdinc-form-field-wrappers\">\n                                                <textarea\n                                                    id={field.name}\n                                                    name={field.name}\n                                                    value={formData[field.name] || ''}\n                                                    onChange={handleChange}\n                                                    placeholder={field.showPlaceholder && field.isRequired ? field.label + ' *' : field.showPlaceholder && !field.isRequired ? field.label : field.placeholder}\n                                                    required={field.isRequired}\n                                                    className=\"wpcf7-form-control wpcf7-textarea\"\n                                                    rows={4}\n                                                />\n                                            </span>\n                                            {field.helpText && (\n                                                <div className=\"help-tip\">\n                                                    <p>{field.helpText}</p>\n                                                </div>\n                                            )}\n                                        </>\n                                    ) : field.type === 'checkbox' ? (\n                                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 md-career-custom-checkbox\">\n                                            <span className=\"wpcf7-form-control-wrap\">\n                                                <span className=\"wpcf7-form-control wpcf7-checkbox\">\n                                                    <span className=\"wpcf7-list-item\">\n                                                        <input\n                                                            id={field.name}\n                                                            name={field.name}\n                                                            type=\"checkbox\"\n                                                            checked={!!formData[field.name]}\n                                                            onChange={handleChange}\n                                                            className=\"privcy\"\n                                                        />\n                                                        <span className=\"wpcf7-list-item-label\"></span>\n                                                    </span>\n                                                </span>\n                                            </span>\n                                            <span className=\"mdinc-checkbox-content\">\n                                                <label htmlFor={field.name}>\n                                                    {field.label}\n                                                    {field.isRequired && <span className=\"required-asterisk\">*</span>}\n                                                </label>\n                                            </span>\n                                        </div>\n                                    ) : field.type === 'file' ? (\n                                        <div className=\"mdinc-source-fileUpload\">\n                                            <div className=\"mdinc-file\">\n                                                <span className=\"wpcf7-form-control-wrap mdinc-btn\">\n                                                    <input\n                                                        hidden\n                                                        id={field.name}\n                                                        name={field.name}\n                                                        type=\"file\"\n                                                        onChange={(e) => handleFileChange(e, field.name)}\n                                                        required={field.isRequired}\n                                                        className=\"wpcf7-form-control wpcf7-file wpcf7-validates-as-required mdinc-contact-form-file\"\n                                                    />\n                                                </span>\n                                                <span className=\"wpcf7-not-valid-tip file-error mdinc-info mdinc-error\">\n                                                    {formErrors[field.name] || 'No file chosen'}\n                                                </span>\n                                                <span className=\"file-format\">\n                                                    Allowed formats*: <small>.pdf, .doc</small>\n                                                </span>\n                                            </div>\n                                        </div>\n                                    ) : (\n                                        <>\n                                            <span className=\"wpcf7-form-control-wrap mdinc-form-field-wrapper\">\n                                                <input\n                                                    id={field.name}\n                                                    name={field.name}\n                                                    type={field.type}\n                                                    value={formData[field.name] || ''}\n                                                    onChange={handleChange}\n                                                    placeholder={field.showPlaceholder && field.isRequired ? field.label + ' *' : field.showPlaceholder && !field.isRequired ? field.label : field.placeholder}\n                                                    required={field.isRequired}\n                                                    className={`wpcf7-form-control wpcf7-text ${field.isRequired ? 'wpcf7-validates-as-required' : ''\n                                                        }`}\n                                                />\n                                            </span>\n                                            {field.helpText && (\n                                                <div className=\"help-tip\">\n                                                    <p>{field.helpText}</p>\n                                                </div>\n                                            )}\n                                        </>\n                                    )}\n                                    {formErrors[field.name] && field.type !== 'file' && (\n                                        <span className={`wpcf7-not-valid-tip ${field.name}-error mdinc-error`}>\n                                            {formErrors[field.name]}\n                                        </span>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 form-submit\">\n                        <input\n                            type=\"submit\"\n                            value={isSubmitting ? 'Submitting...' : form.submitButtonText || 'Apply Now'}\n                            disabled={isSubmitting}\n                            className=\"wpcf7-form-control wpcf7-submit mdinc-apply-btn\"\n                        />\n                        <span className=\"ajax-loader\"></span>\n                    </div>\n\n                    {submitStatus.message && (\n                        <div className={`wpcf7-response-output wpcf7-validation-errors ${submitStatus.success ? 'resume-submit-success' : 'general-error-form'\n                            }`} role=\"alert\">\n                            {submitStatus.message}\n                            <div className=\"mdinc-loaderOuter\">\n                                <span className=\"mdinc-loader\"></span>\n                            </div>\n                        </div>\n                    )}\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default JobApplicationForm;"],"names":[],"mappings":"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","debugId":null}}]
}