{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/presentation/resolve.ts"],"sourcesContent":["import { defineLocations, PresentationPluginOptions } from 'sanity/presentation'\n\nexport const resolve: PresentationPluginOptions['resolve'] = {\n    locations: {\n        // Add more locations for other post types\n        post: defineLocations({\n            select: {\n                title: 'title',\n                slug: 'slug.current',\n            },\n            resolve: (doc) => ({\n                locations: [\n                    {\n                        title: doc?.title || 'Untitled',\n                        href: `/posts/${doc?.slug}`,\n                    },\n                    { title: 'Posts index', href: `/posts` },\n                ],\n            }),\n        }),\n    },\n}"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAgD;IACzD,WAAW;QACP,0CAA0C;QAC1C,MAAM,CAAA,GAAA,+JAAA,CAAA,kBAAe,AAAD,EAAE;YAClB,QAAQ;gBACJ,OAAO;gBACP,MAAM;YACV;YACA,SAAS,CAAC,MAAQ,CAAC;oBACf,WAAW;wBACP;4BACI,OAAO,KAAK,SAAS;4BACrB,MAAM,CAAC,OAAO,EAAE,KAAK,MAAM;wBAC/B;wBACA;4BAAE,OAAO;4BAAe,MAAM,CAAC,MAAM,CAAC;wBAAC;qBAC1C;gBACL,CAAC;QACL;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-04-03'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blockContentType.ts"],"sourcesContent":["import {defineType, defineArrayMember} from 'sanity'\nimport {ImageIcon} from '@sanity/icons'\n\n/**\n * This is the schema type for block content used in the post document type\n * Importing this type into the studio configuration's `schema` property\n * lets you reuse it in other document types with:\n *  {\n *    name: 'someName',\n *    title: 'Some title',\n *    type: 'blockContent'\n *  }\n */\n\nexport const blockContentType = defineType({\n  title: 'Block Content',\n  name: 'blockContent',\n  type: 'array',\n  of: [\n    defineArrayMember({\n      type: 'block',\n      // Styles let you define what blocks can be marked up as. The default\n      // set corresponds with HTML tags, but you can set any title or value\n      // you want, and decide how you want to deal with it where you want to\n      // use your content.\n      styles: [\n        {title: 'Normal', value: 'normal'},\n        {title: 'H1', value: 'h1'},\n        {title: 'H2', value: 'h2'},\n        {title: 'H3', value: 'h3'},\n        {title: 'H4', value: 'h4'},\n        {title: 'Quote', value: 'blockquote'},\n      ],\n      lists: [{title: 'Bullet', value: 'bullet'}],\n      // Marks let you mark up inline text in the Portable Text Editor\n      marks: {\n        // Decorators usually describe a single property – e.g. a typographic\n        // preference or highlighting\n        decorators: [\n          {title: 'Strong', value: 'strong'},\n          {title: 'Emphasis', value: 'em'},\n        ],\n        // Annotations can be any object structure – e.g. a link or a footnote.\n        annotations: [\n          {\n            title: 'URL',\n            name: 'link',\n            type: 'object',\n            fields: [\n              {\n                title: 'URL',\n                name: 'href',\n                type: 'url',\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    // You can add additional types here. Note that you can't use\n    // primitive types such as 'string' and 'number' in the same array\n    // as a block type.\n    defineArrayMember({\n      type: 'image',\n      icon: ImageIcon,\n      options: {hotspot: true},\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    }),\n  ],\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAaO,MAAM,mBAAmB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACzC,OAAO;IACP,MAAM;IACN,MAAM;IACN,IAAI;QACF,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAChB,MAAM;YACN,qEAAqE;YACrE,qEAAqE;YACrE,sEAAsE;YACtE,oBAAoB;YACpB,QAAQ;gBACN;oBAAC,OAAO;oBAAU,OAAO;gBAAQ;gBACjC;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAS,OAAO;gBAAY;aACrC;YACD,OAAO;gBAAC;oBAAC,OAAO;oBAAU,OAAO;gBAAQ;aAAE;YAC3C,gEAAgE;YAChE,OAAO;gBACL,qEAAqE;gBACrE,6BAA6B;gBAC7B,YAAY;oBACV;wBAAC,OAAO;wBAAU,OAAO;oBAAQ;oBACjC;wBAAC,OAAO;wBAAY,OAAO;oBAAI;iBAChC;gBACD,uEAAuE;gBACvE,aAAa;oBACX;wBACE,OAAO;wBACP,MAAM;wBACN,MAAM;wBACN,QAAQ;4BACN;gCACE,OAAO;gCACP,MAAM;gCACN,MAAM;4BACR;yBACD;oBACH;iBACD;YACH;QACF;QACA,6DAA6D;QAC7D,kEAAkE;QAClE,mBAAmB;QACnB,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAChB,MAAM;YACN,MAAM,kJAAA,CAAA,YAAS;YACf,SAAS;gBAAC,SAAS;YAAI;YACvB,QAAQ;gBACN;oBACE,MAAM;oBACN,MAAM;oBACN,OAAO;gBACT;aACD;QACH;KACD;AACH","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/siteSettings.js"],"sourcesContent":["const siteSettings = {\n    name: 'siteSettings',\n    title: 'Site Settings',\n    type: 'document',\n    __experimental_actions: ['update', 'publish'], // Prevents creation and deletion\n    groups: [\n        { name: 'generalSettings', title: 'General' },\n        { name: 'headerSettings', title: 'Header' },\n        { name: 'footerSettings', title: 'Footer' },\n        { name: 'pageSettings', title: 'Pages' },\n    ],\n    fields: [\n        {\n            name: 'siteTitle',\n            title: 'Site Title',\n            type: 'string',\n            group: 'generalSettings',\n        },\n        {\n            name: 'logo',\n            title: 'Site Logo',\n            type: 'image',\n            options: { hotspot: true },\n            group: 'generalSettings',\n            fields: [\n                {\n                    name: 'alt',\n                    title: 'Alt Text',\n                    type: 'string',\n                },\n                {\n                    name: 'width',\n                    title: 'Image Width',\n                    type: 'number',\n                },\n                {\n                    name: 'height',\n                    title: 'Image Height',\n                    type: 'number',\n                },\n            ],\n        },\n        {\n            name: 'header',\n            title: 'Header Settings',\n            type: 'object',\n            group: 'headerSettings',\n            fields: [\n                {\n                    name: 'menuItems',\n                    title: 'Menu Items',\n                    type: 'array',\n                    of: [\n                        {\n                            type: 'object',\n                            fields: [\n                                { name: 'title', title: 'Title', type: 'string' },\n                                { name: 'url', title: 'URL', type: 'string' },\n                                {\n                                    name: 'subMenu',\n                                    title: 'Sub Menu',\n                                    type: 'array',\n                                    of: [\n                                        {\n                                            type: 'object',\n                                            fields: [\n                                                { name: 'title', title: 'Title', type: 'string' },\n                                                { name: 'url', title: 'URL', type: 'string' },\n                                            ],\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            name: 'footer',\n            title: 'Footer Settings',\n            type: 'object',\n            group: 'footerSettings',\n            fields: [\n                {\n                    name: 'footerText',\n                    title: 'Footer Text',\n                    type: 'string',\n                },\n                {\n                    name: 'socialLinks',\n                    title: 'Social Links',\n                    type: 'array',\n                    of: [\n                        {\n                            type: 'object',\n                            fields: [\n                                { name: 'name', title: 'Platform Name', type: 'string' },\n                                { name: 'url', title: 'URL', type: 'url' },\n                            ],\n                        },\n                    ],\n                },\n            ],\n        },\n        // Additional general settings\n        {\n            name: 'generalSettings',\n            title: 'General Settings',\n            type: 'object',\n            group: 'generalSettings',\n            fields: [\n                {\n                    name: 'favicon',\n                    title: 'Favicon',\n                    type: 'image',\n                    options: { hotspot: true },\n                },\n                {\n                    name: 'seoDescription',\n                    title: 'SEO Description',\n                    type: 'text',\n                },\n            ],\n        },\n        {\n            name: \"homePage\",\n            type: \"reference\",\n            to: [{ type: \"page\" }],\n            group: 'pageSettings',\n        },\n    ],\n};\n\nexport default siteSettings;\n"],"names":[],"mappings":";;;AAAA,MAAM,eAAe;IACjB,MAAM;IACN,OAAO;IACP,MAAM;IACN,wBAAwB;QAAC;QAAU;KAAU;IAC7C,QAAQ;QACJ;YAAE,MAAM;YAAmB,OAAO;QAAU;QAC5C;YAAE,MAAM;YAAkB,OAAO;QAAS;QAC1C;YAAE,MAAM;YAAkB,OAAO;QAAS;QAC1C;YAAE,MAAM;YAAgB,OAAO;QAAQ;KAC1C;IACD,QAAQ;QACJ;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;QACX;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,SAAS;gBAAE,SAAS;YAAK;YACzB,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;aACH;QACL;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,IAAI;wBACA;4BACI,MAAM;4BACN,QAAQ;gCACJ;oCAAE,MAAM;oCAAS,OAAO;oCAAS,MAAM;gCAAS;gCAChD;oCAAE,MAAM;oCAAO,OAAO;oCAAO,MAAM;gCAAS;gCAC5C;oCACI,MAAM;oCACN,OAAO;oCACP,MAAM;oCACN,IAAI;wCACA;4CACI,MAAM;4CACN,QAAQ;gDACJ;oDAAE,MAAM;oDAAS,OAAO;oDAAS,MAAM;gDAAS;gDAChD;oDAAE,MAAM;oDAAO,OAAO;oDAAO,MAAM;gDAAS;6CAC/C;wCACL;qCACH;gCACL;6BACH;wBACL;qBACH;gBACL;aACH;QACL;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,IAAI;wBACA;4BACI,MAAM;4BACN,QAAQ;gCACJ;oCAAE,MAAM;oCAAQ,OAAO;oCAAiB,MAAM;gCAAS;gCACvD;oCAAE,MAAM;oCAAO,OAAO;oCAAO,MAAM;gCAAM;6BAC5C;wBACL;qBACH;gBACL;aACH;QACL;QACA,8BAA8B;QAC9B;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,OAAO;YACP,QAAQ;gBACJ;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,SAAS;wBAAE,SAAS;oBAAK;gBAC7B;gBACA;oBACI,MAAM;oBACN,OAAO;oBACP,MAAM;gBACV;aACH;QACL;QACA;YACI,MAAM;YACN,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAO;aAAE;YACtB,OAAO;QACX;KACH;AACL;uCAEe","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/pageType.ts"],"sourcesContent":["import { DocumentIcon } from \"@sanity/icons\";\nimport { defineField, defineType } from \"sanity\";\n\nexport const pageType = defineType({\n    name: \"page\",\n    title: \"Page\",\n    type: \"document\",\n    icon: DocumentIcon,\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"slug\",\n            type: \"slug\",\n            options: {\n                source: \"title\",\n            },\n        }),\n        defineField({\n            name: \"content\",\n            type: \"pageBuilder\",\n        }),\n        defineField({\n            name: \"mainImage\",\n            type: \"image\",\n            options: {\n                hotspot: true,\n            },\n        }),\n    ],\n    preview: {\n        select: {\n            title: \"title\",\n            subtitle: \"slug.current\",\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IAC/B,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,kJAAA,CAAA,eAAY;IAClB,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,SAAS;gBACL,QAAQ;YACZ;QACJ;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,SAAS;gBACL,SAAS;YACb;QACJ;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,UAAU;QACd;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/pageBuilderType.ts"],"sourcesContent":["import { defineType, defineArrayMember } from \"sanity\";\n\nexport const pageBuilderType = defineType({\n    name: \"pageBuilder\",\n    type: \"array\",\n    of: [\n        defineArrayMember({ type: \"hero\" }),\n        defineArrayMember({ type: \"splitImage\" }),\n        defineArrayMember({ type: \"features\" }),\n        defineArrayMember({ type: \"faqs\" }),\n        defineArrayMember({ type: \"titleDescription\" }),\n        defineArrayMember({ type: \"logoList\" }),\n        defineArrayMember({ type: \"testimonialSlider\" }),\n        defineArrayMember({ type: \"tabSection\" }),\n        defineArrayMember({ type: \"imageTextSection\" }),\n        defineArrayMember({ type: \"cardSection\" })\n    ],\n    options: {\n        insertMenu: {\n            views: [\n                {\n                    name: \"grid\",\n                    previewImageUrl: (schemaType) => `/block-previews/${schemaType}.png`,\n                },\n            ],\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,kBAAkB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACtC,MAAM;IACN,MAAM;IACN,IAAI;QACA,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAO;QACjC,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAa;QACvC,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAW;QACrC,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAO;QACjC,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAmB;QAC7C,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAW;QACrC,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAoB;QAC9C,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAa;QACvC,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAmB;QAC7C,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE,MAAM;QAAc;KAC3C;IACD,SAAS;QACL,YAAY;YACR,OAAO;gBACH;oBACI,MAAM;oBACN,iBAAiB,CAAC,aAAe,CAAC,gBAAgB,EAAE,WAAW,IAAI,CAAC;gBACxE;aACH;QACL;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/faqType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\n\nexport const faqType = defineType({\n    name: \"faq\",\n    title: \"FAQ\",\n    type: \"document\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"body\",\n            type: \"blockContent\",\n        }),\n    ],\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IAC9B,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;AACL","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/featureType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\n\nexport const featuresType = defineType({\n    name: \"features\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"features\",\n            type: \"array\",\n            of: [\n                defineField({\n                    name: \"feature\",\n                    type: \"object\",\n                    fields: [\n                        defineField({\n                            name: \"title\",\n                            type: \"string\",\n                        }),\n                        defineField({\n                            name: \"text\",\n                            type: \"string\",\n                        }),\n                        defineField({\n                            name: \"icon\",\n                            type: \"image\",\n                        }),\n                        defineField({\n                            name: 'backgroundColor',\n                            title: 'Background Color',\n                            type: 'string',\n                            options: {\n                                list: [\n                                    { title: 'White', value: 'bg-white' },\n                                    { title: 'Gray 100', value: 'bg-gray-100' },\n                                    { title: 'Green 100', value: 'bg-green-100' },\n                                    { title: 'Yellow', value: 'bg-yellow' },\n                                    { title: 'Blue 100', value: 'bg-blue-100' },\n                                    { title: 'Red 100', value: 'bg-red-100' },\n                                    { title: 'Transparent', value: 'bg-transparent' },\n                                ],\n                                layout: 'dropdown', // or 'radio'\n                            },\n                        }),\n                    ],\n                }),\n            ],\n        }),\n    ],\n    preview: {\n        select: {\n            title: \"title\",\n        },\n        prepare({ title }) {\n            return {\n                title,\n                subtitle: \"Features\",\n            };\n        },\n    },\n\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACnC,MAAM;IACN,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,IAAI;gBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;oBACR,MAAM;oBACN,MAAM;oBACN,QAAQ;wBACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;wBACV;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;wBACV;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;wBACV;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,OAAO;4BACP,MAAM;4BACN,SAAS;gCACL,MAAM;oCACF;wCAAE,OAAO;wCAAS,OAAO;oCAAW;oCACpC;wCAAE,OAAO;wCAAY,OAAO;oCAAc;oCAC1C;wCAAE,OAAO;wCAAa,OAAO;oCAAe;oCAC5C;wCAAE,OAAO;wCAAU,OAAO;oCAAY;oCACtC;wCAAE,OAAO;wCAAY,OAAO;oCAAc;oCAC1C;wCAAE,OAAO;wCAAW,OAAO;oCAAa;oCACxC;wCAAE,OAAO;wCAAe,OAAO;oCAAiB;iCACnD;gCACD,QAAQ;4BACZ;wBACJ;qBACH;gBACL;aACH;QACL;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE;YACb,OAAO;gBACH;gBACA,UAAU;YACd;QACJ;IACJ;AAEJ","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/heroType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\nimport { TextIcon } from \"@sanity/icons\";\n\nexport const heroType = defineType({\n    name: \"hero\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"text\",\n            type: \"blockContent\",\n        }),\n        defineField({\n            name: \"image\",\n            type: \"image\",\n        }),\n    ],\n    icon: TextIcon,\n    preview: {\n        select: {\n            title: \"title\",\n            media: \"image\",\n        },\n        prepare({ title, media }) {\n            return {\n                title,\n                subtitle: \"Hero\",\n                media: media ?? TextIcon,\n            };\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IAC/B,MAAM;IACN,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;IACD,MAAM,kJAAA,CAAA,WAAQ;IACd,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;YACpB,OAAO;gBACH;gBACA,UAAU;gBACV,OAAO,SAAS,kJAAA,CAAA,WAAQ;YAC5B;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/splitImageType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\nimport { BlockContentIcon } from \"@sanity/icons\";\n\nexport const splitImageType = defineType({\n    name: \"splitImage\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"orientation\",\n            type: \"string\",\n            options: {\n                list: [\n                    { value: \"imageLeft\", title: \"Image Left\" },\n                    { value: \"imageRight\", title: \"Image Right\" },\n                ],\n            },\n        }),\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: 'description',\n            title: 'Description',\n            type: \"blockContent\",\n        }),\n        defineField({\n            name: \"authorname\",\n            title: \"Author Name\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"authordesignation\",\n            title: \"Author Designation\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"authorimage\",\n            title: \"Author Image\",\n            type: \"image\",\n        }),\n        defineField({\n            name: \"image\",\n            type: \"image\",\n        }),\n    ],\n    icon: BlockContentIcon,\n\n    preview: {\n        select: {\n            title: \"title\",\n            media: \"image\",\n        },\n        prepare({ title, media }) {\n            return {\n                title,\n                subtitle: \"Text and Image\",\n                media\n            };\n        },\n    },\n});"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,iBAAiB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACrC,MAAM;IACN,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,SAAS;gBACL,MAAM;oBACF;wBAAE,OAAO;wBAAa,OAAO;oBAAa;oBAC1C;wBAAE,OAAO;wBAAc,OAAO;oBAAc;iBAC/C;YACL;QACJ;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;KACH;IACD,MAAM,kJAAA,CAAA,mBAAgB;IAEtB,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;YACpB,OAAO;gBACH;gBACA,UAAU;gBACV;YACJ;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/titleDescriptionType.ts"],"sourcesContent":["import { defineType, defineField } from 'sanity'\n\nexport const titleDescription = defineType({\n    name: 'titleDescription',\n    title: 'Title + Description',\n    type: 'object',\n    fields: [\n        defineField({\n            name: 'title',\n            title: 'Title',\n            type: 'string',\n        }),\n        defineField({\n            name: 'description',\n            title: 'Description',\n            type: \"blockContent\",\n        }),\n    ],\n    preview: {\n        select: {\n            title: 'title',\n            subtitle: 'description',\n        },\n    },\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,mBAAmB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACvC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,UAAU;QACd;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/logoListType.ts"],"sourcesContent":["// /schemas/sections/logoList.ts\nimport { defineType, defineField } from 'sanity'\nimport { ImagesIcon } from '@sanity/icons'\n\nexport const logoList = defineType({\n    name: 'logoList',\n    title: 'Logo List',\n    type: 'object',\n    icon: ImagesIcon,\n    fields: [\n        defineField({\n            name: 'title',\n            title: 'Section Title',\n            type: 'string',\n        }),\n        defineField({\n            name: 'itemsPerRow',\n            title: 'Items per Row',\n            type: 'number',\n            initialValue: 3,\n            validation: (Rule) => Rule.min(1).max(8),\n        }),\n        defineField({\n            name: 'backgroundColor',\n            title: 'Background Color',\n            type: 'string',\n            options: {\n                list: [\n                    { title: 'White', value: 'bg-white' },\n                    { title: 'Gray 300', value: 'bg-gray-300' },\n                    { title: 'Gray 800', value: 'bg-gray-800' },\n                    { title: 'Black', value: 'bg-black' },\n                    { title: 'Blue 500', value: 'bg-blue-500' },\n                    { title: 'Red 500', value: 'bg-red-500' },\n                    { title: 'Transparent', value: 'bg-transparent' },\n                ],\n                layout: 'dropdown', // or 'radio'\n            },\n        }),\n        defineField({\n            name: 'logos',\n            title: 'Logos',\n            type: 'array',\n            of: [\n                defineField({\n                    name: 'logo',\n                    type: 'image',\n                    options: { hotspot: true },\n                    fields: [\n                        {\n                            name: 'alt',\n                            type: 'string',\n                            title: 'Alt text',\n                        },\n                    ],\n                }),\n            ],\n        }),\n    ],\n    preview: {\n        select: {\n            title: 'title',\n        },\n        prepare({ title }) {\n            return {\n                title: title || 'Logo List Section',\n                subtitle: 'Logos',\n            }\n        },\n    },\n})\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;AAChC;AACA;;;AAEO,MAAM,WAAW,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IAC/B,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,kJAAA,CAAA,aAAU;IAChB,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,cAAc;YACd,YAAY,CAAC,OAAS,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;QAC1C;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,SAAS;gBACL,MAAM;oBACF;wBAAE,OAAO;wBAAS,OAAO;oBAAW;oBACpC;wBAAE,OAAO;wBAAY,OAAO;oBAAc;oBAC1C;wBAAE,OAAO;wBAAY,OAAO;oBAAc;oBAC1C;wBAAE,OAAO;wBAAS,OAAO;oBAAW;oBACpC;wBAAE,OAAO;wBAAY,OAAO;oBAAc;oBAC1C;wBAAE,OAAO;wBAAW,OAAO;oBAAa;oBACxC;wBAAE,OAAO;wBAAe,OAAO;oBAAiB;iBACnD;gBACD,QAAQ;YACZ;QACJ;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,IAAI;gBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;oBACR,MAAM;oBACN,MAAM;oBACN,SAAS;wBAAE,SAAS;oBAAK;oBACzB,QAAQ;wBACJ;4BACI,MAAM;4BACN,MAAM;4BACN,OAAO;wBACX;qBACH;gBACL;aACH;QACL;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE;YACb,OAAO;gBACH,OAAO,SAAS;gBAChB,UAAU;YACd;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/testimonialSliderType.ts"],"sourcesContent":["import { defineType, defineField, defineArrayMember } from 'sanity'\nimport { StarIcon } from '@sanity/icons'\n\nexport const testimonialSlider = defineType({\n    name: 'testimonialSlider',\n    title: 'Testimonial Slider',\n    type: 'object',\n    icon: StarIcon,\n    fields: [\n        defineField({\n            name: 'title',\n            title: 'Slider Title',\n            type: 'string',\n        }),\n        defineField({\n            name: 'testimonials',\n            title: 'Testimonials',\n            type: 'array',\n            of: [\n                defineArrayMember({\n                    type: 'object',\n                    name: 'testimonial',\n                    fields: [\n                        defineField({ name: 'quote', type: 'text', title: 'Quote' }),\n                        defineField({ name: 'author', type: 'string', title: 'Author Name' }),\n                        defineField({ name: 'role', type: 'string', title: 'Author Role' }),\n                        defineField({ name: 'image', type: 'image', title: 'Author Image' }),\n                        defineField({\n                            name: 'backgroundColor',\n                            title: 'Background Color',\n                            type: 'string',\n                            options: {\n                                list: [\n                                    { title: 'White', value: 'bg-white' },\n                                    { title: 'Gray 100', value: 'bg-gray-100' },\n                                    { title: 'Green 100', value: 'bg-green-100' },\n                                    { title: 'Black', value: 'bg-black' },\n                                    { title: 'Blue 100', value: 'bg-blue-100' },\n                                    { title: 'Red 100', value: 'bg-red-100' },\n                                    { title: 'Transparent', value: 'bg-transparent' },\n                                ],\n                                layout: 'dropdown', // or 'radio'\n                            },\n                        }),                    ],\n                }),\n            ],\n        }),\n    ],\n    preview: {\n        select: {\n            title: 'title',\n        },\n        prepare({ title }) {\n            return {\n                title: title || 'Testimonial Slider',\n                subtitle: 'Component',\n            }\n        },\n    },\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,oBAAoB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACxC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,kJAAA,CAAA,WAAQ;IACd,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,IAAI;gBACA,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;oBACd,MAAM;oBACN,MAAM;oBACN,QAAQ;wBACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BAAE,MAAM;4BAAS,MAAM;4BAAQ,OAAO;wBAAQ;wBAC1D,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BAAE,MAAM;4BAAU,MAAM;4BAAU,OAAO;wBAAc;wBACnE,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BAAE,MAAM;4BAAQ,MAAM;4BAAU,OAAO;wBAAc;wBACjE,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BAAE,MAAM;4BAAS,MAAM;4BAAS,OAAO;wBAAe;wBAClE,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,OAAO;4BACP,MAAM;4BACN,SAAS;gCACL,MAAM;oCACF;wCAAE,OAAO;wCAAS,OAAO;oCAAW;oCACpC;wCAAE,OAAO;wCAAY,OAAO;oCAAc;oCAC1C;wCAAE,OAAO;wCAAa,OAAO;oCAAe;oCAC5C;wCAAE,OAAO;wCAAS,OAAO;oCAAW;oCACpC;wCAAE,OAAO;wCAAY,OAAO;oCAAc;oCAC1C;wCAAE,OAAO;wCAAW,OAAO;oCAAa;oCACxC;wCAAE,OAAO;wCAAe,OAAO;oCAAiB;iCACnD;gCACD,QAAQ;4BACZ;wBACJ;qBAAwB;gBAChC;aACH;QACL;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE;YACb,OAAO;gBACH,OAAO,SAAS;gBAChB,UAAU;YACd;QACJ;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/tabSectionType.ts"],"sourcesContent":["import { defineField, defineType } from 'sanity'\n\nexport const tabSection = defineType({\n    name: 'tabSection',\n    title: 'Tab Section',\n    type: 'object',\n    fields: [\n        defineField({\n            name: 'tabs',\n            title: 'Tabs',\n            type: 'array',\n            of: [\n                defineType({\n                    name: 'tab',\n                    title: 'Tab',\n                    type: 'object',\n                    fields: [\n                        defineField({\n                            name: 'title',\n                            title: 'Tab Title',\n                            type: 'string',\n                        }),\n                        defineField({\n                            name: 'image',\n                            title: 'Tab Image',\n                            type: 'image',\n                        }),\n                    ],\n                }),\n            ],\n        }),\n    ],\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,aAAa,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACjC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAM;YACN,IAAI;gBACA,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;oBACP,MAAM;oBACN,OAAO;oBACP,MAAM;oBACN,QAAQ;wBACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,OAAO;4BACP,MAAM;wBACV;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,OAAO;4BACP,MAAM;wBACV;qBACH;gBACL;aACH;QACL;KACH;AACL","debugId":null}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/imageTextType.ts"],"sourcesContent":["import { defineType, defineField } from 'sanity'\n\nexport const imageTextSection = defineType({\n    name: 'imageTextSection',\n    title: 'Image & Text Section',\n    type: 'object',\n    fields: [\n        defineField({\n            name: 'title',\n            type: 'string',\n            title: 'Title',\n        }),\n        defineField({\n            name: 'description',\n            type: 'text',\n            title: 'Description',\n        }),\n        defineField({\n            name: 'mainImage',\n            type: 'image',\n            title: 'Main Image',\n            options: {\n                hotspot: true,\n            },\n        }),\n        defineField({\n            name: 'backgroundImage',\n            type: 'image',\n            title: 'Background Image',\n            options: {\n                hotspot: true,\n            },\n        }),\n        defineField({\n            name: 'imagePosition',\n            type: 'string',\n            title: 'Main Image Position',\n            options: {\n                list: [\n                    { title: 'Left', value: 'left' },\n                    { title: 'Right', value: 'right' },\n                ],\n                layout: 'radio',\n            },\n            initialValue: 'right',\n        }),\n    ],\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,mBAAmB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACvC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;YACP,SAAS;gBACL,SAAS;YACb;QACJ;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;YACP,SAAS;gBACL,SAAS;YACb;QACJ;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;YACP,SAAS;gBACL,MAAM;oBACF;wBAAE,OAAO;wBAAQ,OAAO;oBAAO;oBAC/B;wBAAE,OAAO;wBAAS,OAAO;oBAAQ;iBACpC;gBACD,QAAQ;YACZ;YACA,cAAc;QAClB;KACH;AACL","debugId":null}},
    {"offset": {"line": 1064, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/blocks/cardSectionType.ts"],"sourcesContent":["import { defineField, defineType } from \"sanity\";\n\nexport const cardSectionType = defineType({\n    name: \"cardSection\",\n    type: \"object\",\n    fields: [\n        defineField({\n            name: \"title\",\n            type: \"string\",\n        }),\n        defineField({\n            name: \"cards\",\n            type: \"array\",\n            of: [\n                defineField({\n                    name: \"card\",\n                    type: \"object\",\n                    fields: [\n                        defineField({\n                            name: \"title\",\n                            type: \"string\",\n                        }),\n                        defineField({\n                            name: \"text\",\n                            type: \"string\",\n                        }),\n                        defineField({\n                            name: \"icon\",\n                            type: \"image\",\n                            title: \"Image\",\n                        }),\n                        defineField({\n                            name: \"bgimage\",\n                            type: \"image\",\n                            title: \"BG Image\",\n                        }),\n                        defineField({\n                            name: \"btntext\",\n                            type: \"string\",\n                            title: \"Button Text\",\n                        }),\n                        defineField({\n                            name: \"btnurl\",\n                            type: \"url\",\n                            title: \"Button URL\",\n                        }),\n                        defineField({\n                            name: 'textColor',\n                            title: 'Text Color',\n                            type: 'string',\n                            options: {\n                                list: [\n                                    { title: 'White', value: 'text-white' },\n                                    { title: 'Gray 100', value: 'text-gray-100' },\n                                    { title: 'Gray 800', value: 'text-gray-800' },\n                                    { title: 'Black', value: 'text-black' },\n                                    { title: 'Blue 500', value: 'text-blue-500' },\n                                    { title: 'Red 500', value: 'text-red-500' },\n                                    { title: 'Transparent', value: 'text-transparent' },\n                                ],\n                                layout: 'dropdown', // or 'radio'\n                            },\n                        }),\n                    ],\n                }),\n            ],\n        }),\n    ],\n    preview: {\n        select: {\n            title: \"title\",\n        },\n        prepare({ title }) {\n            return {\n                title,\n                subtitle: \"Card Section\",\n            };\n        },\n    },\n\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,kBAAkB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACtC,MAAM;IACN,MAAM;IACN,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,IAAI;gBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;oBACR,MAAM;oBACN,MAAM;oBACN,QAAQ;wBACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;wBACV;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;wBACV;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;4BACN,OAAO;wBACX;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;4BACN,OAAO;wBACX;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;4BACN,OAAO;wBACX;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,MAAM;4BACN,OAAO;wBACX;wBACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;4BACR,MAAM;4BACN,OAAO;4BACP,MAAM;4BACN,SAAS;gCACL,MAAM;oCACF;wCAAE,OAAO;wCAAS,OAAO;oCAAa;oCACtC;wCAAE,OAAO;wCAAY,OAAO;oCAAgB;oCAC5C;wCAAE,OAAO;wCAAY,OAAO;oCAAgB;oCAC5C;wCAAE,OAAO;wCAAS,OAAO;oCAAa;oCACtC;wCAAE,OAAO;wCAAY,OAAO;oCAAgB;oCAC5C;wCAAE,OAAO;wCAAW,OAAO;oCAAe;oCAC1C;wCAAE,OAAO;wCAAe,OAAO;oCAAmB;iCACrD;gCACD,QAAQ;4BACZ;wBACJ;qBACH;gBACL;aACH;QACL;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;QACX;QACA,SAAQ,EAAE,KAAK,EAAE;YACb,OAAO;gBACH;gBACA,UAAU;YACd;QACJ;IACJ;AAEJ","debugId":null}},
    {"offset": {"line": 1174, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/schemaTypes/index.ts"],"sourcesContent":["import { type SchemaTypeDefinition } from 'sanity'\n\nimport {blockContentType} from './blockContentType'\nimport siteSettings from './siteSettings'\n\nimport { pageType } from \"./pageType\";\nimport { pageBuilderType } from \"./pageBuilderType\";\nimport { faqType } from \"./blocks/faqType\";\nimport { faqsType } from \"./blocks/faqsType\";\nimport { featuresType } from \"./blocks/featureType\";\nimport { heroType } from \"./blocks/heroType\";\nimport { splitImageType } from \"./blocks/splitImageType\";\nimport { titleDescription } from './blocks/titleDescriptionType'\nimport { logoList } from './blocks/logoListType'\nimport { testimonialSlider } from \"./blocks/testimonialSliderType\";\nimport { tabSection } from './blocks/tabSectionType';\nimport { imageTextSection } from './blocks/imageTextType';\nimport { cardSectionType } from './blocks/cardSectionType';\n\nexport const schema: { types: SchemaTypeDefinition[] } = {\n  types: [blockContentType, siteSettings, pageType, pageBuilderType, faqType, tabSection, imageTextSection,\n    faqsType, featuresType, heroType, splitImageType, titleDescription, logoList, testimonialSlider, cardSectionType\n  ],\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AAEA;AACA;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEO,MAAM,SAA4C;IACvD,OAAO;QAAC,gJAAA,CAAA,mBAAgB;QAAE,4IAAA,CAAA,UAAY;QAAE,wIAAA,CAAA,WAAQ;QAAE,+IAAA,CAAA,kBAAe;QAAE,iJAAA,CAAA,UAAO;QAAE,wJAAA,CAAA,aAAU;QAAE,uJAAA,CAAA,mBAAgB;QACtG;QAAU,qJAAA,CAAA,eAAY;QAAE,kJAAA,CAAA,WAAQ;QAAE,wJAAA,CAAA,iBAAc;QAAE,8JAAA,CAAA,mBAAgB;QAAE,sJAAA,CAAA,WAAQ;QAAE,+JAAA,CAAA,oBAAiB;QAAE,yJAAA,CAAA,kBAAe;KACjH;AACH","debugId":null}},
    {"offset": {"line": 1236, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/structure.ts"],"sourcesContent":["import type { StructureResolver } from 'sanity/structure'\nimport {  CogIcon } from '@sanity/icons'\n\n\n// https://www.sanity.io/docs/structure-builder-cheat-sheet\nexport const structure: StructureResolver = (S) =>\n  S.list()\n    .title('MD Career')\n    .items([\n      S.listItem()\n        .title('Site Settings')\n        .icon(CogIcon)\n        .child(\n          S.document()\n            .schemaType('siteSettings')\n            .documentId('siteSettings') // 👈 Forces a single document\n        ),\n      S.documentTypeListItem(\"page\").title(\"Pages\"),\n      S.documentTypeListItem(\"job\").title(\"Jobs\"),\n    ])\n"],"names":[],"mappings":";;;AACA;;AAIO,MAAM,YAA+B,CAAC,IAC3C,EAAE,IAAI,GACH,KAAK,CAAC,aACN,KAAK,CAAC;QACL,EAAE,QAAQ,GACP,KAAK,CAAC,iBACN,IAAI,CAAC,kJAAA,CAAA,UAAO,EACZ,KAAK,CACJ,EAAE,QAAQ,GACP,UAAU,CAAC,gBACX,UAAU,CAAC,gBAAgB,8BAA8B;;QAEhE,EAAE,oBAAoB,CAAC,QAAQ,KAAK,CAAC;QACrC,EAAE,oBAAoB,CAAC,OAAO,KAAK,CAAC;KACrC","debugId":null}},
    {"offset": {"line": 1253, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/sanity.config.ts"],"sourcesContent":["'use client'\n\n/**\n * This configuration is used to for the Sanity Studio that’s mounted on the `/app/studio/[[...tool]]/page.tsx` route\n */\nimport { defineConfig, buildLegacyTheme } from 'sanity'\nimport { visionTool } from '@sanity/vision'\nimport { structureTool } from 'sanity/structure'\nimport { presentationTool } from 'sanity/presentation'\nimport { resolve } from '@/sanity/presentation/resolve'\n\nimport {\n  dashboardTool,\n  sanityTutorialsWidget,\n  projectUsersWidget,\n  projectInfoWidget,\n} from \"@sanity/dashboard\";\nimport { media } from 'sanity-plugin-media'\n\nimport { apiVersion, dataset, projectId } from './src/sanity/env'\nimport { schema } from './src/sanity/schemaTypes'\nimport { structure } from './src/sanity/structure'\nimport imageUrlBuilder from '@sanity/image-url';\n\n\nconst props = {\n  '--my-white': '#fff',\n  '--my-black': '#1a1a1a',\n  '--my-blue': '#4285f4',\n  '--my-red': '#db4437',\n  '--my-yellow': '#f4b400',\n  '--my-green': '#0f9d58',\n}\n\nexport const myTheme = buildLegacyTheme({\n  /* Base theme colors */\n  '--black': props['--my-black'],\n  '--white': props['--my-white'],\n\n  '--gray': '#666',\n  '--gray-base': '#666',\n\n  '--component-bg': props['--my-white'],\n  '--component-text-color': props['--my-black'],\n\n  /* Brand */\n  '--brand-primary': props['--my-blue'],\n\n  // Default button\n  '--default-button-color': '#666',\n  '--default-button-primary-color': props['--my-blue'],\n  '--default-button-success-color': props['--my-green'],\n  '--default-button-warning-color': props['--my-yellow'],\n  '--default-button-danger-color': props['--my-red'],\n\n  /* State */\n  '--state-info-color': props['--my-blue'],\n  '--state-success-color': props['--my-green'],\n  '--state-warning-color': props['--my-yellow'],\n  '--state-danger-color': props['--my-red'],\n\n  /* Navbar */\n  '--main-navigation-color': props['--my-black'],\n  '--main-navigation-color--inverted': props['--my-white'],\n\n  '--focus-color': props['--my-blue'],\n})\n\nexport default defineConfig({\n  basePath: '/studio',\n  projectId,\n  dataset,\n  schema,\n  theme: myTheme,\n  icon: () => '🎓',\n  document: {\n    newDocumentOptions: (prev, { creationContext }) => {\n      if (creationContext.type === 'global') {\n        return prev.filter((docType) => !['siteSettings', 'pageSettings'].includes(docType.templateId));\n      }\n      return prev;\n    },\n  },\n  plugins: [\n    structureTool({ structure }),\n    visionTool({ defaultApiVersion: apiVersion }),\n    presentationTool({\n      resolve,\n      previewUrl: {\n        previewMode: {\n          enable: '/api/draft-mode/enable',\n        },\n      },\n    }),\n    media(),\n    dashboardTool({\n      widgets: [\n        sanityTutorialsWidget(),\n        projectInfoWidget(),\n        projectUsersWidget(),\n      ]\n    }),\n\n  ],\n  tools: (prev, { currentUser }) => {\n    const isAdmin = currentUser?.roles.some((role) => role.name === 'administrator')\n\n    if (isAdmin) {\n      return prev\n    }\n\n    return prev.filter((tool) => tool.name !== 'vision')\n  },\n})\nconst builder = imageUrlBuilder({ projectId, dataset });\n\ninterface ImageSource {\n  asset: {\n    _ref: string;\n    _type: string;\n  };\n}\n\nexport const urlFor = (source: ImageSource) => builder.image(source);"],"names":[],"mappings":";;;;;AAEA;;CAEC,GACD;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AAtBA;;;;;;;;;;;;AAyBA,MAAM,QAAQ;IACZ,cAAc;IACd,cAAc;IACd,aAAa;IACb,YAAY;IACZ,eAAe;IACf,cAAc;AAChB;AAEO,MAAM,UAAU,CAAA,GAAA,uJAAA,CAAA,mBAAgB,AAAD,EAAE;IACtC,qBAAqB,GACrB,WAAW,KAAK,CAAC,aAAa;IAC9B,WAAW,KAAK,CAAC,aAAa;IAE9B,UAAU;IACV,eAAe;IAEf,kBAAkB,KAAK,CAAC,aAAa;IACrC,0BAA0B,KAAK,CAAC,aAAa;IAE7C,SAAS,GACT,mBAAmB,KAAK,CAAC,YAAY;IAErC,iBAAiB;IACjB,0BAA0B;IAC1B,kCAAkC,KAAK,CAAC,YAAY;IACpD,kCAAkC,KAAK,CAAC,aAAa;IACrD,kCAAkC,KAAK,CAAC,cAAc;IACtD,iCAAiC,KAAK,CAAC,WAAW;IAElD,SAAS,GACT,sBAAsB,KAAK,CAAC,YAAY;IACxC,yBAAyB,KAAK,CAAC,aAAa;IAC5C,yBAAyB,KAAK,CAAC,cAAc;IAC7C,wBAAwB,KAAK,CAAC,WAAW;IAEzC,UAAU,GACV,2BAA2B,KAAK,CAAC,aAAa;IAC9C,qCAAqC,KAAK,CAAC,aAAa;IAExD,iBAAiB,KAAK,CAAC,YAAY;AACrC;uCAEe,CAAA,GAAA,uJAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,UAAU;IACV,WAAA,oHAAA,CAAA,YAAS;IACT,SAAA,oHAAA,CAAA,UAAO;IACP,QAAA,qIAAA,CAAA,SAAM;IACN,OAAO;IACP,MAAM,IAAM;IACZ,UAAU;QACR,oBAAoB,CAAC,MAAM,EAAE,eAAe,EAAE;YAC5C,IAAI,gBAAgB,IAAI,KAAK,UAAU;gBACrC,OAAO,KAAK,MAAM,CAAC,CAAC,UAAY,CAAC;wBAAC;wBAAgB;qBAAe,CAAC,QAAQ,CAAC,QAAQ,UAAU;YAC/F;YACA,OAAO;QACT;IACF;IACA,SAAS;QACP,CAAA,GAAA,uJAAA,CAAA,gBAAa,AAAD,EAAE;YAAE,WAAA,0HAAA,CAAA,YAAS;QAAC;QAC1B,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;YAAE,mBAAmB,oHAAA,CAAA,aAAU;QAAC;QAC3C,CAAA,GAAA,+JAAA,CAAA,mBAAgB,AAAD,EAAE;YACf,SAAA,wIAAA,CAAA,UAAO;YACP,YAAY;gBACV,aAAa;oBACX,QAAQ;gBACV;YACF;QACF;QACA,CAAA,GAAA,2JAAA,CAAA,QAAK,AAAD;QACJ,CAAA,GAAA,sJAAA,CAAA,gBAAa,AAAD,EAAE;YACZ,SAAS;gBACP,CAAA,GAAA,sJAAA,CAAA,wBAAqB,AAAD;gBACpB,CAAA,GAAA,sJAAA,CAAA,oBAAiB,AAAD;gBAChB,CAAA,GAAA,sJAAA,CAAA,qBAAkB,AAAD;aAClB;QACH;KAED;IACD,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE;QAC3B,MAAM,UAAU,aAAa,MAAM,KAAK,CAAC,OAAS,KAAK,IAAI,KAAK;QAEhE,IAAI,SAAS;YACX,OAAO;QACT;QAEA,OAAO,KAAK,MAAM,CAAC,CAAC,OAAS,KAAK,IAAI,KAAK;IAC7C;AACF;AACA,MAAM,UAAU,CAAA,GAAA,gKAAA,CAAA,UAAe,AAAD,EAAE;IAAE,WAAA,oHAAA,CAAA,YAAS;IAAE,SAAA,oHAAA,CAAA,UAAO;AAAC;AAS9C,MAAM,SAAS,CAAC,SAAwB,QAAQ,KAAK,CAAC","debugId":null}}]
}