{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/components/DisableDraftMode.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DisableDraftMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisableDraftMode() from the server but DisableDraftMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DisableDraftMode.tsx <module evaluation>\",\n    \"DisableDraftMode\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qEACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/components/DisableDraftMode.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DisableDraftMode = registerClientReference(\n    function() { throw new Error(\"Attempted to call DisableDraftMode() from the server but DisableDraftMode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DisableDraftMode.tsx\",\n    \"DisableDraftMode\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iDACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-04-03'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\n\nimport { apiVersion, dataset, projectId } from '../env'\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true, // Set to false if statically generating pages, using ISR or tag-based revalidation\n  stega: { studioUrl: '/studio' },\n\n})\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,MAAM,SAAS,CAAA,GAAA,8KAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,oHAAA,CAAA,YAAS;IACT,SAAA,oHAAA,CAAA,UAAO;IACP,YAAA,oHAAA,CAAA,aAAU;IACV,QAAQ;IACR,OAAO;QAAE,WAAW;IAAU;AAEhC","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/token.ts"],"sourcesContent":["export const token = process.env.SANITY_API_READ_TOKEN\n\nif (!token) {\n    throw new Error('Missing SANITY_API_READ_TOKEN')\n}"],"names":[],"mappings":";;;AAAO,MAAM,QAAQ,QAAQ,GAAG,CAAC,qBAAqB;AAEtD,IAAI,CAAC,OAAO;IACR,MAAM,IAAI,MAAM;AACpB","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/live.ts"],"sourcesContent":["// Querying with \"sanityFetch\" will keep content automatically updated\n// Before using it, import and render \"<SanityLive />\" in your layout, see\n// https://github.com/sanity-io/next-sanity#live-content-api for more information.\nimport { defineLive } from \"next-sanity\";\nimport { client } from './client'\nimport { token } from \"@/sanity/lib/token\"\n\n\nexport const { sanityFetch, SanityLive } = defineLive({ \n  client: client.withConfig({ \n    // Live content is currently only available on the experimental API\n    // https://www.sanity.io/docs/api-versioning\n    apiVersion: 'vX' \n  }),\n  browserToken: token,\n  serverToken: token,\n});\n"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,0EAA0E;AAC1E,kFAAkF;;;;;AAClF;AACA;AACA;;;;AAGO,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2KAAA,CAAA,aAAU,AAAD,EAAE;IACpD,QAAQ,8HAAA,CAAA,SAAM,CAAC,UAAU,CAAC;QACxB,mEAAmE;QACnE,4CAA4C;QAC5C,YAAY;IACd;IACA,cAAc,6HAAA,CAAA,QAAK;IACnB,aAAa,6HAAA,CAAA,QAAK;AACpB","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/app/%28frontend%29/layout.tsx"],"sourcesContent":["import { draftMode } from \"next/headers\";\nimport { VisualEditing } from \"next-sanity\";\nimport { DisableDraftMode } from \"@/components/DisableDraftMode\";\nimport { SanityLive } from \"@/sanity/lib/live\";\nimport { Header } from \"./Header\";\nimport { Footer } from \"./Footer\";\n\nexport default async function FrontendLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <>\n      <Header />\n      <section className=\" min-h-screen bg-gray-100\">\n        {children}\n        <SanityLive />\n        {(await draftMode()).isEnabled && (\n          <>\n            <DisableDraftMode />\n            <VisualEditing />\n          </>\n        )}\n      </section>\n      <Footer />\n    </>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAIe,eAAe,eAAe,EAC3C,QAAQ,EAGR;IACA,qBACE;;0BACE,8OAAC;;;;;0BACD,8OAAC;gBAAQ,WAAU;;oBAChB;kCACD,8OAAC,4HAAA,CAAA,aAAU;;;;;oBACV,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,YAAS,AAAD,GAAG,EAAE,SAAS,kBAC5B;;0CACE,8OAAC,sIAAA,CAAA,mBAAgB;;;;;0CACjB,8OAAC,+JAAA,CAAA,gBAAa;;;;;;;;;;;;;0BAIpB,8OAAC;;;;;;;AAGP","debugId":null}}]
}