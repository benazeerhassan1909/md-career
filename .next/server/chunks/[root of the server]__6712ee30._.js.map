{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-04-03'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\n\nimport { apiVersion, dataset, projectId } from '../env'\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true, // Set to false if statically generating pages, using ISR or tag-based revalidation\n  stega: { studioUrl: '/studio' },\n\n})\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,MAAM,SAAS,CAAA,GAAA,8KAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,oHAAA,CAAA,YAAS;IACT,SAAA,oHAAA,CAAA,UAAO;IACP,YAAA,oHAAA,CAAA,aAAU;IACV,QAAQ;IACR,OAAO;QAAE,WAAW;IAAU;AAEhC","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/sanity/lib/queries.ts"],"sourcesContent":["import { defineQuery } from 'next-sanity'\n\nexport const POSTS_QUERY = defineQuery(`*[_type == \"post\" && defined(slug.current)][0...12]{\n  _id, title, slug\n}`)\n\nexport const POST_QUERY =\n  defineQuery(`*[_type == \"post\" && slug.current == $slug][0]{\n  _id,\n  title,\n  body,\n  mainImage,\n  publishedAt,\n  \"categories\": coalesce(\n    categories[]->{\n      _id,\n      slug,\n      title\n    },\n    []\n  ),\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n     \"description\": coalesce(seo.description,  \"\"),\n    \"image\": seo.image,\n    \"noIndex\": seo.noIndex == true\n  },\n  author->{\n    name,\n    image\n  },\n  relatedPosts[]{\n    _key, // required for drag and drop\n    ...@->{_id, title, slug} // get fields from the referenced post\n  }\n}`);\nexport const PAGE_QUERY =\n  defineQuery(`*[_type == \"page\" && slug.current == $slug][0]{\n     ...,\n  \"seo\": {\n    \"title\": coalesce(seo.title, title, \"\"),\n     \"description\": coalesce(seo.description,  \"\"),\n    \"image\": seo.image,\n    \"noIndex\": seo.noIndex == true\n  },\n  content[] {\n    ...,\n    \n    // Handle the 'jobs' content block\n    _type == \"jobs\" => {\n      ...,\n      jobs[]->{\n        _id,\n        title,\n        body,\n        location,\n        slug,\n        \"text\": pt::text(body)\n      }\n    },\n    \n    // Handle the 'splitImage' content block\n    _type == \"splitImage\" => {\n      ...,\n      \"video\": {\n        \"url\": video.asset->url,\n        \"assetId\": video.asset->_id\n      }\n    }\n  }\n}\n`);\n// ...all other queries\n\nexport const HOME_PAGE_QUERY = defineQuery(`*[_id == \"siteSettings\"][0]{\n    homePage->{\n      ...,\n      content[]{\n        ...,\n        _type == \"jobs\" => {\n          ...,\n          jobs[]->\n        },\n         // Handle the 'splitImage' content block\n    _type == \"splitImage\" => {\n      ...,\n      \"video\": {\n        \"url\": video.asset->url,\n        \"assetId\": video.asset->_id\n      }\n    }\n      }      \n    }\n  }`);\nexport const REDIRECTS_QUERY = defineQuery(`\n  *[_type == \"redirect\" && isEnabled == true] {\n      source,\n      destination,\n      permanent\n  }\n`);\nexport const OG_IMAGE_QUERY = defineQuery(`\n  *[_id == $id][0]{\n    title,\n    \"image\": mainImage.asset->{\n      url,\n      metadata {\n        palette\n      }\n    }\n  }    \n`);\nexport const SITEMAP_QUERY = defineQuery(`\n*[_type in [\"page\", \"post\"] && defined(slug.current)] {\n    \"href\": select(\n      _type == \"page\" => \"/\" + slug.current,\n      _type == \"post\" => \"/posts/\" + slug.current,\n      slug.current\n    ),\n    _updatedAt\n}\n`)\nexport const JOBS_QUERY = defineQuery(`\n*[_type == \"job\"]{\n  _id,\n  title,\n  body,\n  location,\n  \"text\": pt::text(body)\n}\n`)\nexport const JOB_QUERY = defineQuery(`\n*[_type == \"job\" && slug.current == $slug][0] {\n  _id,\n  heroimage,\n  title,\n  body,\n  location,\n  jobdescription,\n  skills,\n  benefits,\n  experiences,\n  benefitsheading,\n  btntext,\n  btnurl,\n  chooseForm\n}\n`);\nexport const JOB_SETTINGS_QUERY = defineQuery(\n  `*[_type == \"siteSettings\" && _id == \"siteSettings\"][0]{\n    jobCTASettings {\n      title,\n      text,\n      btnText,\n      btnurl\n    }\n  }`\n);\n\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAEO,MAAM,cAAc,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;CAEvC,CAAC;AAEK,MAAM,aACX,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4Bd,CAAC;AACK,MAAM,aACX,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCf,CAAC;AAGM,MAAM,kBAAkB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;;;;;;;;;;;;;;GAmBzC,CAAC;AACG,MAAM,kBAAkB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;AAM5C,CAAC;AACM,MAAM,iBAAiB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;;;;;AAU3C,CAAC;AACM,MAAM,gBAAgB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;;;;AAS1C,CAAC;AACM,MAAM,aAAa,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;;;AAQvC,CAAC;AACM,MAAM,YAAY,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;;;;;;;;;;;;;;AAgBtC,CAAC;AACM,MAAM,qBAAqB,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD,EAC1C,CAAC;;;;;;;GAOA,CAAC","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/app/sitemap.ts"],"sourcesContent":["import { MetadataRoute } from \"next\";\nimport { client } from \"@/sanity/lib/client\";\nimport { SITEMAP_QUERY } from \"@/sanity/lib/queries\";\n\nexport default async function sitemap(): Promise<MetadataRoute.Sitemap> {\n  try {\n    const paths = await client.fetch(SITEMAP_QUERY);\n\n    if (!paths) return [];\n\n    const baseUrl = process.env.VERCEL\n      ? `https://${process.env.VERCEL_URL}`\n      : \"http://localhost:3000\";\n\n    return paths.map((path) => ({\n      url: new URL(path.href!, baseUrl).toString(),\n      lastModified: new Date(path._updatedAt),\n      changeFrequency: \"weekly\",\n      priority: 1,\n    }));\n  } catch (error) {\n    console.error(\"Failed to generate sitemap:\", error);\n    return [];\n  }\n}"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe;IAC5B,IAAI;QACF,MAAM,QAAQ,MAAM,8HAAA,CAAA,SAAM,CAAC,KAAK,CAAC,+HAAA,CAAA,gBAAa;QAE9C,IAAI,CAAC,OAAO,OAAO,EAAE;QAErB,MAAM,UAAU,QAAQ,GAAG,CAAC,MAAM,GAC9B,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,UAAU,EAAE,GACnC;QAEJ,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;gBAC1B,KAAK,IAAI,IAAI,KAAK,IAAI,EAAG,SAAS,QAAQ;gBAC1C,cAAc,IAAI,KAAK,KAAK,UAAU;gBACtC,iBAAiB;gBACjB,UAAU;YACZ,CAAC;IACH,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/benazeer/Local%20Sites/md-career/src/app/sitemap--route-entry.js"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport * as _sitemapModule from \"./sitemap.ts\"\nimport { resolveRouteData } from 'next/dist/build/webpack/loaders/metadata/resolve-route-data'\n\nconst sitemapModule = { ..._sitemapModule }\nconst handler = sitemapModule.default\nconst generateSitemaps = sitemapModule.generateSitemaps\nconst contentType = \"application/xml\"\nconst cacheControl = \"public, max-age=0, must-revalidate\"\nconst fileType = \"sitemap\"\n\nif (typeof handler !== 'function') {\n    throw new Error('Default export is missing in \"./sitemap.ts\"')\n}\n\nexport async function GET(_, ctx) {\n    const { __metadata_id__: id, ...params } = await ctx.params || {}\n    const hasXmlExtension = id ? id.endsWith('.xml') : false\n    if (id && !hasXmlExtension) {\n        return new NextResponse('Not Found', {\n            status: 404,\n        })\n    }\n\n    if (process.env.NODE_ENV !== 'production' && sitemapModule.generateSitemaps) {\n        const sitemaps = await sitemapModule.generateSitemaps()\n        for (const item of sitemaps) {\n            if (item?.id == null) {\n                throw new Error('id property is required for every item returned from generateSitemaps')\n            }\n        }\n    }\n    \n    const targetId = id && hasXmlExtension ? id.slice(0, -4) : undefined\n    const data = await handler({ id: targetId })\n    const content = resolveRouteData(data, fileType)\n\n    return new NextResponse(content, {\n        headers: {\n            'Content-Type': contentType,\n            'Cache-Control': cacheControl,\n        },\n    })\n}\n\n\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,gBAAgB;IAAE,GAAG,qHAAc;AAAC;AAC1C,MAAM,UAAU,cAAc,OAAO;AACrC,MAAM,mBAAmB,cAAc,gBAAgB;AACvD,MAAM,cAAc;AACpB,MAAM,eAAe;AACrB,MAAM,WAAW;AAEjB,IAAI,OAAO,YAAY,YAAY;IAC/B,MAAM,IAAI,MAAM;AACpB;AAEO,eAAe,IAAI,CAAC,EAAE,GAAG;IAC5B,MAAM,EAAE,iBAAiB,EAAE,EAAE,GAAG,QAAQ,GAAG,MAAM,IAAI,MAAM,IAAI,CAAC;IAChE,MAAM,kBAAkB,KAAK,GAAG,QAAQ,CAAC,UAAU;IACnD,IAAI,MAAM,CAAC,iBAAiB;QACxB,OAAO,IAAI,8HAAA,CAAA,eAAY,CAAC,aAAa;YACjC,QAAQ;QACZ;IACJ;IAEA,IAAI,oDAAyB,gBAAgB,cAAc,gBAAgB,EAAE;QACzE,MAAM,WAAW,MAAM,cAAc,gBAAgB;QACrD,KAAK,MAAM,QAAQ,SAAU;YACzB,IAAI,MAAM,MAAM,MAAM;gBAClB,MAAM,IAAI,MAAM;YACpB;QACJ;IACJ;IAEA,MAAM,WAAW,MAAM,kBAAkB,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK;IAC3D,MAAM,OAAO,MAAM,QAAQ;QAAE,IAAI;IAAS;IAC1C,MAAM,UAAU,CAAA,GAAA,mMAAA,CAAA,mBAAgB,AAAD,EAAE,MAAM;IAEvC,OAAO,IAAI,8HAAA,CAAA,eAAY,CAAC,SAAS;QAC7B,SAAS;YACL,gBAAgB;YAChB,iBAAiB;QACrB;IACJ;AACJ","debugId":null}}]
}